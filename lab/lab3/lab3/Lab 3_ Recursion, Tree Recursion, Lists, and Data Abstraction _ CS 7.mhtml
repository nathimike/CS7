From: <Saved by Blink>
Snapshot-Content-Location: https://emziniwecode.com/cs7/lab/lab3/lab3.html
Subject: Lab 3: Recursion, Tree Recursion, Lists, and Data Abstraction | CS 7
Date: Tue, 4 Jul 2023 07:16:57 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC----"


------MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC----
Content-Type: text/html
Content-ID: <frame-58B6B759B4F281904795E9FB46DC9108@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://emziniwecode.com/cs7/lab/lab3/lab3.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8">
    <meta name=3D"description" content=3D"CS7 Lab">
    <meta name=3D"keywords" content=3D"CS7">
    <meta name=3D"author" content=3D"">
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width">

   =20
   =20
   =20
   =20
    <link rel=3D"stylesheet" href=3D"https://cdnjs.cloudflare.com/ajax/libs=
/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel=3D"stylesheet" href=3D"https://fonts.googleapis.com/css?famil=
y=3DInconsolata|Roboto:300,400,500|Work+Sans:400,700">
    <link rel=3D"stylesheet" href=3D"https://emziniwecode.com/cs7/lab/css/s=
tyle.css">
    <link rel=3D"stylesheet" href=3D"https://emziniwecode.com/cs7/lab/css/m=
ono-blue.css">
    <link rel=3D"icon" href=3D"https://emziniwecode.com/assets/images/favic=
on.ico">

   =20

    <title>
Lab 3: Recursion, Tree Recursion, Lists, and Data Abstraction | CS 7
</title>
  </head>

  <body id=3D"index" class=3D"home">

    <main id=3D"content" class=3D"container">
     =20
<div class=3D"row">
  <div class=3D"col-md-9">
    <header>
      <h1>
       =20
Lab 3: Recursion, Tree Recursion, Lists, and Data Abstraction

       =20
        <ul class=3D"inline-block list-inline">
          <li><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.zip" cl=
ass=3D"label label-outline">lab3.zip</a></li>
        </ul>
       =20
      </h1>
    </header>
   =20

<p><i>Due at 11:59pm on Sunday, July 2nd, 2023.</i></p>




<h2 id=3D"starter-files">Starter Files</h2>


<p>Download <a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.zip">lab3=
.zip</a>.
Inside the archive, you will find starter files for the questions in this l=
ab.</p>


<h2 id=3D"submission">Submission</h2>

<p>By the end of this lab, submit your code.</p>





   =20
<h1 id=3D"topics">Topics</h1>


<p>Consult this section if you need a refresher on the material for this la=
b. It's
okay to skip directly to <a href=3D"https://emziniwecode.com/cs7/lab/lab3/l=
ab3.html#required-questions">the questions</a> and refer back
here should you get stuck.</p>


        <button id=3D"toggle-1" class=3D"btn btn-outline btn-lg alwaystoggl=
e toggle" style=3D"display: inline-block;">
        Recursion
        </button>
        <div class=3D"solution toggle-1" style=3D"display: block;">

<h2 id=3D"recursion">Recursion</h2>


<p>A recursive function is a function that calls itself in its body,
either directly or indirectly. Recursive functions have three important
components:</p>

<ol>
  <li>Base case(s), the simplest possible form of the problem you're trying=
 to solve.</li>
  <li>Recursive case(s), where the function calls itself with a <em>simpler
  argument</em> as part of the computation.</li>
  <li>Using the recursive calls to solve the full problem.</li>
</ol>

<p>Let's look at the canonical example, <code>factorial</code>.</p>

<blockquote><p>Factorial, denoted with the <code>!</code> operator, is defi=
ned as:</p>

<pre><code class=3D"hljs markdown">n! =3D n <span class=3D"hljs-bullet">* (=
n-1) *</span> ... * 1</code></pre>

<p>For example, <code>5! =3D 5 * 4 * 3 * 2 * 1 =3D 120</code></p></blockquo=
te>

<p>The recursive implementation for factorial is as follows:</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">factorial</span><sp=
an class=3D"hljs-params">(n)</span>:</span>
    <span class=3D"hljs-keyword">if</span> n =3D=3D <span class=3D"hljs-num=
ber">0</span>:
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-numb=
er">1</span>
    <span class=3D"hljs-keyword">return</span> n * factorial(n - <span clas=
s=3D"hljs-number">1</span>)</code></pre>

<p>We know from its definition that 0! is 1. Since <code>n =3D=3D 0</code> =
is the smallest number we
can compute the factorial of, we use it as our base case.
The recursive step also follows from the definition of factorial, i.e., <co=
de>n! =3D
n * (n-1)!</code>.</p>

<p>The next few questions in lab will have you writing recursive
functions.  Here are some general tips:</p>

<ul>
  <li>Paradoxically, to write a recursive function, you must assume that th=
e function
  is fully functional before you finish writing it; this is called the
  <em>recursive leap of faith</em>.</li>
  <li>Consider how you can solve the current problem using the solution to
  a simpler version of the problem. The amount of work done in a recursive =
function
  can be deceptively little: remember to take the leap of faith and <em>tru=
st the recursion</em>
  to solve the slightly smaller problem without worrying about how.</li>
  <li>Think about what the answer would be in the simplest possible
  case(s). These will be your base cases - the stopping points for your
  recursive calls. Make sure to consider the possibility that you're
  missing base cases (this is a common way recursive solutions fail).</li>
  <li>It may help to write an iterative version first.</li>
</ul>

<!-- <table class=3D'table table-bordered'>

<pre><code>&lt;tr&gt;
    &lt;th&gt;Function Type:&lt;/th&gt;
    &lt;th&gt;Recusive&lt;/th&gt;
    &lt;th&gt;Iterative&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Function&lt;/td&gt;
    &lt;td&gt;&lt;pre&gt; def factorial(n):
    if n =3D=3D 0:
        return 1
    return n * factorial(n &#x2d; 1)&lt;pre&gt;&lt;/td&gt;
    &lt;td&gt;&lt;pre&gt; def factorial(n):
    total =3D 1
    while n &gt; 0:
        total *=3D n
        n &#x2d;=3D 1
    return total
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Ends calculations&lt;/td&gt;
    &lt;td&gt;When it hits the base case&lt;/td&gt;
    &lt;td&gt;When n !&gt; 0, it will end.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Means of traversal&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;factorial(&lt;strong&gt;n &#x2d; 1&lt;/strong&gt;=
&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;&lt;strong&gt;n &#x2d;=3D 1&lt;/strong&gt;&lt;/co=
de&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;</code></pre>

</table> -->
</div>

        <button id=3D"toggle-2" class=3D"btn btn-outline btn-lg alwaystoggl=
e toggle" style=3D"display: inline-block;">
        Tree Recursion
        </button>
        <div class=3D"solution toggle-2" style=3D"display: block;">

<h2 id=3D"tree-recursion">Tree Recursion</h2>


<p>A tree recursive function is a recursive function that makes more than o=
ne call
to itself, resulting in a tree-like series of calls.</p>

<p>A classic example of a tree recursion function is finding the nth <a hre=
f=3D"https://www.wikiwand.com/en/Fibonacci_number">Fibonacci
number</a>:</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">fib</span><span cla=
ss=3D"hljs-params">(n)</span>:</span>
    <span class=3D"hljs-keyword">if</span> n =3D=3D <span class=3D"hljs-num=
ber">0</span> <span class=3D"hljs-keyword">or</span> n =3D=3D <span class=
=3D"hljs-number">1</span>:
        <span class=3D"hljs-keyword">return</span> n
    <span class=3D"hljs-keyword">return</span> fib(n - <span class=3D"hljs-=
number">1</span>) + fib(n - <span class=3D"hljs-number">2</span>)</code></p=
re>

<p>Calling <code>fib(6)</code> results in the following call structure (whe=
re <code>f</code> is <code>fib</code>):</p>

<p><img class=3D"img-responsive center-block" src=3D"https://upload.wikimed=
ia.org/wikibooks/en/3/37/Algorithms-F6CallTree.png" alt=3D"Fibonacci Tree" =
title=3D"Fibonnaci Tree"></p>

<p>Each <code>f(i)</code> node represents a recursive call to <code>fib</co=
de>. Each recursive call
makes another two recursive calls. <code>f(0)</code> and <code>f(1)</code> =
do not make any recursive
calls because they are the base cases of the function. Because of these bas=
e
cases, we are able to terminate the recursion and beginning accumulating th=
e
values.</p>

<p>Generally, tree recursion is effective when you want to explore multiple
possibilities or choices at a single step. In these types of problems, you =
make
a recursive call for each choice or for a group of choices. Here are some
examples:</p>

<ul>
  <li>Given a list of paid tasks and a limited amount of time, which tasks =
should you
  choose to maximize your pay? This is actually a variation of the
  <a href=3D"https://en.wikipedia.org/wiki/Knapsack_problem">Knapsack</a> p=
roblem, which
  focuses on finding some optimal combination of different items.</li>
  <li>Suppose you are lost in a maze and see several different paths.  How =
do you
  find your way out? This is an example of path finding, and is tree recurs=
ive
  because at every step, you could have multiple directions to choose from =
that
  could lead out of the maze.</li>
  <li>Your dryer costs $2 per cycle and accepts all types of coins.  How ma=
ny
  different combinations of coins can you create to run the dryer? This is
  similar to the
  <a href=3D"http://composingprograms.com/pages/17-recursive-functions.html=
#example-partitions">partitions</a>
  problem from the textbook.
  </li></ul></div>


        <button id=3D"toggle-3" class=3D"btn btn-outline btn-lg alwaystoggl=
e toggle" style=3D"display: inline-block;">
        Lists Introduction
        </button>
        <div class=3D"solution toggle-3" style=3D"display: block;">

<h2 id=3D"lists">Lists</h2>

<p>Lists are Python data structures that can store multiple values. Each va=
lue
can be any type and can even be another list! A list is written as a comma
separated list of expressions within square brackets:</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>list_of_nums =3D [<span class=3D"hljs-number">1</span>, <span class=3D"=
hljs-number">2</span>, <span class=3D"hljs-number">3</span>, <span class=3D=
"hljs-number">4</span>]
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>list_of_bools =3D [<span clas=
s=3D"hljs-keyword">True</span>, <span class=3D"hljs-keyword">True</span>, <=
span class=3D"hljs-keyword">False</span>, <span class=3D"hljs-keyword">Fals=
e</span>]
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>nested_lists =3D [<span class=
=3D"hljs-number">1</span>, [<span class=3D"hljs-number">2</span>, <span cla=
ss=3D"hljs-number">3</span>], [<span class=3D"hljs-number">4</span>, [<span=
 class=3D"hljs-number">5</span>]]]</code></pre>

<p>Each element in a list is assigned an index. Lists are <em>zero-indexed<=
/em>, meaning
their indices start at <code>0</code> and increase in sequential order. To =
retrieve an element
from a list, use list indexing:</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; lst =3D [<span class=3D"hljs-number">6</span>, <span class=3D"hljs-number=
">5</span>, <span class=3D"hljs-number">4</span>, <span class=3D"hljs-numbe=
r">3</span>, <span class=3D"hljs-number">2</span>, <span class=3D"hljs-numb=
er">1</span>]
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; lst[<span class=3D"hljs-numbe=
r">0</span>]
<span class=3D"hljs-number">6</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; lst[<span class=3D"hljs-numbe=
r">3</span>]
<span class=3D"hljs-number">3</span></code></pre>

<p>Often times we need to know how long a list is when we're working with i=
t. To find
the length of a list, call the function <code>len</code> on it:</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; len([])
<span class=3D"hljs-number">0</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; len([<span class=3D"hljs-numb=
er">2</span>, <span class=3D"hljs-number">4</span>, <span class=3D"hljs-num=
ber">6</span>, <span class=3D"hljs-number">8</span>, <span class=3D"hljs-nu=
mber">10</span>])
<span class=3D"hljs-number">5</span></code></pre>

<blockquote><p><strong>Tip:</strong> Recall that empty lists, <code>[]</cod=
e>, are false-y values. Therefore, you
can use an if statement like the following if you only want to do operation=
s on
non-empty lists:</p>

<pre><code class=3D"hljs bash"><span class=3D"hljs-keyword">if</span> lst:
    <span class=3D"hljs-comment"># Do stuff with the elements of list</span=
></code></pre>

<p>This is equivalent to:</p>

<pre><code class=3D"hljs bash"><span class=3D"hljs-keyword">if</span> len(l=
st) &gt; 0:
    <span class=3D"hljs-comment"># Do stuff</span></code></pre></blockquote=
>

<p>You can also create a copy of some portion of the list using list slicin=
g. To slice
a list, use this syntax: <code>lst[&lt;start index&gt;:&lt;end index&gt;]</=
code>. This expression
evaluates to a new list containing the elements of <code>lst</code> startin=
g at and including
the element at <code>&lt;start index&gt;</code> up to but not including the=
 element at <code>end index</code>.</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>lst =3D [<span class=3D"hljs-keyword">True</span>, <span class=3D"hljs-=
keyword">False</span>, <span class=3D"hljs-keyword">True</span>, <span clas=
s=3D"hljs-keyword">True</span>, <span class=3D"hljs-keyword">False</span>]
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>lst[<span class=3D"hljs-numbe=
r">1</span>:<span class=3D"hljs-number">4</span>]
[<span class=3D"hljs-keyword">False</span>, <span class=3D"hljs-keyword">Tr=
ue</span>, <span class=3D"hljs-keyword">True</span>]
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>lst[:<span class=3D"hljs-numb=
er">3</span>]  <span class=3D"hljs-comment"># Start index defaults to 0</sp=
an>
[<span class=3D"hljs-keyword">True</span>, <span class=3D"hljs-keyword">Fal=
se</span>, <span class=3D"hljs-keyword">True</span>]
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>lst[<span class=3D"hljs-numbe=
r">3</span>:]  <span class=3D"hljs-comment"># End index defaults to len(lst=
)</span>
[<span class=3D"hljs-keyword">True</span>, <span class=3D"hljs-keyword">Fal=
se</span>]
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>lst[:]  <span class=3D"hljs-c=
omment"># Creates a copy of the whole list</span>
[<span class=3D"hljs-keyword">True</span>, <span class=3D"hljs-keyword">Fal=
se</span>, <span class=3D"hljs-keyword">True</span>, <span class=3D"hljs-ke=
yword">True</span>, <span class=3D"hljs-keyword">False</span>]</code></pre>

</div>

<br>

        <button id=3D"toggle-4" class=3D"btn btn-outline btn-lg alwaystoggl=
e toggle" style=3D"display: inline-block;">
        List Comprehensions
        </button>
        <div class=3D"solution toggle-4" style=3D"display: block;">

<h2 id=3D"list-comprehensions">List Comprehensions</h2>

<p>List comprehensions are a compact and powerful way of creating new lists
out of sequences. The general syntax for a list comprehension is the follow=
ing:</p>

<pre><code class=3D"hljs xml">[<span class=3D"hljs-tag">&lt;<span class=3D"=
hljs-name">expression</span>&gt;</span> for <span class=3D"hljs-tag">&lt;<s=
pan class=3D"hljs-name">element</span>&gt;</span> in <span class=3D"hljs-ta=
g">&lt;<span class=3D"hljs-name">sequence</span>&gt;</span> if <span class=
=3D"hljs-tag">&lt;<span class=3D"hljs-name">conditional</span>&gt;</span>]<=
/code></pre>

<p>The syntax is designed to read like English: <em>"Compute the expression=
 for each
element in the sequence if the conditional is true for that element."</em><=
/p>

<p>Let's see it in action:</p>

<pre><code class=3D"hljs shell"><span class=3D"hljs-meta">&gt;</span><span =
class=3D"bash">&gt;&gt; [i**2 <span class=3D"hljs-keyword">for</span> i <sp=
an class=3D"hljs-keyword">in</span> [1, 2, 3, 4] <span class=3D"hljs-keywor=
d">if</span> i % 2 =3D=3D 0]</span>
[4, 16]</code></pre>

<p>Here, for each element <code>i</code> in <code>[1, 2, 3, 4]</code> that =
satisfies <code>i % 2 =3D=3D 0</code>, we
evaluate the expression <code>i**2</code> and insert the resulting values i=
nto a new list.
In other words, this list comprehension will create a new list that contain=
s
the square of each of the even elements of the original list.</p>

<p>If we were to write this using a for statement, it would look like this:=
</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>lst =3D []
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
for</span> i <span class=3D"hljs-keyword">in</span> [<span class=3D"hljs-nu=
mber">1</span>, <span class=3D"hljs-number">2</span>, <span class=3D"hljs-n=
umber">3</span>, <span class=3D"hljs-number">4</span>]:
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> i % <span class=3D"hljs-number">2</span> =3D=3D <span class=3D"hljs-nu=
mber">0</span>:
<span class=3D"hljs-meta">... </span>        lst +=3D [i**<span class=3D"hl=
js-number">2</span>]
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>lst
[<span class=3D"hljs-number">4</span>, <span class=3D"hljs-number">16</span=
>]</code></pre>

<blockquote><p><strong>Note:</strong> The <code>if</code> clause in a list =
comprehension is optional.
For example, you can just say:</p>

<pre><code class=3D"hljs shell"><span class=3D"hljs-meta">&gt;</span><span =
class=3D"bash">&gt;&gt; [i**2 <span class=3D"hljs-keyword">for</span> i <sp=
an class=3D"hljs-keyword">in</span> [1, 2, 3, 4]]</span>
[1, 4, 9, 16]</code></pre>

</blockquote></div>

<br>

        <button id=3D"toggle-5" class=3D"btn btn-outline btn-lg alwaystoggl=
e toggle" style=3D"display: inline-block;">
        Data Abstraction
        </button>
        <div class=3D"solution toggle-5" style=3D"display: block;">

<h2 id=3D"data-abstraction">Data Abstraction</h2>


<p>Data abstraction is a powerful concept in computer science that
allows programmers to treat code as objects -- for example,
car objects, chair objects, people objects, etc. That way,
programmers don't have to worry about <em>how</em> code is
implemented -- they just have to know <em>what</em> it does.</p>

<p>Data abstraction mimics how we think about the world. When you want to
drive a car, you don't need to know how the
engine was built or what kind of material the tires are made of.
You just have to know how to turn the wheel and press the gas pedal.</p>

<p>An abstract data type consists of two types of functions:</p>

<ul>
  <li><strong>Constructors</strong>: functions that build the abstract data=
 type.</li>
  <li><strong>Selectors</strong>: functions that retrieve information from =
the data type.</li>
</ul>

<p>Programmers design ADTs to abstract away how information is stored and
calculated such that the end user does <em>not</em> need to know how constr=
uctors and
selectors are implemented. The nature of <em>abstract</em> data types allow=
s
whoever uses them to assume that the functions have been written correctly =
and
work as described.
</p></div><p></p>


<h1 id=3D"required-questions">Required Questions</h1>



<h2 id=3D"lists-practice">Lists Practice</h2>


<h3 class=3D"question" id=3D"q1">Q1: List Indexing</h3>


<p>For each of the following lists, what is the list indexing expression th=
at evaluates to
<code>7</code>? For example, if <code>x =3D [7]</code>, then the answer wou=
ld be <code>x[0]</code>. You can use the
interpreter or Python Tutor to experiment with your answers.</p>

<pre><code class=3D"hljs markdown">&gt;&gt;&gt; x =3D [1, 3, [5, 7], 9]
<div class=3D"alt prompt-1"><span class=3D"hljs-strong">_____</span>_</div>=
<div class=3D"solution prompt-1">x[<span class=3D"hljs-string">2</span>][<s=
pan class=3D"hljs-symbol">1</span>]</div>
&gt;&gt;&gt; x =3D [[3, [5, 7], 9]]
<div class=3D"alt prompt-1"><span class=3D"hljs-strong">_____</span>_</div>=
<div class=3D"solution prompt-1">x[<span class=3D"hljs-string">0</span>][<s=
pan class=3D"hljs-symbol">1</span>][<span class=3D"hljs-string">1</span>]</=
div></code></pre>
        <button id=3D"prompt-1" class=3D"btn btn-outline btn-lg solutiontog=
gle prompt">
        Toggle Solution
        </button>
       =20

<p>What would Python display? If you get stuck, try it out in the Python in=
terpreter!</p>

<pre><code class=3D"hljs markdown">&gt;&gt;&gt; lst =3D [3, 2, 7, [84, 83, =
82]]
&gt;&gt;&gt; lst[4]
<div class=3D"alt prompt-2"><span class=3D"hljs-strong">_____</span>_</div>=
<div class=3D"solution prompt-2">Error</div>
&gt;&gt;&gt; lst[<span class=3D"hljs-string">3</span>][<span class=3D"hljs-=
symbol">0</span>]
<div class=3D"alt prompt-2"><span class=3D"hljs-strong">_____</span>_</div>=
<div class=3D"solution prompt-2">84</div></code></pre>
        <button id=3D"prompt-2" class=3D"btn btn-outline btn-lg solutiontog=
gle prompt">
        Toggle Solution
        </button>
       =20

<h3 class=3D"question" id=3D"q2">Q2: Couple</h3>

<p>Implement the function <code>couple</code>, which takes in two lists and
returns a list that contains lists with i-th elements of two sequences
coupled together. You can assume the lengths of two sequences are the same.
Try using a list comprehension.</p>

<blockquote><p><em>Hint</em>: You may find the built in <a href=3D"https://=
www.w3schools.com/python/ref_func_range.asp">range</a> function helpful.</p=
></blockquote>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">couple</span><span =
class=3D"hljs-params">(s1, s2)</span>:</span>
    <span class=3D"hljs-string">"""Return a list that contains lists with i=
-th elements of two sequences
    coupled together.
    &gt;&gt;&gt; s1 =3D [1, 2, 3]
    &gt;&gt;&gt; s2 =3D [4, 5, 6]
    &gt;&gt;&gt; couple(s1, s2)
    [[1, 4], [2, 5], [3, 6]]
    &gt;&gt;&gt; s3 =3D ['c', 6]
    &gt;&gt;&gt; s4 =3D ['s', '1']
    &gt;&gt;&gt; couple(s3, s4)
    [['c', 's'], [6, '1']]
    """</span>
    <span class=3D"hljs-keyword">assert</span> len(s1) =3D=3D len(s2)
<div class=3D"alt solution-1">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-1">    <span class=3D"hljs-keyword">r=
eturn</span> [[s1[i], s2[i]] <span class=3D"hljs-keyword">for</span> i <spa=
n class=3D"hljs-keyword">in</span> range(<span class=3D"hljs-number">0</spa=
n>, len(s1))]</div></code></pre>


        <button id=3D"solution-1" class=3D"btn btn-outline btn-lg solutiont=
oggle solution">
        Toggle Solution
        </button>
       =20

<h3 class=3D"question" id=3D"q3">Q3: Enumerate</h3>

<p>Implement <code>enumerate</code>, which pairs the elements of a sequence=
 with their indices,
offset by a starting value. <code>enumerate</code> takes a sequence <code>s=
</code> and a starting value
<code>start</code>. It returns a list of pairs, in whichthe i-th element is=
 <code>i + start</code>
paired with the i-th element of <code>s</code>. For example:</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; enumerate([<span class=3D"hljs-string">'maps'</span>, <span class=3D"hljs=
-number">21</span>, <span class=3D"hljs-number">47</span>], start=3D<span c=
lass=3D"hljs-number">1</span>)
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; [[<span class=3D"hljs-number"=
>1</span>, <span class=3D"hljs-string">'maps'</span>], [<span class=3D"hljs=
-number">2</span>, <span class=3D"hljs-number">21</span>], [<span class=3D"=
hljs-number">3</span>, <span class=3D"hljs-number">47</span>]]</code></pre>

<blockquote><p><em>Hint</em>: Consider using <code>couple</code> from Quest=
ion 2!</p>

<p><em>Hint 2</em>: You may find the built in <a href=3D"https://www.w3scho=
ols.com/python/ref_func_range.asp">range</a> function helpful.</p></blockqu=
ote>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">enumerate</span><sp=
an class=3D"hljs-params">(s, start=3D<span class=3D"hljs-number">0</span>)<=
/span>:</span>
    <span class=3D"hljs-string">"""Returns a list of lists, where the i-th =
list contains i+start and
    the i-th element of s.
    &gt;&gt;&gt; enumerate([6, 1, 'a'])
    [[0, 6], [1, 1], [2, 'a']]
    &gt;&gt;&gt; enumerate('five', 5)
    [[5, 'f'], [6, 'i'], [7, 'v'], [8, 'e']]
    """</span>
<div class=3D"alt solution-2">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-2">    <span class=3D"hljs-keyword">r=
eturn</span> couple(range(start, start+len(s)), s)</div></code></pre>


        <button id=3D"solution-2" class=3D"btn btn-outline btn-lg solutiont=
oggle solution">
        Toggle Solution
        </button>
       =20


<h2 id=3D"city-data-abstraction">City Data Abstraction</h2>


<p>Say we have an abstract data type for cities. A city has a name, a latit=
ude
coordinate, and a longitude coordinate.</p>

<p>Our ADT has one <strong>constructor</strong>:</p>

<ul>
  <li><code>make_city(name, lat, lon)</code>: Creates a city object with th=
e given name, latitude,
  and longitude.</li>
</ul>

<p>We also have the following <strong>selectors</strong> in order to get th=
e information for each city:</p>

<ul>
  <li><code>get_name(city)</code>: Returns the city's name</li>
  <li><code>get_lat(city)</code>: Returns the city's latitude</li>
  <li><code>get_lon(city)</code>: Returns the city's longitude</li>
</ul>

<p>Here is how we would use the constructor and selectors to create cities =
and
extract their information:</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; berkeley =3D make_city(<span class=3D"hljs-string">'Berkeley'</span>, <sp=
an class=3D"hljs-number">122</span>, <span class=3D"hljs-number">37</span>)
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; get_name(berkeley)
<span class=3D"hljs-string">'Berkeley'</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; get_lat(berkeley)
<span class=3D"hljs-number">122</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; new_york =3D make_city(<span =
class=3D"hljs-string">'New York City'</span>, <span class=3D"hljs-number">7=
4</span>, <span class=3D"hljs-number">40</span>)
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; get_lon(new_york)
<span class=3D"hljs-number">40</span></code></pre>

<p>All of the selector and constructor functions can be found in the lab fi=
le, if you
are curious to see how they are implemented. However, the point of data
abstraction is that we do not need to know how an abstract data type is
implemented, but rather just how we can interact with and use the data type=
.</p>

<h3 class=3D"question" id=3D"q4">Q4: Distance</h3>

<p>We will now implement the function <code>distance</code>, which computes=
 the
distance between two city objects. Recall that the distance between two
coordinate pairs <code>(x1, y1)</code> and <code>(x2, y2)</code> can be fou=
nd by calculating
the <code>sqrt</code> of <code>(x1 - x2)**2 + (y1 - y2)**2</code>. We have =
already imported
<code>sqrt</code> for your convenience. Use the latitude and longitude of a=
 city as
its coordinates; you'll need to use the selectors to access this info!</p>



<pre><code class=3D"hljs python"><span class=3D"hljs-keyword">from</span> m=
ath <span class=3D"hljs-keyword">import</span> sqrt
<span class=3D"hljs-function"><span class=3D"hljs-keyword">def</span> <span=
 class=3D"hljs-title">distance</span><span class=3D"hljs-params">(city1, ci=
ty2)</span>:</span>
    <span class=3D"hljs-string">"""
    &gt;&gt;&gt; city1 =3D make_city('city1', 0, 1)
    &gt;&gt;&gt; city2 =3D make_city('city2', 0, 2)
    &gt;&gt;&gt; distance(city1, city2)
    1.0
    &gt;&gt;&gt; city3 =3D make_city('city3', 6.5, 12)
    &gt;&gt;&gt; city4 =3D make_city('city4', 2.5, 15)
    &gt;&gt;&gt; distance(city3, city4)
    5.0
    """</span>
<div class=3D"alt solution-3">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-3">    lat_1, lon_1 =3D get_lat(city1=
), get_lon(city1)
    lat_2, lon_2 =3D get_lat(city2), get_lon(city2)
    <span class=3D"hljs-keyword">return</span> sqrt((lat_1 - lat_2)**<span =
class=3D"hljs-number">2</span> + (lon_1 - lon_2)**<span class=3D"hljs-numbe=
r">2</span>)

<span class=3D"hljs-comment"># Video walkthrough: https://youtu.be/4vB06Ymr=
ico</span></div></code></pre>


        <button id=3D"solution-3" class=3D"btn btn-outline btn-lg solutiont=
oggle solution">
        Toggle Solution
        </button>
       =20

<h3 class=3D"question" id=3D"q5">Q5: Closer city</h3>

<p>Next, implement <code>closer_city</code>, a function that takes a latitu=
de,
longitude, and two cities, and returns the name of the city that is
relatively closer to the provided latitude and longitude.</p>

<p>You may only use the selectors and constructors introduced above and the
<code>distance</code> function you just defined for this question.</p>

<blockquote><p><strong>Hint</strong>: How can use your <code>distance</code=
> function to find the distance between
the given location and each of the given cities?</p></blockquote>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">closer_city</span><=
span class=3D"hljs-params">(lat, lon, city1, city2)</span>:</span>
    <span class=3D"hljs-string">"""
    Returns the name of either city1 or city2, whichever is closest to
    coordinate (lat, lon).

    &gt;&gt;&gt; berkeley =3D make_city('Berkeley', 37.87, 112.26)
    &gt;&gt;&gt; stanford =3D make_city('Stanford', 34.05, 118.25)
    &gt;&gt;&gt; closer_city(38.33, 121.44, berkeley, stanford)
    'Stanford'
    &gt;&gt;&gt; bucharest =3D make_city('Bucharest', 44.43, 26.10)
    &gt;&gt;&gt; vienna =3D make_city('Vienna', 48.20, 16.37)
    &gt;&gt;&gt; closer_city(41.29, 174.78, bucharest, vienna)
    'Bucharest'
    """</span>
<div class=3D"alt solution-4">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-4">    new_city =3D make_city(<span c=
lass=3D"hljs-string">'arb'</span>, lat, lon)
    dist1 =3D distance(city1, new_city)
    dist2 =3D distance(city2, new_city)
    <span class=3D"hljs-keyword">if</span> dist1 &lt; dist2:
         <span class=3D"hljs-keyword">return</span> get_name(city1)
    <span class=3D"hljs-keyword">return</span> get_name(city2)

<span class=3D"hljs-comment"># Video walkthrough: https://youtu.be/Owwdz_Km=
87g</span></div></code></pre>


        <button id=3D"solution-4" class=3D"btn btn-outline btn-lg solutiont=
oggle solution">
        Toggle Solution
        </button>
       =20


<h3 class=3D"question" id=3D"q6">Q6: Don't violate the abstraction barrier!=
</h3>

<blockquote><p>Note: this question has no code-writing component (if you im=
plemented <code>distance</code>
and <code>closer_city</code> correctly!)</p></blockquote>

<p>When writing functions that use an ADT, we should use the constructor(s)=
 and
selector(s) whenever possible instead of assuming the ADT's implementation.
Relying on a data abstraction's underlying implementation is known as
<em>violating the abstraction barrier</em>, and we never want to do this!</=
p>

<p>It's possible that you passed the doctests for <code>distance</code> and=
 <code>closer_city</code>
even if you violated the abstraction barrier. To check whether or not you
did so, run the following command:</p>

<p>The <code>check_abstraction</code> function exists only for the doctest,=
 which swaps
out the implementations of the <code>city</code> abstraction with something=
 else, runs
the tests from the previous two parts, then restores the original abstracti=
on.</p>

<p>The nature of the abstraction barrier guarantees that changing the imple=
mentation of an ADT
shouldn't affect the functionality of any programs that use that ADT, as lo=
ng
as the constructors and selectors were used properly.</p>

<p>If you passed the tests for the previous questions but not this one,
the fix is simple!  Just replace any code that violates the abstraction
barrier, i.e. creating a city with a new list object or indexing into a cit=
y,
with the appropriate constructor or selector.</p>

<p>Make sure that your functions pass the tests with both the first and the=
 second
implementations of the City ADT and that you understand why they should wor=
k
for both before moving on.</p>

<h2 id=3D"tree-recursion">Tree Recursion</h2>


<h3 class=3D"question" id=3D"q7">Q7: Insect Combinatorics</h3>

<p>Consider an insect in an <em>M</em> by <em>N</em> grid. The insect start=
s at the
bottom left corner, <em>(0, 0)</em>, and wants to end up at the top right
corner, <em>(M-1, N-1)</em>. The insect is only capable of moving right or
up. Write a function <code>paths</code> that takes a grid length and width
and returns the number of different paths the insect can take from the
start to the goal. (There is a <a href=3D"https://en.wikipedia.org/wiki/Clo=
sed-form_expression">closed-form solution</a> to this problem,
but try to answer it procedurally using recursion.)</p>

<p><img class=3D"img-responsive center-block" src=3D"https://emziniwecode.c=
om/cs7/lab/lab3/grid.jpeg" alt=3D"grid"></p>

<p>For example, the 2 by 2 grid has a total of two ways for the insect to
move from the start to the goal. For the 3 by 3 grid, the insect has 6
diferent paths (only 3 are shown above).</p>

<solution>

<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">paths</span><span c=
lass=3D"hljs-params">(m, n)</span>:</span>
    <span class=3D"hljs-string">"""Return the number of paths from one corn=
er of an
    M by N grid to the opposite corner.

    &gt;&gt;&gt; paths(2, 2)
    2
    &gt;&gt;&gt; paths(5, 7)
    210
    &gt;&gt;&gt; paths(117, 1)
    1
    &gt;&gt;&gt; paths(1, 157)
    1
    """</span>
    <span class=3D"hljs-string">"*** YOUR CODE HERE ***"</span>
</code></pre>

</solution>

<h3 class=3D"question" id=3D"q8">Q8: Maximum Subsequence</h3>

<p>A subsequence of a number is a series of (not necessarily contiguous) di=
gits of the number.
For example, 12345 has subsequences that include 123, 234, 124, 245, etc. Y=
our task is to get
the maximum subsequence below a certain length.</p>

<solution>

<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">max_subseq</span><s=
pan class=3D"hljs-params">(n, t)</span>:</span>
    <span class=3D"hljs-string">"""
    Return the maximum subsequence of length at most t that can be found in=
 the given number n.
    For example, for n =3D 20125 and t =3D 3, we have that the subsequences=
 are
        2
        0
        1
        2
        5
        20
        21
        22
        25
        01
        02
        05
        12
        15
        25
        201
        202
        205
        212
        215
        225
        012
        015
        025
        125
    and of these, the maxumum number is 225, so our answer is 225.

    &gt;&gt;&gt; max_subseq(20125, 3)
    225
    &gt;&gt;&gt; max_subseq(20125, 5)
    20125
    &gt;&gt;&gt; max_subseq(20125, 6) # note that 20125 =3D=3D 020125
    20125
    &gt;&gt;&gt; max_subseq(12345, 3)
    345
    &gt;&gt;&gt; max_subseq(12345, 0) # 0 is of length 0
    0
    &gt;&gt;&gt; max_subseq(12345, 1)
    5
    """</span>
    <span class=3D"hljs-string">"*** YOUR CODE HERE ***"</span>
</code></pre>

<p>There are two key insights for this problem:</p>

<ul>
  <li>You need to split into the cases where the ones digit is used and the=
 one where it is not. In the case where it is, we want to reduce <code>t</c=
ode> since we used one of the digits, and in the case where it isn't we do =
not.</li>
  <li>In the case where we are using the ones digit, you need to put the di=
git back onto the end, and the way to attach a digit <code>d</code> to the =
end of a number <code>n</code> is <code>10 * n + d</code>.
  </li>
</ul>


<h1 id=3D"optional-question">Optional Question</h1>


<h3 class=3D"question" id=3D"q9">Q9: Squares only</h3>

<p>Implement the function <code>squares</code>, which takes in a list of po=
sitive integers.
It returns a list that contains the square roots of the elements of the ori=
ginal
list that are perfect squares. Try using a list comprehension.</p>

<blockquote><p>You may find the <code>round</code> function useful.</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; round(<span class=3D"hljs-number">10.5</span>)
<span class=3D"hljs-number">10</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; round(<span class=3D"hljs-num=
ber">10.51</span>)
<span class=3D"hljs-number">11</span></code></pre></blockquote>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">squares</span><span=
 class=3D"hljs-params">(s)</span>:</span>
    <span class=3D"hljs-string">"""Returns a new list containing square roo=
ts of the elements of the
    original list that are perfect squares.

    &gt;&gt;&gt; seq =3D [8, 49, 8, 9, 2, 1, 100, 102]
    &gt;&gt;&gt; squares(seq)
    [7, 3, 1, 10]
    &gt;&gt;&gt; seq =3D [500, 30]
    &gt;&gt;&gt; squares(seq)
    []
    """</span>
<div class=3D"alt solution-9">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-9">    <span class=3D"hljs-keyword">r=
eturn</span> [round(n ** <span class=3D"hljs-number">0.5</span>) <span clas=
s=3D"hljs-keyword">for</span> n <span class=3D"hljs-keyword">in</span> s <s=
pan class=3D"hljs-keyword">if</span> n =3D=3D round(n ** <span class=3D"hlj=
s-number">0.5</span>) ** <span class=3D"hljs-number">2</span>]</div></code>=
</pre>

<div class=3D"solution solution-9">

<p>It might be helpful to construct a skeleton list comprehension to begin
with:</p>

<pre><code class=3D"hljs bash">[sqrt(x) <span class=3D"hljs-keyword">for</s=
pan> x <span class=3D"hljs-keyword">in</span> s <span class=3D"hljs-keyword=
">if</span> is_perfect_square(x)]</code></pre>

<p>This is great, but it requires that we have an <code>is_perfect_square</=
code>
function. How might we check if something is a perfect square?</p>

<ul>
  <li>If the square root of a number is a whole number, then it is a perfec=
t
  square. For example, <code>sqrt(61) =3D 7.81024...</code> (not a perfect =
square) and
  <code>sqrt(49) =3D 7</code> (perfect square).</li>
  <li><p>Once we obtain the square root of the number, we just need to chec=
k if
  something is a whole number. The <code>is_perfect_square</code> function =
might
  look like:</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">is_perfect_square</=
span><span class=3D"hljs-params">(x)</span>:</span>
    <span class=3D"hljs-keyword">return</span> is_whole(sqrt(x))</code></pr=
e></li>
  <li>One last piece of the puzzle: to check if a number is whole, we just
  need to see if it has a decimal or not. The way we've chosen to do it in
  the solution is to compare the original number to the round version
  (thus removing all decimals), but a technique employing floor division
  (<code>//</code>) or something else entirely could work too.</li>
</ul>

<p>We've written all these helper functions to solve this problem, but they
are actually all very short. Therefore, we can just copy the body of each
into the original list comprehension, arriving at the solution we finally
present.</p>

<p>Video walkthrough: <a href=3D"https://youtu.be/YwLFB9paET0">https://yout=
u.be/YwLFB9paET0</a></p>

</div>

        <button id=3D"solution-9" class=3D"btn btn-outline btn-lg solutiont=
oggle solution">
        Toggle Solution
        </button>
       =20

<h3 class=3D"question" id=3D"q10">Q10: Key of Min Value</h3>

<p>The built-in <code>min</code> function takes a collection of elements (s=
uch as a list or a
dictionary) and returns the collection's smallest element. The <code>min</c=
ode> function
also takes in an optional keyword argument called <code>key</code>, which m=
ust be a
one-argument function. The <code>key</code> function is called on each elem=
ent of the
collection, and the return values are used for comparison. For example:</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; min([-<span class=3D"hljs-number">1</span>, <span class=3D"hljs-number">0=
</span>, <span class=3D"hljs-number">1</span>])                    <span cl=
ass=3D"hljs-comment"># no key argument; return smallest input</span>
-<span class=3D"hljs-number">1</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; min([-<span class=3D"hljs-num=
ber">1</span>, <span class=3D"hljs-number">0</span>, <span class=3D"hljs-nu=
mber">1</span>], key=3Dlambda <span class=3D"hljs-symbol">x:</span> x*x) <s=
pan class=3D"hljs-comment"># return input with the smallest square</span>
<span class=3D"hljs-number">0</span></code></pre>

<p>Implement <code>key_of_min_value</code>, which takes in a dictionary <co=
de>d</code> and returns the
key that corresponds to the minimum value in <code>d</code>. This behavior =
differs from
just calling <code>min</code> on a dictionary, which would return the small=
est key. <em>Make
sure your solution is only one line and uses the <code>min</code> function.=
</em></p>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">key_of_min_value</s=
pan><span class=3D"hljs-params">(d)</span>:</span>
    <span class=3D"hljs-string">"""Returns the key in a dict d that corresp=
onds to the minimum value of d.
    &gt;&gt;&gt; letters =3D {'a': 6, 'b': 5, 'c': 4, 'd': 5}
    &gt;&gt;&gt; min(letters)
    'a'
    &gt;&gt;&gt; key_of_min_value(letters)
    'c'
    """</span>
<div class=3D"alt solution-6">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-6">    <span class=3D"hljs-keyword">r=
eturn</span> min(d, key=3D<span class=3D"hljs-keyword">lambda</span> x: d[x=
])</div></code></pre>


        <button id=3D"solution-6" class=3D"btn btn-outline btn-lg solutiont=
oggle solution">
        Toggle Solution
        </button>
       =20

  </solution></div>

  <div class=3D"col-md-3 sticky">
    <nav class=3D"hidden-print hidden-sm hidden-xs sidebar">
      <ul class=3D"nav nav-stacked noselect">
  <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.html=
#topics">Topics</a></li>
  <ul class=3D"nav nav-stacked noselect">
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#recursion">Recursion</a></li>
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#tree-recursion">Tree Recursion</a></li>
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#lists">Lists</a></li>
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#list-comprehensions">List Comprehensions</a></li>
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#data-abstraction">Data Abstraction</a></li>
  </ul>
  <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.html=
#required-questions">Required Questions</a></li>
  <ul class=3D"nav nav-stacked noselect">
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#lists-practice">Lists Practice</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.=
html#q1">Q1: List Indexing</a></li>
      <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.=
html#q2">Q2: Couple</a></li>
      <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.=
html#q3">Q3: Enumerate</a></li>
    </ul>
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#city-data-abstraction">City Data Abstraction</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.=
html#q4">Q4: Distance</a></li>
      <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.=
html#q5">Q5: Closer city</a></li>
      <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.=
html#q6">Q6: Don't violate the abstraction barrier!</a></li>
    </ul>
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#tree-recursion">Tree Recursion</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.=
html#q7">Q7: Insect Combinatorics</a></li>
      <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.=
html#q8">Q8: Maximum Subsequence</a></li>
    </ul>
  <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.html=
#optional-question">Optional Question</a></li>
  <ul class=3D"nav nav-stacked noselect">
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#q9">Q9: Squares only</a></li>
    <li class=3D""><a href=3D"https://emziniwecode.com/cs7/lab/lab3/lab3.ht=
ml#q10">Q10: Key of Min Value</a></li>
  </ul>
</ul>
    </ul></nav>
  </div>
</div>

    </main>









 =20
</body></html>
------MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css

@charset "utf-8";

html { font-family: sans-serif; text-size-adjust: 100%; }

body { margin: 0px; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
menu, nav, section, summary { display: block; }

audio, canvas, progress, video { display: inline-block; vertical-align: bas=
eline; }

audio:not([controls]) { display: none; height: 0px; }

[hidden], template { display: none; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, strong { font-weight: 700; }

dfn { font-style: italic; }

h1 { margin: 0.67em 0px; font-size: 2em; }

mark { color: rgb(0, 0, 0); background: rgb(255, 255, 0); }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 1em 40px; }

hr { height: 0px; box-sizing: content-box; }

pre { overflow: auto; }

code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

button, input, optgroup, select, textarea { margin: 0px; font: inherit; col=
or: inherit; }

button { overflow: visible; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { box-sizing: content-box; appearance: textfield; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { appearance: none; }

fieldset { padding: 0.35em 0.625em 0.75em; margin: 0px 2px; border: 1px sol=
id silver; }

legend { padding: 0px; border: 0px; }

textarea { overflow: auto; }

optgroup { font-weight: 700; }

table { border-spacing: 0px; border-collapse: collapse; }

td, th { padding: 0px; }

@media print {
  *, ::after, ::before { color: rgb(0, 0, 0) !important; text-shadow: none =
!important; background: 0px 0px !important; box-shadow: none !important; }
  a, a:visited { text-decoration: underline; }
  a[href]::after { content: " (" attr(href) ")"; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  a[href^=3D"javascript:"]::after, a[href^=3D"#"]::after { content: ""; }
  blockquote, pre { border: 1px solid rgb(153, 153, 153); break-inside: avo=
id; }
  thead { display: table-header-group; }
  img, tr { break-inside: avoid; }
  img { max-width: 100% !important; }
  h2, h3, p { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  .navbar { display: none; }
  .btn > .caret, .dropup > .btn > .caret { border-top-color: rgb(0, 0, 0) !=
important; }
  .label { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered td, .table-bordered th { border: 1px solid rgb(221, 221, =
221) !important; }
}

@font-face { font-family: "Glyphicons Halflings"; src: url("../fonts/glyphi=
cons-halflings-regular.woff2") format("woff2"), url("../fonts/glyphicons-ha=
lflings-regular.woff") format("woff"), url("../fonts/glyphicons-halflings-r=
egular.ttf") format("truetype"); }

.glyphicon { position: relative; top: 1px; display: inline-block; font-fami=
ly: "Glyphicons Halflings"; font-style: normal; font-weight: 400; line-heig=
ht: 1; -webkit-font-smoothing: antialiased; }

.glyphicon-asterisk::before { content: "*"; }

.glyphicon-plus::before { content: "+"; }

.glyphicon-eur::before, .glyphicon-euro::before { content: "=E2=82=AC"; }

.glyphicon-minus::before { content: "=E2=88=92"; }

.glyphicon-cloud::before { content: "=E2=98=81"; }

.glyphicon-envelope::before { content: "=E2=9C=89"; }

.glyphicon-pencil::before { content: "=E2=9C=8F"; }

.glyphicon-glass::before { content: "=EE=80=81"; }

.glyphicon-music::before { content: "=EE=80=82"; }

.glyphicon-search::before { content: "=EE=80=83"; }

.glyphicon-heart::before { content: "=EE=80=85"; }

.glyphicon-star::before { content: "=EE=80=86"; }

.glyphicon-star-empty::before { content: "=EE=80=87"; }

.glyphicon-user::before { content: "=EE=80=88"; }

.glyphicon-film::before { content: "=EE=80=89"; }

.glyphicon-th-large::before { content: "=EE=80=90"; }

.glyphicon-th::before { content: "=EE=80=91"; }

.glyphicon-th-list::before { content: "=EE=80=92"; }

.glyphicon-ok::before { content: "=EE=80=93"; }

.glyphicon-remove::before { content: "=EE=80=94"; }

.glyphicon-zoom-in::before { content: "=EE=80=95"; }

.glyphicon-zoom-out::before { content: "=EE=80=96"; }

.glyphicon-off::before { content: "=EE=80=97"; }

.glyphicon-signal::before { content: "=EE=80=98"; }

.glyphicon-cog::before { content: "=EE=80=99"; }

.glyphicon-trash::before { content: "=EE=80=A0"; }

.glyphicon-home::before { content: "=EE=80=A1"; }

.glyphicon-file::before { content: "=EE=80=A2"; }

.glyphicon-time::before { content: "=EE=80=A3"; }

.glyphicon-road::before { content: "=EE=80=A4"; }

.glyphicon-download-alt::before { content: "=EE=80=A5"; }

.glyphicon-download::before { content: "=EE=80=A6"; }

.glyphicon-upload::before { content: "=EE=80=A7"; }

.glyphicon-inbox::before { content: "=EE=80=A8"; }

.glyphicon-play-circle::before { content: "=EE=80=A9"; }

.glyphicon-repeat::before { content: "=EE=80=B0"; }

.glyphicon-refresh::before { content: "=EE=80=B1"; }

.glyphicon-list-alt::before { content: "=EE=80=B2"; }

.glyphicon-lock::before { content: "=EE=80=B3"; }

.glyphicon-flag::before { content: "=EE=80=B4"; }

.glyphicon-headphones::before { content: "=EE=80=B5"; }

.glyphicon-volume-off::before { content: "=EE=80=B6"; }

.glyphicon-volume-down::before { content: "=EE=80=B7"; }

.glyphicon-volume-up::before { content: "=EE=80=B8"; }

.glyphicon-qrcode::before { content: "=EE=80=B9"; }

.glyphicon-barcode::before { content: "=EE=81=80"; }

.glyphicon-tag::before { content: "=EE=81=81"; }

.glyphicon-tags::before { content: "=EE=81=82"; }

.glyphicon-book::before { content: "=EE=81=83"; }

.glyphicon-bookmark::before { content: "=EE=81=84"; }

.glyphicon-print::before { content: "=EE=81=85"; }

.glyphicon-camera::before { content: "=EE=81=86"; }

.glyphicon-font::before { content: "=EE=81=87"; }

.glyphicon-bold::before { content: "=EE=81=88"; }

.glyphicon-italic::before { content: "=EE=81=89"; }

.glyphicon-text-height::before { content: "=EE=81=90"; }

.glyphicon-text-width::before { content: "=EE=81=91"; }

.glyphicon-align-left::before { content: "=EE=81=92"; }

.glyphicon-align-center::before { content: "=EE=81=93"; }

.glyphicon-align-right::before { content: "=EE=81=94"; }

.glyphicon-align-justify::before { content: "=EE=81=95"; }

.glyphicon-list::before { content: "=EE=81=96"; }

.glyphicon-indent-left::before { content: "=EE=81=97"; }

.glyphicon-indent-right::before { content: "=EE=81=98"; }

.glyphicon-facetime-video::before { content: "=EE=81=99"; }

.glyphicon-picture::before { content: "=EE=81=A0"; }

.glyphicon-map-marker::before { content: "=EE=81=A2"; }

.glyphicon-adjust::before { content: "=EE=81=A3"; }

.glyphicon-tint::before { content: "=EE=81=A4"; }

.glyphicon-edit::before { content: "=EE=81=A5"; }

.glyphicon-share::before { content: "=EE=81=A6"; }

.glyphicon-check::before { content: "=EE=81=A7"; }

.glyphicon-move::before { content: "=EE=81=A8"; }

.glyphicon-step-backward::before { content: "=EE=81=A9"; }

.glyphicon-fast-backward::before { content: "=EE=81=B0"; }

.glyphicon-backward::before { content: "=EE=81=B1"; }

.glyphicon-play::before { content: "=EE=81=B2"; }

.glyphicon-pause::before { content: "=EE=81=B3"; }

.glyphicon-stop::before { content: "=EE=81=B4"; }

.glyphicon-forward::before { content: "=EE=81=B5"; }

.glyphicon-fast-forward::before { content: "=EE=81=B6"; }

.glyphicon-step-forward::before { content: "=EE=81=B7"; }

.glyphicon-eject::before { content: "=EE=81=B8"; }

.glyphicon-chevron-left::before { content: "=EE=81=B9"; }

.glyphicon-chevron-right::before { content: "=EE=82=80"; }

.glyphicon-plus-sign::before { content: "=EE=82=81"; }

.glyphicon-minus-sign::before { content: "=EE=82=82"; }

.glyphicon-remove-sign::before { content: "=EE=82=83"; }

.glyphicon-ok-sign::before { content: "=EE=82=84"; }

.glyphicon-question-sign::before { content: "=EE=82=85"; }

.glyphicon-info-sign::before { content: "=EE=82=86"; }

.glyphicon-screenshot::before { content: "=EE=82=87"; }

.glyphicon-remove-circle::before { content: "=EE=82=88"; }

.glyphicon-ok-circle::before { content: "=EE=82=89"; }

.glyphicon-ban-circle::before { content: "=EE=82=90"; }

.glyphicon-arrow-left::before { content: "=EE=82=91"; }

.glyphicon-arrow-right::before { content: "=EE=82=92"; }

.glyphicon-arrow-up::before { content: "=EE=82=93"; }

.glyphicon-arrow-down::before { content: "=EE=82=94"; }

.glyphicon-share-alt::before { content: "=EE=82=95"; }

.glyphicon-resize-full::before { content: "=EE=82=96"; }

.glyphicon-resize-small::before { content: "=EE=82=97"; }

.glyphicon-exclamation-sign::before { content: "=EE=84=81"; }

.glyphicon-gift::before { content: "=EE=84=82"; }

.glyphicon-leaf::before { content: "=EE=84=83"; }

.glyphicon-fire::before { content: "=EE=84=84"; }

.glyphicon-eye-open::before { content: "=EE=84=85"; }

.glyphicon-eye-close::before { content: "=EE=84=86"; }

.glyphicon-warning-sign::before { content: "=EE=84=87"; }

.glyphicon-plane::before { content: "=EE=84=88"; }

.glyphicon-calendar::before { content: "=EE=84=89"; }

.glyphicon-random::before { content: "=EE=84=90"; }

.glyphicon-comment::before { content: "=EE=84=91"; }

.glyphicon-magnet::before { content: "=EE=84=92"; }

.glyphicon-chevron-up::before { content: "=EE=84=93"; }

.glyphicon-chevron-down::before { content: "=EE=84=94"; }

.glyphicon-retweet::before { content: "=EE=84=95"; }

.glyphicon-shopping-cart::before { content: "=EE=84=96"; }

.glyphicon-folder-close::before { content: "=EE=84=97"; }

.glyphicon-folder-open::before { content: "=EE=84=98"; }

.glyphicon-resize-vertical::before { content: "=EE=84=99"; }

.glyphicon-resize-horizontal::before { content: "=EE=84=A0"; }

.glyphicon-hdd::before { content: "=EE=84=A1"; }

.glyphicon-bullhorn::before { content: "=EE=84=A2"; }

.glyphicon-bell::before { content: "=EE=84=A3"; }

.glyphicon-certificate::before { content: "=EE=84=A4"; }

.glyphicon-thumbs-up::before { content: "=EE=84=A5"; }

.glyphicon-thumbs-down::before { content: "=EE=84=A6"; }

.glyphicon-hand-right::before { content: "=EE=84=A7"; }

.glyphicon-hand-left::before { content: "=EE=84=A8"; }

.glyphicon-hand-up::before { content: "=EE=84=A9"; }

.glyphicon-hand-down::before { content: "=EE=84=B0"; }

.glyphicon-circle-arrow-right::before { content: "=EE=84=B1"; }

.glyphicon-circle-arrow-left::before { content: "=EE=84=B2"; }

.glyphicon-circle-arrow-up::before { content: "=EE=84=B3"; }

.glyphicon-circle-arrow-down::before { content: "=EE=84=B4"; }

.glyphicon-globe::before { content: "=EE=84=B5"; }

.glyphicon-wrench::before { content: "=EE=84=B6"; }

.glyphicon-tasks::before { content: "=EE=84=B7"; }

.glyphicon-filter::before { content: "=EE=84=B8"; }

.glyphicon-briefcase::before { content: "=EE=84=B9"; }

.glyphicon-fullscreen::before { content: "=EE=85=80"; }

.glyphicon-dashboard::before { content: "=EE=85=81"; }

.glyphicon-paperclip::before { content: "=EE=85=82"; }

.glyphicon-heart-empty::before { content: "=EE=85=83"; }

.glyphicon-link::before { content: "=EE=85=84"; }

.glyphicon-phone::before { content: "=EE=85=85"; }

.glyphicon-pushpin::before { content: "=EE=85=86"; }

.glyphicon-usd::before { content: "=EE=85=88"; }

.glyphicon-gbp::before { content: "=EE=85=89"; }

.glyphicon-sort::before { content: "=EE=85=90"; }

.glyphicon-sort-by-alphabet::before { content: "=EE=85=91"; }

.glyphicon-sort-by-alphabet-alt::before { content: "=EE=85=92"; }

.glyphicon-sort-by-order::before { content: "=EE=85=93"; }

.glyphicon-sort-by-order-alt::before { content: "=EE=85=94"; }

.glyphicon-sort-by-attributes::before { content: "=EE=85=95"; }

.glyphicon-sort-by-attributes-alt::before { content: "=EE=85=96"; }

.glyphicon-unchecked::before { content: "=EE=85=97"; }

.glyphicon-expand::before { content: "=EE=85=98"; }

.glyphicon-collapse-down::before { content: "=EE=85=99"; }

.glyphicon-collapse-up::before { content: "=EE=85=A0"; }

.glyphicon-log-in::before { content: "=EE=85=A1"; }

.glyphicon-flash::before { content: "=EE=85=A2"; }

.glyphicon-log-out::before { content: "=EE=85=A3"; }

.glyphicon-new-window::before { content: "=EE=85=A4"; }

.glyphicon-record::before { content: "=EE=85=A5"; }

.glyphicon-save::before { content: "=EE=85=A6"; }

.glyphicon-open::before { content: "=EE=85=A7"; }

.glyphicon-saved::before { content: "=EE=85=A8"; }

.glyphicon-import::before { content: "=EE=85=A9"; }

.glyphicon-export::before { content: "=EE=85=B0"; }

.glyphicon-send::before { content: "=EE=85=B1"; }

.glyphicon-floppy-disk::before { content: "=EE=85=B2"; }

.glyphicon-floppy-saved::before { content: "=EE=85=B3"; }

.glyphicon-floppy-remove::before { content: "=EE=85=B4"; }

.glyphicon-floppy-save::before { content: "=EE=85=B5"; }

.glyphicon-floppy-open::before { content: "=EE=85=B6"; }

.glyphicon-credit-card::before { content: "=EE=85=B7"; }

.glyphicon-transfer::before { content: "=EE=85=B8"; }

.glyphicon-cutlery::before { content: "=EE=85=B9"; }

.glyphicon-header::before { content: "=EE=86=80"; }

.glyphicon-compressed::before { content: "=EE=86=81"; }

.glyphicon-earphone::before { content: "=EE=86=82"; }

.glyphicon-phone-alt::before { content: "=EE=86=83"; }

.glyphicon-tower::before { content: "=EE=86=84"; }

.glyphicon-stats::before { content: "=EE=86=85"; }

.glyphicon-sd-video::before { content: "=EE=86=86"; }

.glyphicon-hd-video::before { content: "=EE=86=87"; }

.glyphicon-subtitles::before { content: "=EE=86=88"; }

.glyphicon-sound-stereo::before { content: "=EE=86=89"; }

.glyphicon-sound-dolby::before { content: "=EE=86=90"; }

.glyphicon-sound-5-1::before { content: "=EE=86=91"; }

.glyphicon-sound-6-1::before { content: "=EE=86=92"; }

.glyphicon-sound-7-1::before { content: "=EE=86=93"; }

.glyphicon-copyright-mark::before { content: "=EE=86=94"; }

.glyphicon-registration-mark::before { content: "=EE=86=95"; }

.glyphicon-cloud-download::before { content: "=EE=86=97"; }

.glyphicon-cloud-upload::before { content: "=EE=86=98"; }

.glyphicon-tree-conifer::before { content: "=EE=86=99"; }

.glyphicon-tree-deciduous::before { content: "=EE=88=80"; }

.glyphicon-cd::before { content: "=EE=88=81"; }

.glyphicon-save-file::before { content: "=EE=88=82"; }

.glyphicon-open-file::before { content: "=EE=88=83"; }

.glyphicon-level-up::before { content: "=EE=88=84"; }

.glyphicon-copy::before { content: "=EE=88=85"; }

.glyphicon-paste::before { content: "=EE=88=86"; }

.glyphicon-alert::before { content: "=EE=88=89"; }

.glyphicon-equalizer::before { content: "=EE=88=90"; }

.glyphicon-king::before { content: "=EE=88=91"; }

.glyphicon-queen::before { content: "=EE=88=92"; }

.glyphicon-pawn::before { content: "=EE=88=93"; }

.glyphicon-bishop::before { content: "=EE=88=94"; }

.glyphicon-knight::before { content: "=EE=88=95"; }

.glyphicon-baby-formula::before { content: "=EE=88=96"; }

.glyphicon-tent::before { content: "=E2=9B=BA"; }

.glyphicon-blackboard::before { content: "=EE=88=98"; }

.glyphicon-bed::before { content: "=EE=88=99"; }

.glyphicon-apple::before { content: "=EF=A3=BF"; }

.glyphicon-erase::before { content: "=EE=88=A1"; }

.glyphicon-hourglass::before { content: "=E2=8C=9B"; }

.glyphicon-lamp::before { content: "=EE=88=A3"; }

.glyphicon-duplicate::before { content: "=EE=88=A4"; }

.glyphicon-piggy-bank::before { content: "=EE=88=A5"; }

.glyphicon-scissors::before { content: "=EE=88=A6"; }

.glyphicon-bitcoin::before { content: "=EE=88=A7"; }

.glyphicon-btc::before { content: "=EE=88=A7"; }

.glyphicon-xbt::before { content: "=EE=88=A7"; }

.glyphicon-yen::before { content: "=C2=A5"; }

.glyphicon-jpy::before { content: "=C2=A5"; }

.glyphicon-ruble::before { content: "=E2=82=BD"; }

.glyphicon-rub::before { content: "=E2=82=BD"; }

.glyphicon-scale::before { content: "=EE=88=B0"; }

.glyphicon-ice-lolly::before { content: "=EE=88=B1"; }

.glyphicon-ice-lolly-tasted::before { content: "=EE=88=B2"; }

.glyphicon-education::before { content: "=EE=88=B3"; }

.glyphicon-option-horizontal::before { content: "=EE=88=B4"; }

.glyphicon-option-vertical::before { content: "=EE=88=B5"; }

.glyphicon-menu-hamburger::before { content: "=EE=88=B6"; }

.glyphicon-modal-window::before { content: "=EE=88=B7"; }

.glyphicon-oil::before { content: "=EE=88=B8"; }

.glyphicon-grain::before { content: "=EE=88=B9"; }

.glyphicon-sunglasses::before { content: "=EE=89=80"; }

.glyphicon-text-size::before { content: "=EE=89=81"; }

.glyphicon-text-color::before { content: "=EE=89=82"; }

.glyphicon-text-background::before { content: "=EE=89=83"; }

.glyphicon-object-align-top::before { content: "=EE=89=84"; }

.glyphicon-object-align-bottom::before { content: "=EE=89=85"; }

.glyphicon-object-align-horizontal::before { content: "=EE=89=86"; }

.glyphicon-object-align-left::before { content: "=EE=89=87"; }

.glyphicon-object-align-vertical::before { content: "=EE=89=88"; }

.glyphicon-object-align-right::before { content: "=EE=89=89"; }

.glyphicon-triangle-right::before { content: "=EE=89=90"; }

.glyphicon-triangle-left::before { content: "=EE=89=91"; }

.glyphicon-triangle-bottom::before { content: "=EE=89=92"; }

.glyphicon-triangle-top::before { content: "=EE=89=93"; }

.glyphicon-console::before { content: "=EE=89=94"; }

.glyphicon-superscript::before { content: "=EE=89=95"; }

.glyphicon-subscript::before { content: "=EE=89=96"; }

.glyphicon-menu-left::before { content: "=EE=89=97"; }

.glyphicon-menu-right::before { content: "=EE=89=98"; }

.glyphicon-menu-down::before { content: "=EE=89=99"; }

.glyphicon-menu-up::before { content: "=EE=89=A0"; }

* { box-sizing: border-box; }

::after, ::before { box-sizing: border-box; }

html { font-size: 10px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

body { font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-si=
ze: 14px; line-height: 1.42857; color: rgb(51, 51, 51); background-color: r=
gb(255, 255, 255); }

button, input, select, textarea { font-family: inherit; font-size: inherit;=
 line-height: inherit; }

a { color: rgb(51, 122, 183); text-decoration: none; }

a:focus, a:hover { color: rgb(35, 82, 124); text-decoration: underline; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

figure { margin: 0px; }

img { vertical-align: middle; }

.carousel-inner > .item > a > img, .carousel-inner > .item > img, .img-resp=
onsive, .thumbnail a > img, .thumbnail > img { display: block; max-width: 1=
00%; height: auto; }

.img-rounded { border-radius: 6px; }

.img-thumbnail { display: inline-block; max-width: 100%; height: auto; padd=
ing: 4px; line-height: 1.42857; background-color: rgb(255, 255, 255); borde=
r: 1px solid rgb(221, 221, 221); border-radius: 4px; transition: all 0.2s e=
ase-in-out 0s; }

.img-circle { border-radius: 50%; }

hr { margin-top: 20px; margin-bottom: 20px; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgb(238, 238, 238); }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }

[role=3D"button"] { cursor: pointer; }

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 { font-family: inherit=
; font-weight: 500; line-height: 1.1; color: inherit; }

.h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, .h4 .s=
mall, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h1 .small, h=
1 small, h2 .small, h2 small, h3 .small, h3 small, h4 .small, h4 small, h5 =
.small, h5 small, h6 .small, h6 small { font-weight: 400; line-height: 1; c=
olor: rgb(119, 119, 119); }

.h1, .h2, .h3, h1, h2, h3 { margin-top: 20px; margin-bottom: 10px; }

.h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, h1 .sm=
all, h1 small, h2 .small, h2 small, h3 .small, h3 small { font-size: 65%; }

.h4, .h5, .h6, h4, h5, h6 { margin-top: 10px; margin-bottom: 10px; }

.h4 .small, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h4 .sm=
all, h4 small, h5 .small, h5 small, h6 .small, h6 small { font-size: 75%; }

.h1, h1 { font-size: 36px; }

.h2, h2 { font-size: 30px; }

.h3, h3 { font-size: 24px; }

.h4, h4 { font-size: 18px; }

.h5, h5 { font-size: 14px; }

.h6, h6 { font-size: 12px; }

p { margin: 0px 0px 10px; }

.lead { margin-bottom: 20px; font-size: 16px; font-weight: 300; line-height=
: 1.4; }

@media (min-width: 768px) {
  .lead { font-size: 21px; }
}

.small, small { font-size: 85%; }

.mark, mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.text-left { text-align: left; }

.text-right { text-align: right; }

.text-center { text-align: center; }

.text-justify { text-align: justify; }

.text-nowrap { white-space: nowrap; }

.text-lowercase { text-transform: lowercase; }

.text-uppercase { text-transform: uppercase; }

.text-capitalize { text-transform: capitalize; }

.text-muted { color: rgb(119, 119, 119); }

.text-primary { color: rgb(51, 122, 183); }

a.text-primary:focus, a.text-primary:hover { color: rgb(40, 96, 144); }

.text-success { color: rgb(60, 118, 61); }

a.text-success:focus, a.text-success:hover { color: rgb(43, 84, 44); }

.text-info { color: rgb(49, 112, 143); }

a.text-info:focus, a.text-info:hover { color: rgb(36, 82, 105); }

.text-warning { color: rgb(138, 109, 59); }

a.text-warning:focus, a.text-warning:hover { color: rgb(102, 81, 44); }

.text-danger { color: rgb(169, 68, 66); }

a.text-danger:focus, a.text-danger:hover { color: rgb(132, 53, 52); }

.bg-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 183=
); }

a.bg-primary:focus, a.bg-primary:hover { background-color: rgb(40, 96, 144)=
; }

.bg-success { background-color: rgb(223, 240, 216); }

a.bg-success:focus, a.bg-success:hover { background-color: rgb(193, 226, 17=
9); }

.bg-info { background-color: rgb(217, 237, 247); }

a.bg-info:focus, a.bg-info:hover { background-color: rgb(175, 217, 238); }

.bg-warning { background-color: rgb(252, 248, 227); }

a.bg-warning:focus, a.bg-warning:hover { background-color: rgb(247, 236, 18=
1); }

.bg-danger { background-color: rgb(242, 222, 222); }

a.bg-danger:focus, a.bg-danger:hover { background-color: rgb(228, 185, 185)=
; }

.page-header { padding-bottom: 9px; margin: 40px 0px 20px; border-bottom: 1=
px solid rgb(238, 238, 238); }

ol, ul { margin-top: 0px; margin-bottom: 10px; }

ol ol, ol ul, ul ol, ul ul { margin-bottom: 0px; }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; margin-left: -5px; list-style: none; }

.list-inline > li { display: inline-block; padding-right: 5px; padding-left=
: 5px; }

dl { margin-top: 0px; margin-bottom: 20px; }

dd, dt { line-height: 1.42857; }

dt { font-weight: 700; }

dd { margin-left: 0px; }

@media (min-width: 768px) {
  .dl-horizontal dt { float: left; width: 160px; overflow: hidden; clear: l=
eft; text-align: right; text-overflow: ellipsis; white-space: nowrap; }
  .dl-horizontal dd { margin-left: 180px; }
}

abbr[data-original-title], abbr[title] { cursor: help; border-bottom: 1px d=
otted rgb(119, 119, 119); }

.initialism { font-size: 90%; text-transform: uppercase; }

blockquote { padding: 10px 20px; margin: 0px 0px 20px; font-size: 17.5px; b=
order-left: 5px solid rgb(238, 238, 238); }

blockquote ol:last-child, blockquote p:last-child, blockquote ul:last-child=
 { margin-bottom: 0px; }

blockquote .small, blockquote footer, blockquote small { display: block; fo=
nt-size: 80%; line-height: 1.42857; color: rgb(119, 119, 119); }

blockquote .small::before, blockquote footer::before, blockquote small::bef=
ore { content: "=E2=80=94=C2=A0"; }

.blockquote-reverse, blockquote.pull-right { padding-right: 15px; padding-l=
eft: 0px; text-align: right; border-right: 5px solid rgb(238, 238, 238); bo=
rder-left: 0px; }

.blockquote-reverse .small::before, .blockquote-reverse footer::before, .bl=
ockquote-reverse small::before, blockquote.pull-right .small::before, block=
quote.pull-right footer::before, blockquote.pull-right small::before { cont=
ent: ""; }

.blockquote-reverse .small::after, .blockquote-reverse footer::after, .bloc=
kquote-reverse small::after, blockquote.pull-right .small::after, blockquot=
e.pull-right footer::after, blockquote.pull-right small::after { content: "=
=C2=A0=E2=80=94"; }

address { margin-bottom: 20px; font-style: normal; line-height: 1.42857; }

code, kbd, pre, samp { font-family: Menlo, Monaco, Consolas, "Courier New",=
 monospace; }

code { padding: 2px 4px; font-size: 90%; color: rgb(199, 37, 78); backgroun=
d-color: rgb(249, 242, 244); border-radius: 4px; }

kbd { padding: 2px 4px; font-size: 90%; color: rgb(255, 255, 255); backgrou=
nd-color: rgb(51, 51, 51); border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.=
25) 0px -1px 0px inset; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; box-shadow: none=
; }

pre { display: block; padding: 9.5px; margin: 0px 0px 10px; font-size: 13px=
; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; over=
flow-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px so=
lid rgb(204, 204, 204); border-radius: 4px; }

pre code { padding: 0px; font-size: inherit; color: inherit; white-space: p=
re-wrap; background-color: transparent; border-radius: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { padding-right: 15px; padding-left: 15px; margin-right: auto; m=
argin-left: auto; }

@media (min-width: 768px) {
  .container { width: 750px; }
}

@media (min-width: 992px) {
  .container { width: 970px; }
}

@media (min-width: 1200px) {
  .container { width: 1170px; }
}

.container-fluid { padding-right: 15px; padding-left: 15px; margin-right: a=
uto; margin-left: auto; }

.row { margin-right: -15px; margin-left: -15px; }

.col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-l=
g-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-md-1, .col=
-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5,=
 .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-sm-1, .col-sm-10, .col-sm=
-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .co=
l-sm-7, .col-sm-8, .col-sm-9, .col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12=
, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs=
-8, .col-xs-9 { position: relative; min-height: 1px; padding-right: 15px; p=
adding-left: 15px; }

.col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-2, .col-xs-3, .col-x=
s-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9 { float: left; }

.col-xs-12 { width: 100%; }

.col-xs-11 { width: 91.6667%; }

.col-xs-10 { width: 83.3333%; }

.col-xs-9 { width: 75%; }

.col-xs-8 { width: 66.6667%; }

.col-xs-7 { width: 58.3333%; }

.col-xs-6 { width: 50%; }

.col-xs-5 { width: 41.6667%; }

.col-xs-4 { width: 33.3333%; }

.col-xs-3 { width: 25%; }

.col-xs-2 { width: 16.6667%; }

.col-xs-1 { width: 8.33333%; }

.col-xs-pull-12 { right: 100%; }

.col-xs-pull-11 { right: 91.6667%; }

.col-xs-pull-10 { right: 83.3333%; }

.col-xs-pull-9 { right: 75%; }

.col-xs-pull-8 { right: 66.6667%; }

.col-xs-pull-7 { right: 58.3333%; }

.col-xs-pull-6 { right: 50%; }

.col-xs-pull-5 { right: 41.6667%; }

.col-xs-pull-4 { right: 33.3333%; }

.col-xs-pull-3 { right: 25%; }

.col-xs-pull-2 { right: 16.6667%; }

.col-xs-pull-1 { right: 8.33333%; }

.col-xs-pull-0 { right: auto; }

.col-xs-push-12 { left: 100%; }

.col-xs-push-11 { left: 91.6667%; }

.col-xs-push-10 { left: 83.3333%; }

.col-xs-push-9 { left: 75%; }

.col-xs-push-8 { left: 66.6667%; }

.col-xs-push-7 { left: 58.3333%; }

.col-xs-push-6 { left: 50%; }

.col-xs-push-5 { left: 41.6667%; }

.col-xs-push-4 { left: 33.3333%; }

.col-xs-push-3 { left: 25%; }

.col-xs-push-2 { left: 16.6667%; }

.col-xs-push-1 { left: 8.33333%; }

.col-xs-push-0 { left: auto; }

.col-xs-offset-12 { margin-left: 100%; }

.col-xs-offset-11 { margin-left: 91.6667%; }

.col-xs-offset-10 { margin-left: 83.3333%; }

.col-xs-offset-9 { margin-left: 75%; }

.col-xs-offset-8 { margin-left: 66.6667%; }

.col-xs-offset-7 { margin-left: 58.3333%; }

.col-xs-offset-6 { margin-left: 50%; }

.col-xs-offset-5 { margin-left: 41.6667%; }

.col-xs-offset-4 { margin-left: 33.3333%; }

.col-xs-offset-3 { margin-left: 25%; }

.col-xs-offset-2 { margin-left: 16.6667%; }

.col-xs-offset-1 { margin-left: 8.33333%; }

.col-xs-offset-0 { margin-left: 0px; }

@media (min-width: 768px) {
  .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col=
-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9 { float: left;=
 }
  .col-sm-12 { width: 100%; }
  .col-sm-11 { width: 91.6667%; }
  .col-sm-10 { width: 83.3333%; }
  .col-sm-9 { width: 75%; }
  .col-sm-8 { width: 66.6667%; }
  .col-sm-7 { width: 58.3333%; }
  .col-sm-6 { width: 50%; }
  .col-sm-5 { width: 41.6667%; }
  .col-sm-4 { width: 33.3333%; }
  .col-sm-3 { width: 25%; }
  .col-sm-2 { width: 16.6667%; }
  .col-sm-1 { width: 8.33333%; }
  .col-sm-pull-12 { right: 100%; }
  .col-sm-pull-11 { right: 91.6667%; }
  .col-sm-pull-10 { right: 83.3333%; }
  .col-sm-pull-9 { right: 75%; }
  .col-sm-pull-8 { right: 66.6667%; }
  .col-sm-pull-7 { right: 58.3333%; }
  .col-sm-pull-6 { right: 50%; }
  .col-sm-pull-5 { right: 41.6667%; }
  .col-sm-pull-4 { right: 33.3333%; }
  .col-sm-pull-3 { right: 25%; }
  .col-sm-pull-2 { right: 16.6667%; }
  .col-sm-pull-1 { right: 8.33333%; }
  .col-sm-pull-0 { right: auto; }
  .col-sm-push-12 { left: 100%; }
  .col-sm-push-11 { left: 91.6667%; }
  .col-sm-push-10 { left: 83.3333%; }
  .col-sm-push-9 { left: 75%; }
  .col-sm-push-8 { left: 66.6667%; }
  .col-sm-push-7 { left: 58.3333%; }
  .col-sm-push-6 { left: 50%; }
  .col-sm-push-5 { left: 41.6667%; }
  .col-sm-push-4 { left: 33.3333%; }
  .col-sm-push-3 { left: 25%; }
  .col-sm-push-2 { left: 16.6667%; }
  .col-sm-push-1 { left: 8.33333%; }
  .col-sm-push-0 { left: auto; }
  .col-sm-offset-12 { margin-left: 100%; }
  .col-sm-offset-11 { margin-left: 91.6667%; }
  .col-sm-offset-10 { margin-left: 83.3333%; }
  .col-sm-offset-9 { margin-left: 75%; }
  .col-sm-offset-8 { margin-left: 66.6667%; }
  .col-sm-offset-7 { margin-left: 58.3333%; }
  .col-sm-offset-6 { margin-left: 50%; }
  .col-sm-offset-5 { margin-left: 41.6667%; }
  .col-sm-offset-4 { margin-left: 33.3333%; }
  .col-sm-offset-3 { margin-left: 25%; }
  .col-sm-offset-2 { margin-left: 16.6667%; }
  .col-sm-offset-1 { margin-left: 8.33333%; }
  .col-sm-offset-0 { margin-left: 0px; }
}

@media (min-width: 992px) {
  .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col=
-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9 { float: left;=
 }
  .col-md-12 { width: 100%; }
  .col-md-11 { width: 91.6667%; }
  .col-md-10 { width: 83.3333%; }
  .col-md-9 { width: 75%; }
  .col-md-8 { width: 66.6667%; }
  .col-md-7 { width: 58.3333%; }
  .col-md-6 { width: 50%; }
  .col-md-5 { width: 41.6667%; }
  .col-md-4 { width: 33.3333%; }
  .col-md-3 { width: 25%; }
  .col-md-2 { width: 16.6667%; }
  .col-md-1 { width: 8.33333%; }
  .col-md-pull-12 { right: 100%; }
  .col-md-pull-11 { right: 91.6667%; }
  .col-md-pull-10 { right: 83.3333%; }
  .col-md-pull-9 { right: 75%; }
  .col-md-pull-8 { right: 66.6667%; }
  .col-md-pull-7 { right: 58.3333%; }
  .col-md-pull-6 { right: 50%; }
  .col-md-pull-5 { right: 41.6667%; }
  .col-md-pull-4 { right: 33.3333%; }
  .col-md-pull-3 { right: 25%; }
  .col-md-pull-2 { right: 16.6667%; }
  .col-md-pull-1 { right: 8.33333%; }
  .col-md-pull-0 { right: auto; }
  .col-md-push-12 { left: 100%; }
  .col-md-push-11 { left: 91.6667%; }
  .col-md-push-10 { left: 83.3333%; }
  .col-md-push-9 { left: 75%; }
  .col-md-push-8 { left: 66.6667%; }
  .col-md-push-7 { left: 58.3333%; }
  .col-md-push-6 { left: 50%; }
  .col-md-push-5 { left: 41.6667%; }
  .col-md-push-4 { left: 33.3333%; }
  .col-md-push-3 { left: 25%; }
  .col-md-push-2 { left: 16.6667%; }
  .col-md-push-1 { left: 8.33333%; }
  .col-md-push-0 { left: auto; }
  .col-md-offset-12 { margin-left: 100%; }
  .col-md-offset-11 { margin-left: 91.6667%; }
  .col-md-offset-10 { margin-left: 83.3333%; }
  .col-md-offset-9 { margin-left: 75%; }
  .col-md-offset-8 { margin-left: 66.6667%; }
  .col-md-offset-7 { margin-left: 58.3333%; }
  .col-md-offset-6 { margin-left: 50%; }
  .col-md-offset-5 { margin-left: 41.6667%; }
  .col-md-offset-4 { margin-left: 33.3333%; }
  .col-md-offset-3 { margin-left: 25%; }
  .col-md-offset-2 { margin-left: 16.6667%; }
  .col-md-offset-1 { margin-left: 8.33333%; }
  .col-md-offset-0 { margin-left: 0px; }
}

@media (min-width: 1200px) {
  .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col=
-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9 { float: left;=
 }
  .col-lg-12 { width: 100%; }
  .col-lg-11 { width: 91.6667%; }
  .col-lg-10 { width: 83.3333%; }
  .col-lg-9 { width: 75%; }
  .col-lg-8 { width: 66.6667%; }
  .col-lg-7 { width: 58.3333%; }
  .col-lg-6 { width: 50%; }
  .col-lg-5 { width: 41.6667%; }
  .col-lg-4 { width: 33.3333%; }
  .col-lg-3 { width: 25%; }
  .col-lg-2 { width: 16.6667%; }
  .col-lg-1 { width: 8.33333%; }
  .col-lg-pull-12 { right: 100%; }
  .col-lg-pull-11 { right: 91.6667%; }
  .col-lg-pull-10 { right: 83.3333%; }
  .col-lg-pull-9 { right: 75%; }
  .col-lg-pull-8 { right: 66.6667%; }
  .col-lg-pull-7 { right: 58.3333%; }
  .col-lg-pull-6 { right: 50%; }
  .col-lg-pull-5 { right: 41.6667%; }
  .col-lg-pull-4 { right: 33.3333%; }
  .col-lg-pull-3 { right: 25%; }
  .col-lg-pull-2 { right: 16.6667%; }
  .col-lg-pull-1 { right: 8.33333%; }
  .col-lg-pull-0 { right: auto; }
  .col-lg-push-12 { left: 100%; }
  .col-lg-push-11 { left: 91.6667%; }
  .col-lg-push-10 { left: 83.3333%; }
  .col-lg-push-9 { left: 75%; }
  .col-lg-push-8 { left: 66.6667%; }
  .col-lg-push-7 { left: 58.3333%; }
  .col-lg-push-6 { left: 50%; }
  .col-lg-push-5 { left: 41.6667%; }
  .col-lg-push-4 { left: 33.3333%; }
  .col-lg-push-3 { left: 25%; }
  .col-lg-push-2 { left: 16.6667%; }
  .col-lg-push-1 { left: 8.33333%; }
  .col-lg-push-0 { left: auto; }
  .col-lg-offset-12 { margin-left: 100%; }
  .col-lg-offset-11 { margin-left: 91.6667%; }
  .col-lg-offset-10 { margin-left: 83.3333%; }
  .col-lg-offset-9 { margin-left: 75%; }
  .col-lg-offset-8 { margin-left: 66.6667%; }
  .col-lg-offset-7 { margin-left: 58.3333%; }
  .col-lg-offset-6 { margin-left: 50%; }
  .col-lg-offset-5 { margin-left: 41.6667%; }
  .col-lg-offset-4 { margin-left: 33.3333%; }
  .col-lg-offset-3 { margin-left: 25%; }
  .col-lg-offset-2 { margin-left: 16.6667%; }
  .col-lg-offset-1 { margin-left: 8.33333%; }
  .col-lg-offset-0 { margin-left: 0px; }
}

table { background-color: transparent; }

caption { padding-top: 8px; padding-bottom: 8px; color: rgb(119, 119, 119);=
 text-align: left; }

th { text-align: left; }

.table { width: 100%; max-width: 100%; margin-bottom: 20px; }

.table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > t=
d, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr =
> th { padding: 8px; line-height: 1.42857; vertical-align: top; border-top:=
 1px solid rgb(221, 221, 221); }

.table > thead > tr > th { vertical-align: bottom; border-bottom: 2px solid=
 rgb(221, 221, 221); }

.table > caption + thead > tr:first-child > td, .table > caption + thead > =
tr:first-child > th, .table > colgroup + thead > tr:first-child > td, .tabl=
e > colgroup + thead > tr:first-child > th, .table > thead:first-child > tr=
:first-child > td, .table > thead:first-child > tr:first-child > th { borde=
r-top: 0px; }

.table > tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table .table { background-color: rgb(255, 255, 255); }

.table-condensed > tbody > tr > td, .table-condensed > tbody > tr > th, .ta=
ble-condensed > tfoot > tr > td, .table-condensed > tfoot > tr > th, .table=
-condensed > thead > tr > td, .table-condensed > thead > tr > th { padding:=
 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); }

.table-bordered > tbody > tr > td, .table-bordered > tbody > tr > th, .tabl=
e-bordered > tfoot > tr > td, .table-bordered > tfoot > tr > th, .table-bor=
dered > thead > tr > td, .table-bordered > thead > tr > th { border: 1px so=
lid rgb(221, 221, 221); }

.table-bordered > thead > tr > td, .table-bordered > thead > tr > th { bord=
er-bottom-width: 2px; }

.table-striped > tbody > tr:nth-of-type(2n+1) { background-color: rgb(249, =
249, 249); }

.table-hover > tbody > tr:hover { background-color: rgb(245, 245, 245); }

table col[class*=3D"col-"] { position: static; display: table-column; float=
: none; }

table td[class*=3D"col-"], table th[class*=3D"col-"] { position: static; di=
splay: table-cell; float: none; }

.table > tbody > tr.active > td, .table > tbody > tr.active > th, .table > =
tbody > tr > td.active, .table > tbody > tr > th.active, .table > tfoot > t=
r.active > td, .table > tfoot > tr.active > th, .table > tfoot > tr > td.ac=
tive, .table > tfoot > tr > th.active, .table > thead > tr.active > td, .ta=
ble > thead > tr.active > th, .table > thead > tr > td.active, .table > the=
ad > tr > th.active { background-color: rgb(245, 245, 245); }

.table-hover > tbody > tr.active:hover > td, .table-hover > tbody > tr.acti=
ve:hover > th, .table-hover > tbody > tr:hover > .active, .table-hover > tb=
ody > tr > td.active:hover, .table-hover > tbody > tr > th.active:hover { b=
ackground-color: rgb(232, 232, 232); }

.table > tbody > tr.success > td, .table > tbody > tr.success > th, .table =
> tbody > tr > td.success, .table > tbody > tr > th.success, .table > tfoot=
 > tr.success > td, .table > tfoot > tr.success > th, .table > tfoot > tr >=
 td.success, .table > tfoot > tr > th.success, .table > thead > tr.success =
> td, .table > thead > tr.success > th, .table > thead > tr > td.success, .=
table > thead > tr > th.success { background-color: rgb(223, 240, 216); }

.table-hover > tbody > tr.success:hover > td, .table-hover > tbody > tr.suc=
cess:hover > th, .table-hover > tbody > tr:hover > .success, .table-hover >=
 tbody > tr > td.success:hover, .table-hover > tbody > tr > th.success:hove=
r { background-color: rgb(208, 233, 198); }

.table > tbody > tr.info > td, .table > tbody > tr.info > th, .table > tbod=
y > tr > td.info, .table > tbody > tr > th.info, .table > tfoot > tr.info >=
 td, .table > tfoot > tr.info > th, .table > tfoot > tr > td.info, .table >=
 tfoot > tr > th.info, .table > thead > tr.info > td, .table > thead > tr.i=
nfo > th, .table > thead > tr > td.info, .table > thead > tr > th.info { ba=
ckground-color: rgb(217, 237, 247); }

.table-hover > tbody > tr.info:hover > td, .table-hover > tbody > tr.info:h=
over > th, .table-hover > tbody > tr:hover > .info, .table-hover > tbody > =
tr > td.info:hover, .table-hover > tbody > tr > th.info:hover { background-=
color: rgb(196, 227, 243); }

.table > tbody > tr.warning > td, .table > tbody > tr.warning > th, .table =
> tbody > tr > td.warning, .table > tbody > tr > th.warning, .table > tfoot=
 > tr.warning > td, .table > tfoot > tr.warning > th, .table > tfoot > tr >=
 td.warning, .table > tfoot > tr > th.warning, .table > thead > tr.warning =
> td, .table > thead > tr.warning > th, .table > thead > tr > td.warning, .=
table > thead > tr > th.warning { background-color: rgb(252, 248, 227); }

.table-hover > tbody > tr.warning:hover > td, .table-hover > tbody > tr.war=
ning:hover > th, .table-hover > tbody > tr:hover > .warning, .table-hover >=
 tbody > tr > td.warning:hover, .table-hover > tbody > tr > th.warning:hove=
r { background-color: rgb(250, 242, 204); }

.table > tbody > tr.danger > td, .table > tbody > tr.danger > th, .table > =
tbody > tr > td.danger, .table > tbody > tr > th.danger, .table > tfoot > t=
r.danger > td, .table > tfoot > tr.danger > th, .table > tfoot > tr > td.da=
nger, .table > tfoot > tr > th.danger, .table > thead > tr.danger > td, .ta=
ble > thead > tr.danger > th, .table > thead > tr > td.danger, .table > the=
ad > tr > th.danger { background-color: rgb(242, 222, 222); }

.table-hover > tbody > tr.danger:hover > td, .table-hover > tbody > tr.dang=
er:hover > th, .table-hover > tbody > tr:hover > .danger, .table-hover > tb=
ody > tr > td.danger:hover, .table-hover > tbody > tr > th.danger:hover { b=
ackground-color: rgb(235, 204, 204); }

.table-responsive { min-height: 0.01%; overflow-x: auto; }

@media screen and (max-width: 767px) {
  .table-responsive { width: 100%; margin-bottom: 15px; overflow-y: hidden;=
 border: 1px solid rgb(221, 221, 221); }
  .table-responsive > .table { margin-bottom: 0px; }
  .table-responsive > .table > tbody > tr > td, .table-responsive > .table =
> tbody > tr > th, .table-responsive > .table > tfoot > tr > td, .table-res=
ponsive > .table > tfoot > tr > th, .table-responsive > .table > thead > tr=
 > td, .table-responsive > .table > thead > tr > th { white-space: nowrap; =
}
  .table-responsive > .table-bordered { border: 0px; }
  .table-responsive > .table-bordered > tbody > tr > td:first-child, .table=
-responsive > .table-bordered > tbody > tr > th:first-child, .table-respons=
ive > .table-bordered > tfoot > tr > td:first-child, .table-responsive > .t=
able-bordered > tfoot > tr > th:first-child, .table-responsive > .table-bor=
dered > thead > tr > td:first-child, .table-responsive > .table-bordered > =
thead > tr > th:first-child { border-left: 0px; }
  .table-responsive > .table-bordered > tbody > tr > td:last-child, .table-=
responsive > .table-bordered > tbody > tr > th:last-child, .table-responsiv=
e > .table-bordered > tfoot > tr > td:last-child, .table-responsive > .tabl=
e-bordered > tfoot > tr > th:last-child, .table-responsive > .table-bordere=
d > thead > tr > td:last-child, .table-responsive > .table-bordered > thead=
 > tr > th:last-child { border-right: 0px; }
  .table-responsive > .table-bordered > tbody > tr:last-child > td, .table-=
responsive > .table-bordered > tbody > tr:last-child > th, .table-responsiv=
e > .table-bordered > tfoot > tr:last-child > td, .table-responsive > .tabl=
e-bordered > tfoot > tr:last-child > th { border-bottom: 0px; }
}

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 20px; fo=
nt-size: 21px; line-height: inherit; color: rgb(51, 51, 51); border-width: =
0px 0px 1px; border-top-style: initial; border-right-style: initial; border=
-left-style: initial; border-top-color: initial; border-right-color: initia=
l; border-left-color: initial; border-image: initial; border-bottom-style: =
solid; border-bottom-color: rgb(229, 229, 229); }

label { display: inline-block; max-width: 100%; margin-bottom: 5px; font-we=
ight: 700; }

input[type=3D"search"] { box-sizing: border-box; }

input[type=3D"checkbox"], input[type=3D"radio"] { margin: 4px 0px 0px; line=
-height: normal; }

input[type=3D"file"] { display: block; }

input[type=3D"range"] { display: block; width: 100%; }

select[multiple], select[size] { height: auto; }

input[type=3D"file"]:focus, input[type=3D"checkbox"]:focus, input[type=3D"r=
adio"]:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: =
-2px; }

output { display: block; padding-top: 7px; font-size: 14px; line-height: 1.=
42857; color: rgb(85, 85, 85); }

.form-control { display: block; width: 100%; height: 34px; padding: 6px 12p=
x; font-size: 14px; line-height: 1.42857; color: rgb(85, 85, 85); backgroun=
d-color: rgb(255, 255, 255); background-image: none; border: 1px solid rgb(=
204, 204, 204); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.075) 0px 1p=
x 1px inset; transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15=
s ease-in-out 0s; }

.form-control:focus { border-color: rgb(102, 175, 233); outline: 0px; box-s=
hadow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgba(102, 175, 233, 0.6) 0px=
 0px 8px; }

.form-control::-webkit-input-placeholder { color: rgb(153, 153, 153); }

.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-=
control { background-color: rgb(238, 238, 238); opacity: 1; }

.form-control[disabled], fieldset[disabled] .form-control { cursor: not-all=
owed; }

textarea.form-control { height: auto; }

input[type=3D"search"] { appearance: none; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type=3D"date"].form-control, input[type=3D"time"].form-control, inp=
ut[type=3D"datetime-local"].form-control, input[type=3D"month"].form-contro=
l { line-height: 34px; }
  .input-group-sm input[type=3D"date"], .input-group-sm input[type=3D"time"=
], .input-group-sm input[type=3D"datetime-local"], .input-group-sm input[ty=
pe=3D"month"], input[type=3D"date"].input-sm, input[type=3D"time"].input-sm=
, input[type=3D"datetime-local"].input-sm, input[type=3D"month"].input-sm {=
 line-height: 30px; }
  .input-group-lg input[type=3D"date"], .input-group-lg input[type=3D"time"=
], .input-group-lg input[type=3D"datetime-local"], .input-group-lg input[ty=
pe=3D"month"], input[type=3D"date"].input-lg, input[type=3D"time"].input-lg=
, input[type=3D"datetime-local"].input-lg, input[type=3D"month"].input-lg {=
 line-height: 46px; }
}

.form-group { margin-bottom: 15px; }

.checkbox, .radio { position: relative; display: block; margin-top: 10px; m=
argin-bottom: 10px; }

.checkbox label, .radio label { min-height: 20px; padding-left: 20px; margi=
n-bottom: 0px; font-weight: 400; cursor: pointer; }

.checkbox input[type=3D"checkbox"], .checkbox-inline input[type=3D"checkbox=
"], .radio input[type=3D"radio"], .radio-inline input[type=3D"radio"] { pos=
ition: absolute; margin-left: -20px; }

.checkbox + .checkbox, .radio + .radio { margin-top: -5px; }

.checkbox-inline, .radio-inline { position: relative; display: inline-block=
; padding-left: 20px; margin-bottom: 0px; font-weight: 400; vertical-align:=
 middle; cursor: pointer; }

.checkbox-inline + .checkbox-inline, .radio-inline + .radio-inline { margin=
-top: 0px; margin-left: 10px; }

fieldset[disabled] input[type=3D"checkbox"], fieldset[disabled] input[type=
=3D"radio"], input[type=3D"checkbox"].disabled, input[type=3D"checkbox"][di=
sabled], input[type=3D"radio"].disabled, input[type=3D"radio"][disabled] { =
cursor: not-allowed; }

.checkbox-inline.disabled, .radio-inline.disabled, fieldset[disabled] .chec=
kbox-inline, fieldset[disabled] .radio-inline { cursor: not-allowed; }

.checkbox.disabled label, .radio.disabled label, fieldset[disabled] .checkb=
ox label, fieldset[disabled] .radio label { cursor: not-allowed; }

.form-control-static { min-height: 34px; padding-top: 7px; padding-bottom: =
7px; margin-bottom: 0px; }

.form-control-static.input-lg, .form-control-static.input-sm { padding-righ=
t: 0px; padding-left: 0px; }

.input-sm { height: 30px; padding: 5px 10px; font-size: 12px; line-height: =
1.5; border-radius: 3px; }

select.input-sm { height: 30px; line-height: 30px; }

select[multiple].input-sm, textarea.input-sm { height: auto; }

.form-group-sm .form-control { height: 30px; padding: 5px 10px; font-size: =
12px; line-height: 1.5; border-radius: 3px; }

.form-group-sm select.form-control { height: 30px; line-height: 30px; }

.form-group-sm select[multiple].form-control, .form-group-sm textarea.form-=
control { height: auto; }

.form-group-sm .form-control-static { height: 30px; min-height: 32px; paddi=
ng: 6px 10px; font-size: 12px; line-height: 1.5; }

.input-lg { height: 46px; padding: 10px 16px; font-size: 18px; line-height:=
 1.33333; border-radius: 6px; }

select.input-lg { height: 46px; line-height: 46px; }

select[multiple].input-lg, textarea.input-lg { height: auto; }

.form-group-lg .form-control { height: 46px; padding: 10px 16px; font-size:=
 18px; line-height: 1.33333; border-radius: 6px; }

.form-group-lg select.form-control { height: 46px; line-height: 46px; }

.form-group-lg select[multiple].form-control, .form-group-lg textarea.form-=
control { height: auto; }

.form-group-lg .form-control-static { height: 46px; min-height: 38px; paddi=
ng: 11px 16px; font-size: 18px; line-height: 1.33333; }

.has-feedback { position: relative; }

.has-feedback .form-control { padding-right: 42.5px; }

.form-control-feedback { position: absolute; top: 0px; right: 0px; z-index:=
 2; display: block; width: 34px; height: 34px; line-height: 34px; text-alig=
n: center; pointer-events: none; }

.form-group-lg .form-control + .form-control-feedback, .input-group-lg + .f=
orm-control-feedback, .input-lg + .form-control-feedback { width: 46px; hei=
ght: 46px; line-height: 46px; }

.form-group-sm .form-control + .form-control-feedback, .input-group-sm + .f=
orm-control-feedback, .input-sm + .form-control-feedback { width: 30px; hei=
ght: 30px; line-height: 30px; }

.has-success .checkbox, .has-success .checkbox-inline, .has-success .contro=
l-label, .has-success .help-block, .has-success .radio, .has-success .radio=
-inline, .has-success.checkbox label, .has-success.checkbox-inline label, .=
has-success.radio label, .has-success.radio-inline label { color: rgb(60, 1=
18, 61); }

.has-success .form-control { border-color: rgb(60, 118, 61); box-shadow: rg=
ba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-success .form-control:focus { border-color: rgb(43, 84, 44); box-shado=
w: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(103, 177, 104) 0px 0px 6px; =
}

.has-success .input-group-addon { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(60, 118, 61); }

.has-success .form-control-feedback { color: rgb(60, 118, 61); }

.has-warning .checkbox, .has-warning .checkbox-inline, .has-warning .contro=
l-label, .has-warning .help-block, .has-warning .radio, .has-warning .radio=
-inline, .has-warning.checkbox label, .has-warning.checkbox-inline label, .=
has-warning.radio label, .has-warning.radio-inline label { color: rgb(138, =
109, 59); }

.has-warning .form-control { border-color: rgb(138, 109, 59); box-shadow: r=
gba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-warning .form-control:focus { border-color: rgb(102, 81, 44); box-shad=
ow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(192, 161, 107) 0px 0px 6px;=
 }

.has-warning .input-group-addon { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(138, 109, 59); }

.has-warning .form-control-feedback { color: rgb(138, 109, 59); }

.has-error .checkbox, .has-error .checkbox-inline, .has-error .control-labe=
l, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .ha=
s-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio =
label, .has-error.radio-inline label { color: rgb(169, 68, 66); }

.has-error .form-control { border-color: rgb(169, 68, 66); box-shadow: rgba=
(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-error .form-control:focus { border-color: rgb(132, 53, 52); box-shadow=
: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(206, 132, 131) 0px 0px 6px; }

.has-error .input-group-addon { color: rgb(169, 68, 66); background-color: =
rgb(242, 222, 222); border-color: rgb(169, 68, 66); }

.has-error .form-control-feedback { color: rgb(169, 68, 66); }

.has-feedback label ~ .form-control-feedback { top: 25px; }

.has-feedback label.sr-only ~ .form-control-feedback { top: 0px; }

.help-block { display: block; margin-top: 5px; margin-bottom: 10px; color: =
rgb(115, 115, 115); }

@media (min-width: 768px) {
  .form-inline .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-static { display: inline-block; }
  .form-inline .input-group { display: inline-table; vertical-align: middle=
; }
  .form-inline .input-group .form-control, .form-inline .input-group .input=
-group-addon, .form-inline .input-group .input-group-btn { width: auto; }
  .form-inline .input-group > .form-control { width: 100%; }
  .form-inline .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .form-inline .checkbox, .form-inline .radio { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .form-inline .checkbox label, .form-inline .radio label { padding-left: 0=
px; }
  .form-inline .checkbox input[type=3D"checkbox"], .form-inline .radio inpu=
t[type=3D"radio"] { position: relative; margin-left: 0px; }
  .form-inline .has-feedback .form-control-feedback { top: 0px; }
}

.form-horizontal .checkbox, .form-horizontal .checkbox-inline, .form-horizo=
ntal .radio, .form-horizontal .radio-inline { padding-top: 7px; margin-top:=
 0px; margin-bottom: 0px; }

.form-horizontal .checkbox, .form-horizontal .radio { min-height: 27px; }

.form-horizontal .form-group { margin-right: -15px; margin-left: -15px; }

@media (min-width: 768px) {
  .form-horizontal .control-label { padding-top: 7px; margin-bottom: 0px; t=
ext-align: right; }
}

.form-horizontal .has-feedback .form-control-feedback { right: 15px; }

@media (min-width: 768px) {
  .form-horizontal .form-group-lg .control-label { padding-top: 11px; font-=
size: 18px; }
}

@media (min-width: 768px) {
  .form-horizontal .form-group-sm .control-label { padding-top: 6px; font-s=
ize: 12px; }
}

.btn { display: inline-block; padding: 6px 12px; margin-bottom: 0px; font-s=
ize: 14px; font-weight: 400; line-height: 1.42857; text-align: center; whit=
e-space: nowrap; vertical-align: middle; touch-action: manipulation; cursor=
: pointer; user-select: none; background-image: none; border: 1px solid tra=
nsparent; border-radius: 4px; }

.btn.active.focus, .btn.active:focus, .btn.focus, .btn:active.focus, .btn:a=
ctive:focus, .btn:focus { outline: -webkit-focus-ring-color auto 5px; outli=
ne-offset: -2px; }

.btn.focus, .btn:focus, .btn:hover { color: rgb(51, 51, 51); text-decoratio=
n: none; }

.btn.active, .btn:active { background-image: none; outline: 0px; box-shadow=
: rgba(0, 0, 0, 0.125) 0px 3px 5px inset; }

.btn.disabled, .btn[disabled], fieldset[disabled] .btn { cursor: not-allowe=
d; box-shadow: none; opacity: 0.65; }

a.btn.disabled, fieldset[disabled] a.btn { pointer-events: none; }

.btn-default { color: rgb(51, 51, 51); background-color: rgb(255, 255, 255)=
; border-color: rgb(204, 204, 204); }

.btn-default.focus, .btn-default:focus { color: rgb(51, 51, 51); background=
-color: rgb(230, 230, 230); border-color: rgb(140, 140, 140); }

.btn-default:hover { color: rgb(51, 51, 51); background-color: rgb(230, 230=
, 230); border-color: rgb(173, 173, 173); }

.btn-default.active, .btn-default:active, .open > .dropdown-toggle.btn-defa=
ult { color: rgb(51, 51, 51); background-color: rgb(230, 230, 230); border-=
color: rgb(173, 173, 173); }

.btn-default.active.focus, .btn-default.active:focus, .btn-default.active:h=
over, .btn-default:active.focus, .btn-default:active:focus, .btn-default:ac=
tive:hover, .open > .dropdown-toggle.btn-default.focus, .open > .dropdown-t=
oggle.btn-default:focus, .open > .dropdown-toggle.btn-default:hover { color=
: rgb(51, 51, 51); background-color: rgb(212, 212, 212); border-color: rgb(=
140, 140, 140); }

.btn-default.active, .btn-default:active, .open > .dropdown-toggle.btn-defa=
ult { background-image: none; }

.btn-default.disabled.focus, .btn-default.disabled:focus, .btn-default.disa=
bled:hover, .btn-default[disabled].focus, .btn-default[disabled]:focus, .bt=
n-default[disabled]:hover, fieldset[disabled] .btn-default.focus, fieldset[=
disabled] .btn-default:focus, fieldset[disabled] .btn-default:hover { backg=
round-color: rgb(255, 255, 255); border-color: rgb(204, 204, 204); }

.btn-default .badge { color: rgb(255, 255, 255); background-color: rgb(51, =
51, 51); }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 18=
3); border-color: rgb(46, 109, 164); }

.btn-primary.focus, .btn-primary:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(40, 96, 144); border-color: rgb(18, 43, 64); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(40, 9=
6, 144); border-color: rgb(32, 77, 116); }

.btn-primary.active, .btn-primary:active, .open > .dropdown-toggle.btn-prim=
ary { color: rgb(255, 255, 255); background-color: rgb(40, 96, 144); border=
-color: rgb(32, 77, 116); }

.btn-primary.active.focus, .btn-primary.active:focus, .btn-primary.active:h=
over, .btn-primary:active.focus, .btn-primary:active:focus, .btn-primary:ac=
tive:hover, .open > .dropdown-toggle.btn-primary.focus, .open > .dropdown-t=
oggle.btn-primary:focus, .open > .dropdown-toggle.btn-primary:hover { color=
: rgb(255, 255, 255); background-color: rgb(32, 77, 116); border-color: rgb=
(18, 43, 64); }

.btn-primary.active, .btn-primary:active, .open > .dropdown-toggle.btn-prim=
ary { background-image: none; }

.btn-primary.disabled.focus, .btn-primary.disabled:focus, .btn-primary.disa=
bled:hover, .btn-primary[disabled].focus, .btn-primary[disabled]:focus, .bt=
n-primary[disabled]:hover, fieldset[disabled] .btn-primary.focus, fieldset[=
disabled] .btn-primary:focus, fieldset[disabled] .btn-primary:hover { backg=
round-color: rgb(51, 122, 183); border-color: rgb(46, 109, 164); }

.btn-primary .badge { color: rgb(51, 122, 183); background-color: rgb(255, =
255, 255); }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(92, 184, 92=
); border-color: rgb(76, 174, 76); }

.btn-success.focus, .btn-success:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(68, 157, 68); border-color: rgb(37, 86, 37); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(68, 1=
57, 68); border-color: rgb(57, 132, 57); }

.btn-success.active, .btn-success:active, .open > .dropdown-toggle.btn-succ=
ess { color: rgb(255, 255, 255); background-color: rgb(68, 157, 68); border=
-color: rgb(57, 132, 57); }

.btn-success.active.focus, .btn-success.active:focus, .btn-success.active:h=
over, .btn-success:active.focus, .btn-success:active:focus, .btn-success:ac=
tive:hover, .open > .dropdown-toggle.btn-success.focus, .open > .dropdown-t=
oggle.btn-success:focus, .open > .dropdown-toggle.btn-success:hover { color=
: rgb(255, 255, 255); background-color: rgb(57, 132, 57); border-color: rgb=
(37, 86, 37); }

.btn-success.active, .btn-success:active, .open > .dropdown-toggle.btn-succ=
ess { background-image: none; }

.btn-success.disabled.focus, .btn-success.disabled:focus, .btn-success.disa=
bled:hover, .btn-success[disabled].focus, .btn-success[disabled]:focus, .bt=
n-success[disabled]:hover, fieldset[disabled] .btn-success.focus, fieldset[=
disabled] .btn-success:focus, fieldset[disabled] .btn-success:hover { backg=
round-color: rgb(92, 184, 92); border-color: rgb(76, 174, 76); }

.btn-success .badge { color: rgb(92, 184, 92); background-color: rgb(255, 2=
55, 255); }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(91, 192, 222);=
 border-color: rgb(70, 184, 218); }

.btn-info.focus, .btn-info:focus { color: rgb(255, 255, 255); background-co=
lor: rgb(49, 176, 213); border-color: rgb(27, 109, 133); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(49, 176,=
 213); border-color: rgb(38, 154, 188); }

.btn-info.active, .btn-info:active, .open > .dropdown-toggle.btn-info { col=
or: rgb(255, 255, 255); background-color: rgb(49, 176, 213); border-color: =
rgb(38, 154, 188); }

.btn-info.active.focus, .btn-info.active:focus, .btn-info.active:hover, .bt=
n-info:active.focus, .btn-info:active:focus, .btn-info:active:hover, .open =
> .dropdown-toggle.btn-info.focus, .open > .dropdown-toggle.btn-info:focus,=
 .open > .dropdown-toggle.btn-info:hover { color: rgb(255, 255, 255); backg=
round-color: rgb(38, 154, 188); border-color: rgb(27, 109, 133); }

.btn-info.active, .btn-info:active, .open > .dropdown-toggle.btn-info { bac=
kground-image: none; }

.btn-info.disabled.focus, .btn-info.disabled:focus, .btn-info.disabled:hove=
r, .btn-info[disabled].focus, .btn-info[disabled]:focus, .btn-info[disabled=
]:hover, fieldset[disabled] .btn-info.focus, fieldset[disabled] .btn-info:f=
ocus, fieldset[disabled] .btn-info:hover { background-color: rgb(91, 192, 2=
22); border-color: rgb(70, 184, 218); }

.btn-info .badge { color: rgb(91, 192, 222); background-color: rgb(255, 255=
, 255); }

.btn-warning { color: rgb(255, 255, 255); background-color: rgb(240, 173, 7=
8); border-color: rgb(238, 162, 54); }

.btn-warning.focus, .btn-warning:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(236, 151, 31); border-color: rgb(152, 95, 13); }

.btn-warning:hover { color: rgb(255, 255, 255); background-color: rgb(236, =
151, 31); border-color: rgb(213, 133, 18); }

.btn-warning.active, .btn-warning:active, .open > .dropdown-toggle.btn-warn=
ing { color: rgb(255, 255, 255); background-color: rgb(236, 151, 31); borde=
r-color: rgb(213, 133, 18); }

.btn-warning.active.focus, .btn-warning.active:focus, .btn-warning.active:h=
over, .btn-warning:active.focus, .btn-warning:active:focus, .btn-warning:ac=
tive:hover, .open > .dropdown-toggle.btn-warning.focus, .open > .dropdown-t=
oggle.btn-warning:focus, .open > .dropdown-toggle.btn-warning:hover { color=
: rgb(255, 255, 255); background-color: rgb(213, 133, 18); border-color: rg=
b(152, 95, 13); }

.btn-warning.active, .btn-warning:active, .open > .dropdown-toggle.btn-warn=
ing { background-image: none; }

.btn-warning.disabled.focus, .btn-warning.disabled:focus, .btn-warning.disa=
bled:hover, .btn-warning[disabled].focus, .btn-warning[disabled]:focus, .bt=
n-warning[disabled]:hover, fieldset[disabled] .btn-warning.focus, fieldset[=
disabled] .btn-warning:focus, fieldset[disabled] .btn-warning:hover { backg=
round-color: rgb(240, 173, 78); border-color: rgb(238, 162, 54); }

.btn-warning .badge { color: rgb(240, 173, 78); background-color: rgb(255, =
255, 255); }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(217, 83, 79)=
; border-color: rgb(212, 63, 58); }

.btn-danger.focus, .btn-danger:focus { color: rgb(255, 255, 255); backgroun=
d-color: rgb(201, 48, 44); border-color: rgb(118, 28, 25); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(201, 4=
8, 44); border-color: rgb(172, 41, 37); }

.btn-danger.active, .btn-danger:active, .open > .dropdown-toggle.btn-danger=
 { color: rgb(255, 255, 255); background-color: rgb(201, 48, 44); border-co=
lor: rgb(172, 41, 37); }

.btn-danger.active.focus, .btn-danger.active:focus, .btn-danger.active:hove=
r, .btn-danger:active.focus, .btn-danger:active:focus, .btn-danger:active:h=
over, .open > .dropdown-toggle.btn-danger.focus, .open > .dropdown-toggle.b=
tn-danger:focus, .open > .dropdown-toggle.btn-danger:hover { color: rgb(255=
, 255, 255); background-color: rgb(172, 41, 37); border-color: rgb(118, 28,=
 25); }

.btn-danger.active, .btn-danger:active, .open > .dropdown-toggle.btn-danger=
 { background-image: none; }

.btn-danger.disabled.focus, .btn-danger.disabled:focus, .btn-danger.disable=
d:hover, .btn-danger[disabled].focus, .btn-danger[disabled]:focus, .btn-dan=
ger[disabled]:hover, fieldset[disabled] .btn-danger.focus, fieldset[disable=
d] .btn-danger:focus, fieldset[disabled] .btn-danger:hover { background-col=
or: rgb(217, 83, 79); border-color: rgb(212, 63, 58); }

.btn-danger .badge { color: rgb(217, 83, 79); background-color: rgb(255, 25=
5, 255); }

.btn-link { font-weight: 400; color: rgb(51, 122, 183); border-radius: 0px;=
 }

.btn-link, .btn-link.active, .btn-link:active, .btn-link[disabled], fieldse=
t[disabled] .btn-link { background-color: transparent; box-shadow: none; }

.btn-link, .btn-link:active, .btn-link:focus, .btn-link:hover { border-colo=
r: transparent; }

.btn-link:focus, .btn-link:hover { color: rgb(35, 82, 124); text-decoration=
: underline; background-color: transparent; }

.btn-link[disabled]:focus, .btn-link[disabled]:hover, fieldset[disabled] .b=
tn-link:focus, fieldset[disabled] .btn-link:hover { color: rgb(119, 119, 11=
9); text-decoration: none; }

.btn-group-lg > .btn, .btn-lg { padding: 10px 16px; font-size: 18px; line-h=
eight: 1.33333; border-radius: 6px; }

.btn-group-sm > .btn, .btn-sm { padding: 5px 10px; font-size: 12px; line-he=
ight: 1.5; border-radius: 3px; }

.btn-group-xs > .btn, .btn-xs { padding: 1px 5px; font-size: 12px; line-hei=
ght: 1.5; border-radius: 3px; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 5px; }

input[type=3D"button"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"submit"].btn-block { width: 100%; }

.fade { opacity: 0; transition: opacity 0.15s linear 0s; }

.fade.in { opacity: 1; }

.collapse { display: none; }

.collapse.in { display: block; }

tr.collapse.in { display: table-row; }

tbody.collapse.in { display: table-row-group; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
-timing-function: ease; transition-duration: 0.35s; transition-property: he=
ight, visibility; }

.caret { display: inline-block; width: 0px; height: 0px; margin-left: 2px; =
vertical-align: middle; border-top: 4px dashed; border-right: 4px solid tra=
nsparent; border-left: 4px solid transparent; }

.dropdown, .dropup { position: relative; }

.dropdown-toggle:focus { outline: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 160px; padding: 5px 0px; margin: 2px =
0px 0px; font-size: 14px; text-align: left; list-style: none; background-co=
lor: rgb(255, 255, 255); background-clip: padding-box; border: 1px solid rg=
ba(0, 0, 0, 0.15); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.176) 0px=
 6px 12px; }

.dropdown-menu.pull-right { right: 0px; left: auto; }

.dropdown-menu .divider { height: 1px; margin: 9px 0px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); }

.dropdown-menu > li > a { display: block; padding: 3px 20px; clear: both; f=
ont-weight: 400; line-height: 1.42857; color: rgb(51, 51, 51); white-space:=
 nowrap; }

.dropdown-menu > li > a:focus, .dropdown-menu > li > a:hover { color: rgb(3=
8, 38, 38); text-decoration: none; background-color: rgb(245, 245, 245); }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:focus, .dropdown=
-menu > .active > a:hover { color: rgb(255, 255, 255); text-decoration: non=
e; background-color: rgb(51, 122, 183); outline: 0px; }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:focus, .drop=
down-menu > .disabled > a:hover { color: rgb(119, 119, 119); }

.dropdown-menu > .disabled > a:focus, .dropdown-menu > .disabled > a:hover =
{ text-decoration: none; cursor: not-allowed; background-color: transparent=
; background-image: none; }

.open > .dropdown-menu { display: block; }

.open > a { outline: 0px; }

.dropdown-menu-right { right: 0px; left: auto; }

.dropdown-menu-left { right: auto; left: 0px; }

.dropdown-header { display: block; padding: 3px 20px; font-size: 12px; line=
-height: 1.42857; color: rgb(119, 119, 119); white-space: nowrap; }

.dropdown-backdrop { position: fixed; inset: 0px; z-index: 990; }

.pull-right > .dropdown-menu { right: 0px; left: auto; }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { content: ""; border=
-top: 0px; border-bottom: 4px dashed; }

.dropup .dropdown-menu, .navbar-fixed-bottom .dropdown .dropdown-menu { top=
: auto; bottom: 100%; margin-bottom: 2px; }

@media (min-width: 768px) {
  .navbar-right .dropdown-menu { right: 0px; left: auto; }
  .navbar-right .dropdown-menu-left { right: auto; left: 0px; }
}

.btn-group, .btn-group-vertical { position: relative; display: inline-block=
; vertical-align: middle; }

.btn-group-vertical > .btn, .btn-group > .btn { position: relative; float: =
left; }

.btn-group-vertical > .btn.active, .btn-group-vertical > .btn:active, .btn-=
group-vertical > .btn:focus, .btn-group-vertical > .btn:hover, .btn-group >=
 .btn.active, .btn-group > .btn:active, .btn-group > .btn:focus, .btn-group=
 > .btn:hover { z-index: 2; }

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar { margin-left: -5px; }

.btn-toolbar .btn, .btn-toolbar .btn-group, .btn-toolbar .input-group { flo=
at: left; }

.btn-toolbar > .btn, .btn-toolbar > .btn-group, .btn-toolbar > .input-group=
 { margin-left: 5px; }

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) =
{ border-radius: 0px; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn:last-child:not(:first-child), .btn-group > .dropdown-togg=
le:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.btn-group > .btn-group { float: left; }

.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn { border-=
radius: 0px; }

.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child, .bt=
n-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child { b=
order-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group > .btn + .dropdown-toggle { padding-right: 8px; padding-left: 8p=
x; }

.btn-group > .btn-lg + .dropdown-toggle { padding-right: 12px; padding-left=
: 12px; }

.btn-group.open .dropdown-toggle { box-shadow: rgba(0, 0, 0, 0.125) 0px 3px=
 5px inset; }

.btn-group.open .dropdown-toggle.btn-link { box-shadow: none; }

.btn .caret { margin-left: 0px; }

.btn-lg .caret { border-width: 5px 5px 0px; }

.dropup .btn-lg .caret { border-width: 0px 5px 5px; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group, .btn-group-ve=
rtical > .btn-group > .btn { display: block; float: none; width: 100%; max-=
width: 100%; }

.btn-group-vertical > .btn-group > .btn { float: none; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn:not(:first-child):not(:last-child) { border-radi=
us: 0px; }

.btn-group-vertical > .btn:first-child:not(:last-child) { border-radius: 4p=
x 4px 0px 0px; }

.btn-group-vertical > .btn:last-child:not(:first-child) { border-radius: 0p=
x 0px 4px 4px; }

.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn =
{ border-radius: 0px; }

.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-c=
hild, .btn-group-vertical > .btn-group:first-child:not(:last-child) > .drop=
down-toggle { border-bottom-right-radius: 0px; border-bottom-left-radius: 0=
px; }

.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-=
child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.btn-group-justified { display: table; width: 100%; table-layout: fixed; bo=
rder-collapse: separate; }

.btn-group-justified > .btn, .btn-group-justified > .btn-group { display: t=
able-cell; float: none; width: 1%; }

.btn-group-justified > .btn-group .btn { width: 100%; }

.btn-group-justified > .btn-group .dropdown-menu { left: auto; }

[data-toggle=3D"buttons"] > .btn input[type=3D"checkbox"], [data-toggle=3D"=
buttons"] > .btn input[type=3D"radio"], [data-toggle=3D"buttons"] > .btn-gr=
oup > .btn input[type=3D"checkbox"], [data-toggle=3D"buttons"] > .btn-group=
 > .btn input[type=3D"radio"] { position: absolute; clip: rect(0px, 0px, 0p=
x, 0px); pointer-events: none; }

.input-group { position: relative; display: table; border-collapse: separat=
e; }

.input-group[class*=3D"col-"] { float: none; padding-right: 0px; padding-le=
ft: 0px; }

.input-group .form-control { position: relative; z-index: 2; float: left; w=
idth: 100%; margin-bottom: 0px; }

.input-group .form-control:focus { z-index: 3; }

.input-group-lg > .form-control, .input-group-lg > .input-group-addon, .inp=
ut-group-lg > .input-group-btn > .btn { height: 46px; padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33333; border-radius: 6px; }

select.input-group-lg > .form-control, select.input-group-lg > .input-group=
-addon, select.input-group-lg > .input-group-btn > .btn { height: 46px; lin=
e-height: 46px; }

select[multiple].input-group-lg > .form-control, select[multiple].input-gro=
up-lg > .input-group-addon, select[multiple].input-group-lg > .input-group-=
btn > .btn, textarea.input-group-lg > .form-control, textarea.input-group-l=
g > .input-group-addon, textarea.input-group-lg > .input-group-btn > .btn {=
 height: auto; }

.input-group-sm > .form-control, .input-group-sm > .input-group-addon, .inp=
ut-group-sm > .input-group-btn > .btn { height: 30px; padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; border-radius: 3px; }

select.input-group-sm > .form-control, select.input-group-sm > .input-group=
-addon, select.input-group-sm > .input-group-btn > .btn { height: 30px; lin=
e-height: 30px; }

select[multiple].input-group-sm > .form-control, select[multiple].input-gro=
up-sm > .input-group-addon, select[multiple].input-group-sm > .input-group-=
btn > .btn, textarea.input-group-sm > .form-control, textarea.input-group-s=
m > .input-group-addon, textarea.input-group-sm > .input-group-btn > .btn {=
 height: auto; }

.input-group .form-control, .input-group-addon, .input-group-btn { display:=
 table-cell; }

.input-group .form-control:not(:first-child):not(:last-child), .input-group=
-addon:not(:first-child):not(:last-child), .input-group-btn:not(:first-chil=
d):not(:last-child) { border-radius: 0px; }

.input-group-addon, .input-group-btn { width: 1%; white-space: nowrap; vert=
ical-align: middle; }

.input-group-addon { padding: 6px 12px; font-size: 14px; font-weight: 400; =
line-height: 1; color: rgb(85, 85, 85); text-align: center; background-colo=
r: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); border-radius:=
 4px; }

.input-group-addon.input-sm { padding: 5px 10px; font-size: 12px; border-ra=
dius: 3px; }

.input-group-addon.input-lg { padding: 10px 16px; font-size: 18px; border-r=
adius: 6px; }

.input-group-addon input[type=3D"checkbox"], .input-group-addon input[type=
=3D"radio"] { margin-top: 0px; }

.input-group .form-control:first-child, .input-group-addon:first-child, .in=
put-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-group=
 > .btn, .input-group-btn:first-child > .dropdown-toggle, .input-group-btn:=
last-child > .btn-group:not(:last-child) > .btn, .input-group-btn:last-chil=
d > .btn:not(:last-child):not(.dropdown-toggle) { border-top-right-radius: =
0px; border-bottom-right-radius: 0px; }

.input-group-addon:first-child { border-right: 0px; }

.input-group .form-control:last-child, .input-group-addon:last-child, .inpu=
t-group-btn:first-child > .btn-group:not(:first-child) > .btn, .input-group=
-btn:first-child > .btn:not(:first-child), .input-group-btn:last-child > .b=
tn, .input-group-btn:last-child > .btn-group > .btn, .input-group-btn:last-=
child > .dropdown-toggle { border-top-left-radius: 0px; border-bottom-left-=
radius: 0px; }

.input-group-addon:last-child { border-left: 0px; }

.input-group-btn { position: relative; font-size: 0px; white-space: nowrap;=
 }

.input-group-btn > .btn { position: relative; }

.input-group-btn > .btn + .btn { margin-left: -1px; }

.input-group-btn > .btn:active, .input-group-btn > .btn:focus, .input-group=
-btn > .btn:hover { z-index: 2; }

.input-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-gr=
oup { margin-right: -1px; }

.input-group-btn:last-child > .btn, .input-group-btn:last-child > .btn-grou=
p { z-index: 2; margin-left: -1px; }

.nav { padding-left: 0px; margin-bottom: 0px; list-style: none; }

.nav > li { position: relative; display: block; }

.nav > li > a { position: relative; display: block; padding: 10px 15px; }

.nav > li > a:focus, .nav > li > a:hover { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.nav > li.disabled > a { color: rgb(119, 119, 119); }

.nav > li.disabled > a:focus, .nav > li.disabled > a:hover { color: rgb(119=
, 119, 119); text-decoration: none; cursor: not-allowed; background-color: =
transparent; }

.nav .open > a, .nav .open > a:focus, .nav .open > a:hover { background-col=
or: rgb(238, 238, 238); border-color: rgb(51, 122, 183); }

.nav .nav-divider { height: 1px; margin: 9px 0px; overflow: hidden; backgro=
und-color: rgb(229, 229, 229); }

.nav > li > a > img { max-width: none; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { float: left; margin-bottom: -1px; }

.nav-tabs > li > a { margin-right: 2px; line-height: 1.42857; border: 1px s=
olid transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.=
active > a:hover { color: rgb(85, 85, 85); cursor: default; background-colo=
r: rgb(255, 255, 255); border-width: 1px; border-style: solid; border-color=
: rgb(221, 221, 221) rgb(221, 221, 221) transparent; border-image: initial;=
 }

.nav-tabs.nav-justified { width: 100%; border-bottom: 0px; }

.nav-tabs.nav-justified > li { float: none; }

.nav-tabs.nav-justified > li > a { margin-bottom: 5px; text-align: center; =
}

.nav-tabs.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto;=
 }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li { display: table-cell; width: 1%; }
  .nav-tabs.nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs.nav-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active > =
a:focus, .nav-tabs.nav-justified > .active > a:hover { border: 1px solid rg=
b(221, 221, 221); }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li > a { border-bottom: 1px solid rgb(221, 221,=
 221); border-radius: 4px 4px 0px 0px; }
  .nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active =
> a:focus, .nav-tabs.nav-justified > .active > a:hover { border-bottom-colo=
r: rgb(255, 255, 255); }
}

.nav-pills > li { float: left; }

.nav-pills > li > a { border-radius: 4px; }

.nav-pills > li + li { margin-left: 2px; }

.nav-pills > li.active > a, .nav-pills > li.active > a:focus, .nav-pills > =
li.active > a:hover { color: rgb(255, 255, 255); background-color: rgb(51, =
122, 183); }

.nav-stacked > li { float: none; }

.nav-stacked > li + li { margin-top: 2px; margin-left: 0px; }

.nav-justified { width: 100%; }

.nav-justified > li { float: none; }

.nav-justified > li > a { margin-bottom: 5px; text-align: center; }

.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto; }

@media (min-width: 768px) {
  .nav-justified > li { display: table-cell; width: 1%; }
  .nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs-justified { border-bottom: 0px; }

.nav-tabs-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:focus,=
 .nav-tabs-justified > .active > a:hover { border: 1px solid rgb(221, 221, =
221); }

@media (min-width: 768px) {
  .nav-tabs-justified > li > a { border-bottom: 1px solid rgb(221, 221, 221=
); border-radius: 4px 4px 0px 0px; }
  .nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:focu=
s, .nav-tabs-justified > .active > a:hover { border-bottom-color: rgb(255, =
255, 255); }
}

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.navbar { position: relative; min-height: 50px; margin-bottom: 20px; border=
: 1px solid transparent; }

@media (min-width: 768px) {
  .navbar { border-radius: 4px; }
}

@media (min-width: 768px) {
  .navbar-header { float: left; }
}

.navbar-collapse { padding-right: 15px; padding-left: 15px; overflow-x: vis=
ible; border-top: 1px solid transparent; box-shadow: rgba(255, 255, 255, 0.=
1) 0px 1px 0px inset; }

.navbar-collapse.in { overflow-y: auto; }

@media (min-width: 768px) {
  .navbar-collapse { width: auto; border-top: 0px; box-shadow: none; }
  .navbar-collapse.collapse { padding-bottom: 0px; display: block !importan=
t; height: auto !important; overflow: visible !important; }
  .navbar-collapse.in { overflow-y: visible; }
  .navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse=
, .navbar-static-top .navbar-collapse { padding-right: 0px; padding-left: 0=
px; }
}

.navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse {=
 max-height: 340px; }

@media (max-device-width: 480px) and (orientation: landscape) {
  .navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse=
 { max-height: 200px; }
}

.container-fluid > .navbar-collapse, .container-fluid > .navbar-header, .co=
ntainer > .navbar-collapse, .container > .navbar-header { margin-right: -15=
px; margin-left: -15px; }

@media (min-width: 768px) {
  .container-fluid > .navbar-collapse, .container-fluid > .navbar-header, .=
container > .navbar-collapse, .container > .navbar-header { margin-right: 0=
px; margin-left: 0px; }
}

.navbar-static-top { z-index: 1000; border-width: 0px 0px 1px; }

@media (min-width: 768px) {
  .navbar-static-top { border-radius: 0px; }
}

.navbar-fixed-bottom, .navbar-fixed-top { position: fixed; right: 0px; left=
: 0px; z-index: 1030; }

@media (min-width: 768px) {
  .navbar-fixed-bottom, .navbar-fixed-top { border-radius: 0px; }
}

.navbar-fixed-top { top: 0px; border-width: 0px 0px 1px; }

.navbar-fixed-bottom { bottom: 0px; margin-bottom: 0px; border-width: 1px 0=
px 0px; }

.navbar-brand { float: left; height: 50px; padding: 15px; font-size: 18px; =
line-height: 20px; }

.navbar-brand:focus, .navbar-brand:hover { text-decoration: none; }

.navbar-brand > img { display: block; }

@media (min-width: 768px) {
  .navbar > .container .navbar-brand, .navbar > .container-fluid .navbar-br=
and { margin-left: -15px; }
}

.navbar-toggle { position: relative; float: right; padding: 9px 10px; margi=
n-top: 8px; margin-right: 15px; margin-bottom: 8px; background-color: trans=
parent; background-image: none; border: 1px solid transparent; border-radiu=
s: 4px; }

.navbar-toggle:focus { outline: 0px; }

.navbar-toggle .icon-bar { display: block; width: 22px; height: 2px; border=
-radius: 1px; }

.navbar-toggle .icon-bar + .icon-bar { margin-top: 4px; }

@media (min-width: 768px) {
  .navbar-toggle { display: none; }
}

.navbar-nav { margin: 7.5px -15px; }

.navbar-nav > li > a { padding-top: 10px; padding-bottom: 10px; line-height=
: 20px; }

@media (max-width: 767px) {
  .navbar-nav .open .dropdown-menu { position: static; float: none; width: =
auto; margin-top: 0px; background-color: transparent; border: 0px; box-shad=
ow: none; }
  .navbar-nav .open .dropdown-menu .dropdown-header, .navbar-nav .open .dro=
pdown-menu > li > a { padding: 5px 15px 5px 25px; }
  .navbar-nav .open .dropdown-menu > li > a { line-height: 20px; }
  .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-nav .open .dropd=
own-menu > li > a:hover { background-image: none; }
}

@media (min-width: 768px) {
  .navbar-nav { float: left; margin: 0px; }
  .navbar-nav > li { float: left; }
  .navbar-nav > li > a { padding-top: 15px; padding-bottom: 15px; }
}

.navbar-form { padding: 10px 15px; margin: 8px -15px; border-top: 1px solid=
 transparent; border-bottom: 1px solid transparent; box-shadow: rgba(255, 2=
55, 255, 0.1) 0px 1px 0px inset, rgba(255, 255, 255, 0.1) 0px 1px 0px; }

@media (min-width: 768px) {
  .navbar-form .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .navbar-form .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .navbar-form .form-control-static { display: inline-block; }
  .navbar-form .input-group { display: inline-table; vertical-align: middle=
; }
  .navbar-form .input-group .form-control, .navbar-form .input-group .input=
-group-addon, .navbar-form .input-group .input-group-btn { width: auto; }
  .navbar-form .input-group > .form-control { width: 100%; }
  .navbar-form .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .navbar-form .checkbox, .navbar-form .radio { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .navbar-form .checkbox label, .navbar-form .radio label { padding-left: 0=
px; }
  .navbar-form .checkbox input[type=3D"checkbox"], .navbar-form .radio inpu=
t[type=3D"radio"] { position: relative; margin-left: 0px; }
  .navbar-form .has-feedback .form-control-feedback { top: 0px; }
}

@media (max-width: 767px) {
  .navbar-form .form-group { margin-bottom: 5px; }
  .navbar-form .form-group:last-child { margin-bottom: 0px; }
}

@media (min-width: 768px) {
  .navbar-form { width: auto; padding-top: 0px; padding-bottom: 0px; margin=
-right: 0px; margin-left: 0px; border: 0px; box-shadow: none; }
}

.navbar-nav > li > .dropdown-menu { margin-top: 0px; border-top-left-radius=
: 0px; border-top-right-radius: 0px; }

.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu { margin-bottom: 0px=
; border-radius: 4px 4px 0px 0px; }

.navbar-btn { margin-top: 8px; margin-bottom: 8px; }

.navbar-btn.btn-sm { margin-top: 10px; margin-bottom: 10px; }

.navbar-btn.btn-xs { margin-top: 14px; margin-bottom: 14px; }

.navbar-text { margin-top: 15px; margin-bottom: 15px; }

@media (min-width: 768px) {
  .navbar-text { float: left; margin-right: 15px; margin-left: 15px; }
}

@media (min-width: 768px) {
  .navbar-left { float: left !important; }
  .navbar-right { margin-right: -15px; float: right !important; }
  .navbar-right ~ .navbar-right { margin-right: 0px; }
}

.navbar-default { background-color: rgb(248, 248, 248); border-color: rgb(2=
31, 231, 231); }

.navbar-default .navbar-brand { color: rgb(119, 119, 119); }

.navbar-default .navbar-brand:focus, .navbar-default .navbar-brand:hover { =
color: rgb(94, 94, 94); background-color: transparent; }

.navbar-default .navbar-text { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a:focus, .navbar-default .navbar-nav > l=
i > a:hover { color: rgb(51, 51, 51); background-color: transparent; }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:focus, .navbar-default .navbar-nav > .active > a:hover { color: r=
gb(85, 85, 85); background-color: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > =
.disabled > a:focus, .navbar-default .navbar-nav > .disabled > a:hover { co=
lor: rgb(204, 204, 204); background-color: transparent; }

.navbar-default .navbar-toggle { border-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle:focus, .navbar-default .navbar-toggle:hover =
{ background-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(136, 136, =
136); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border-col=
or: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:focus, .navbar-default .navbar-nav > .open > a:hover { color: rgb(85,=
 85, 85); background-color: rgb(231, 231, 231); }

@media (max-width: 767px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(11=
9, 119, 119); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:hover { color: rgb(51, 51=
, 51); background-color: transparent; }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:hover { color: rgb(85, 85,=
 85); background-color: rgb(231, 231, 231); }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-default .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-de=
fault .navbar-nav .open .dropdown-menu > .disabled > a:hover { color: rgb(2=
04, 204, 204); background-color: transparent; }
}

.navbar-default .navbar-link { color: rgb(119, 119, 119); }

.navbar-default .navbar-link:hover { color: rgb(51, 51, 51); }

.navbar-default .btn-link { color: rgb(119, 119, 119); }

.navbar-default .btn-link:focus, .navbar-default .btn-link:hover { color: r=
gb(51, 51, 51); }

.navbar-default .btn-link[disabled]:focus, .navbar-default .btn-link[disabl=
ed]:hover, fieldset[disabled] .navbar-default .btn-link:focus, fieldset[dis=
abled] .navbar-default .btn-link:hover { color: rgb(204, 204, 204); }

.navbar-inverse { background-color: rgb(34, 34, 34); border-color: rgb(8, 8=
, 8); }

.navbar-inverse .navbar-brand { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-brand:focus, .navbar-inverse .navbar-brand:hover { =
color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-text { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a:focus, .navbar-inverse .navbar-nav > l=
i > a:hover { color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .a=
ctive > a:focus, .navbar-inverse .navbar-nav > .active > a:hover { color: r=
gb(255, 255, 255); background-color: rgb(8, 8, 8); }

.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > =
.disabled > a:focus, .navbar-inverse .navbar-nav > .disabled > a:hover { co=
lor: rgb(68, 68, 68); background-color: transparent; }

.navbar-inverse .navbar-toggle { border-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle:focus, .navbar-inverse .navbar-toggle:hover =
{ background-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle .icon-bar { background-color: rgb(255, 255, =
255); }

.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form { border-col=
or: rgb(16, 16, 16); }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .ope=
n > a:focus, .navbar-inverse .navbar-nav > .open > a:hover { color: rgb(255=
, 255, 255); background-color: rgb(8, 8, 8); }

@media (max-width: 767px) {
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header { bor=
der-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider { background-co=
lor: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a { color: rgb(15=
7, 157, 157); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-=
inverse .navbar-nav .open .dropdown-menu > li > a:hover { color: rgb(255, 2=
55, 255); background-color: transparent; }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-i=
nverse .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-invers=
e .navbar-nav .open .dropdown-menu > .active > a:hover { color: rgb(255, 25=
5, 255); background-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-in=
verse .navbar-nav .open .dropdown-menu > .disabled > a:hover { color: rgb(6=
8, 68, 68); background-color: transparent; }
}

.navbar-inverse .navbar-link { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-link:hover { color: rgb(255, 255, 255); }

.navbar-inverse .btn-link { color: rgb(157, 157, 157); }

.navbar-inverse .btn-link:focus, .navbar-inverse .btn-link:hover { color: r=
gb(255, 255, 255); }

.navbar-inverse .btn-link[disabled]:focus, .navbar-inverse .btn-link[disabl=
ed]:hover, fieldset[disabled] .navbar-inverse .btn-link:focus, fieldset[dis=
abled] .navbar-inverse .btn-link:hover { color: rgb(68, 68, 68); }

.breadcrumb { padding: 8px 15px; margin-bottom: 20px; list-style: none; bac=
kground-color: rgb(245, 245, 245); border-radius: 4px; }

.breadcrumb > li { display: inline-block; }

.breadcrumb > li + li::before { padding: 0px 5px; color: rgb(204, 204, 204)=
; content: "/=C2=A0"; }

.breadcrumb > .active { color: rgb(119, 119, 119); }

.pagination { display: inline-block; padding-left: 0px; margin: 20px 0px; b=
order-radius: 4px; }

.pagination > li { display: inline; }

.pagination > li > a, .pagination > li > span { position: relative; float: =
left; padding: 6px 12px; margin-left: -1px; line-height: 1.42857; color: rg=
b(51, 122, 183); text-decoration: none; background-color: rgb(255, 255, 255=
); border: 1px solid rgb(221, 221, 221); }

.pagination > li:first-child > a, .pagination > li:first-child > span { mar=
gin-left: 0px; border-top-left-radius: 4px; border-bottom-left-radius: 4px;=
 }

.pagination > li:last-child > a, .pagination > li:last-child > span { borde=
r-top-right-radius: 4px; border-bottom-right-radius: 4px; }

.pagination > li > a:focus, .pagination > li > a:hover, .pagination > li > =
span:focus, .pagination > li > span:hover { z-index: 2; color: rgb(35, 82, =
124); background-color: rgb(238, 238, 238); border-color: rgb(221, 221, 221=
); }

.pagination > .active > a, .pagination > .active > a:focus, .pagination > .=
active > a:hover, .pagination > .active > span, .pagination > .active > spa=
n:focus, .pagination > .active > span:hover { z-index: 3; color: rgb(255, 2=
55, 255); cursor: default; background-color: rgb(51, 122, 183); border-colo=
r: rgb(51, 122, 183); }

.pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination=
 > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disa=
bled > span:focus, .pagination > .disabled > span:hover { color: rgb(119, 1=
19, 119); cursor: not-allowed; background-color: rgb(255, 255, 255); border=
-color: rgb(221, 221, 221); }

.pagination-lg > li > a, .pagination-lg > li > span { padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33333; }

.pagination-lg > li:first-child > a, .pagination-lg > li:first-child > span=
 { border-top-left-radius: 6px; border-bottom-left-radius: 6px; }

.pagination-lg > li:last-child > a, .pagination-lg > li:last-child > span {=
 border-top-right-radius: 6px; border-bottom-right-radius: 6px; }

.pagination-sm > li > a, .pagination-sm > li > span { padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; }

.pagination-sm > li:first-child > a, .pagination-sm > li:first-child > span=
 { border-top-left-radius: 3px; border-bottom-left-radius: 3px; }

.pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {=
 border-top-right-radius: 3px; border-bottom-right-radius: 3px; }

.pager { padding-left: 0px; margin: 20px 0px; text-align: center; list-styl=
e: none; }

.pager li { display: inline; }

.pager li > a, .pager li > span { display: inline-block; padding: 5px 14px;=
 background-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221)=
; border-radius: 15px; }

.pager li > a:focus, .pager li > a:hover { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.pager .next > a, .pager .next > span { float: right; }

.pager .previous > a, .pager .previous > span { float: left; }

.pager .disabled > a, .pager .disabled > a:focus, .pager .disabled > a:hove=
r, .pager .disabled > span { color: rgb(119, 119, 119); cursor: not-allowed=
; background-color: rgb(255, 255, 255); }

.label { display: inline; padding: 0.2em 0.6em 0.3em; font-size: 75%; font-=
weight: 700; line-height: 1; color: rgb(255, 255, 255); text-align: center;=
 white-space: nowrap; vertical-align: baseline; border-radius: 0.25em; }

a.label:focus, a.label:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.label:empty { display: none; }

.btn .label { position: relative; top: -1px; }

.label-default { background-color: rgb(119, 119, 119); }

.label-default[href]:focus, .label-default[href]:hover { background-color: =
rgb(94, 94, 94); }

.label-primary { background-color: rgb(51, 122, 183); }

.label-primary[href]:focus, .label-primary[href]:hover { background-color: =
rgb(40, 96, 144); }

.label-success { background-color: rgb(92, 184, 92); }

.label-success[href]:focus, .label-success[href]:hover { background-color: =
rgb(68, 157, 68); }

.label-info { background-color: rgb(91, 192, 222); }

.label-info[href]:focus, .label-info[href]:hover { background-color: rgb(49=
, 176, 213); }

.label-warning { background-color: rgb(240, 173, 78); }

.label-warning[href]:focus, .label-warning[href]:hover { background-color: =
rgb(236, 151, 31); }

.label-danger { background-color: rgb(217, 83, 79); }

.label-danger[href]:focus, .label-danger[href]:hover { background-color: rg=
b(201, 48, 44); }

.badge { display: inline-block; min-width: 10px; padding: 3px 7px; font-siz=
e: 12px; font-weight: 700; line-height: 1; color: rgb(255, 255, 255); text-=
align: center; white-space: nowrap; vertical-align: middle; background-colo=
r: rgb(119, 119, 119); border-radius: 10px; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.btn-group-xs > .btn .badge, .btn-xs .badge { top: 0px; padding: 1px 5px; }

a.badge:focus, a.badge:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.list-group-item.active > .badge, .nav-pills > .active > a > .badge { color=
: rgb(51, 122, 183); background-color: rgb(255, 255, 255); }

.list-group-item > .badge { float: right; }

.list-group-item > .badge + .badge { margin-right: 5px; }

.nav-pills > li > a > .badge { margin-left: 3px; }

.jumbotron { padding-top: 30px; padding-bottom: 30px; margin-bottom: 30px; =
color: inherit; background-color: rgb(238, 238, 238); }

.jumbotron .h1, .jumbotron h1 { color: inherit; }

.jumbotron p { margin-bottom: 15px; font-size: 21px; font-weight: 200; }

.jumbotron > hr { border-top-color: rgb(213, 213, 213); }

.container .jumbotron, .container-fluid .jumbotron { padding-right: 15px; p=
adding-left: 15px; border-radius: 6px; }

.jumbotron .container { max-width: 100%; }

@media screen and (min-width: 768px) {
  .jumbotron { padding-top: 48px; padding-bottom: 48px; }
  .container .jumbotron, .container-fluid .jumbotron { padding-right: 60px;=
 padding-left: 60px; }
  .jumbotron .h1, .jumbotron h1 { font-size: 63px; }
}

.thumbnail { display: block; padding: 4px; margin-bottom: 20px; line-height=
: 1.42857; background-color: rgb(255, 255, 255); border: 1px solid rgb(221,=
 221, 221); border-radius: 4px; transition: border 0.2s ease-in-out 0s; }

.thumbnail a > img, .thumbnail > img { margin-right: auto; margin-left: aut=
o; }

a.thumbnail.active, a.thumbnail:focus, a.thumbnail:hover { border-color: rg=
b(51, 122, 183); }

.thumbnail .caption { padding: 9px; color: rgb(51, 51, 51); }

.alert { padding: 15px; margin-bottom: 20px; border: 1px solid transparent;=
 border-radius: 4px; }

.alert h4 { margin-top: 0px; color: inherit; }

.alert .alert-link { font-weight: 700; }

.alert > p, .alert > ul { margin-bottom: 0px; }

.alert > p + p { margin-top: 5px; }

.alert-dismissable, .alert-dismissible { padding-right: 35px; }

.alert-dismissable .close, .alert-dismissible .close { position: relative; =
top: -2px; right: -21px; color: inherit; }

.alert-success { color: rgb(60, 118, 61); background-color: rgb(223, 240, 2=
16); border-color: rgb(214, 233, 198); }

.alert-success hr { border-top-color: rgb(201, 226, 179); }

.alert-success .alert-link { color: rgb(43, 84, 44); }

.alert-info { color: rgb(49, 112, 143); background-color: rgb(217, 237, 247=
); border-color: rgb(188, 232, 241); }

.alert-info hr { border-top-color: rgb(166, 225, 236); }

.alert-info .alert-link { color: rgb(36, 82, 105); }

.alert-warning { color: rgb(138, 109, 59); background-color: rgb(252, 248, =
227); border-color: rgb(250, 235, 204); }

.alert-warning hr { border-top-color: rgb(247, 225, 181); }

.alert-warning .alert-link { color: rgb(102, 81, 44); }

.alert-danger { color: rgb(169, 68, 66); background-color: rgb(242, 222, 22=
2); border-color: rgb(235, 204, 209); }

.alert-danger hr { border-top-color: rgb(228, 185, 192); }

.alert-danger .alert-link { color: rgb(132, 53, 52); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

.progress { height: 20px; margin-bottom: 20px; overflow: hidden; background=
-color: rgb(245, 245, 245); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0=
.1) 0px 1px 2px inset; }

.progress-bar { float: left; width: 0px; height: 100%; font-size: 12px; lin=
e-height: 20px; color: rgb(255, 255, 255); text-align: center; background-c=
olor: rgb(51, 122, 183); box-shadow: rgba(0, 0, 0, 0.15) 0px -1px 0px inset=
; transition: width 0.6s ease 0s; }

.progress-bar-striped, .progress-striped .progress-bar { background-image: =
linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, tran=
sparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, =
transparent 75%, transparent); background-size: 40px 40px; }

.progress-bar.active, .progress.active .progress-bar { animation: 2s linear=
 0s infinite normal none running progress-bar-stripes; }

.progress-bar-success { background-color: rgb(92, 184, 92); }

.progress-striped .progress-bar-success { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-info { background-color: rgb(91, 192, 222); }

.progress-striped .progress-bar-info { background-image: linear-gradient(45=
deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(=
255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, t=
ransparent); }

.progress-bar-warning { background-color: rgb(240, 173, 78); }

.progress-striped .progress-bar-warning { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-danger { background-color: rgb(217, 83, 79); }

.progress-striped .progress-bar-danger { background-image: linear-gradient(=
45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgb=
a(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%,=
 transparent); }

.media { margin-top: 15px; }

.media:first-child { margin-top: 0px; }

.media, .media-body { overflow: hidden; zoom: 1; }

.media-body { width: 10000px; }

.media-object { display: block; }

.media-object.img-thumbnail { max-width: none; }

.media-right, .media > .pull-right { padding-left: 10px; }

.media-left, .media > .pull-left { padding-right: 10px; }

.media-body, .media-left, .media-right { display: table-cell; vertical-alig=
n: top; }

.media-middle { vertical-align: middle; }

.media-bottom { vertical-align: bottom; }

.media-heading { margin-top: 0px; margin-bottom: 5px; }

.media-list { padding-left: 0px; list-style: none; }

.list-group { padding-left: 0px; margin-bottom: 20px; }

.list-group-item { position: relative; display: block; padding: 10px 15px; =
margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1px soli=
d rgb(221, 221, 221); }

.list-group-item:first-child { border-top-left-radius: 4px; border-top-righ=
t-radius: 4px; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 4px; border-bottom-left-radius: 4px; }

a.list-group-item, button.list-group-item { color: rgb(85, 85, 85); }

a.list-group-item .list-group-item-heading, button.list-group-item .list-gr=
oup-item-heading { color: rgb(51, 51, 51); }

a.list-group-item:focus, a.list-group-item:hover, button.list-group-item:fo=
cus, button.list-group-item:hover { color: rgb(85, 85, 85); text-decoration=
: none; background-color: rgb(245, 245, 245); }

button.list-group-item { width: 100%; text-align: left; }

.list-group-item.disabled, .list-group-item.disabled:focus, .list-group-ite=
m.disabled:hover { color: rgb(119, 119, 119); cursor: not-allowed; backgrou=
nd-color: rgb(238, 238, 238); }

.list-group-item.disabled .list-group-item-heading, .list-group-item.disabl=
ed:focus .list-group-item-heading, .list-group-item.disabled:hover .list-gr=
oup-item-heading { color: inherit; }

.list-group-item.disabled .list-group-item-text, .list-group-item.disabled:=
focus .list-group-item-text, .list-group-item.disabled:hover .list-group-it=
em-text { color: rgb(119, 119, 119); }

.list-group-item.active, .list-group-item.active:focus, .list-group-item.ac=
tive:hover { z-index: 2; color: rgb(255, 255, 255); background-color: rgb(5=
1, 122, 183); border-color: rgb(51, 122, 183); }

.list-group-item.active .list-group-item-heading, .list-group-item.active .=
list-group-item-heading > .small, .list-group-item.active .list-group-item-=
heading > small, .list-group-item.active:focus .list-group-item-heading, .l=
ist-group-item.active:focus .list-group-item-heading > .small, .list-group-=
item.active:focus .list-group-item-heading > small, .list-group-item.active=
:hover .list-group-item-heading, .list-group-item.active:hover .list-group-=
item-heading > .small, .list-group-item.active:hover .list-group-item-headi=
ng > small { color: inherit; }

.list-group-item.active .list-group-item-text, .list-group-item.active:focu=
s .list-group-item-text, .list-group-item.active:hover .list-group-item-tex=
t { color: rgb(199, 221, 239); }

.list-group-item-success { color: rgb(60, 118, 61); background-color: rgb(2=
23, 240, 216); }

a.list-group-item-success, button.list-group-item-success { color: rgb(60, =
118, 61); }

a.list-group-item-success .list-group-item-heading, button.list-group-item-=
success .list-group-item-heading { color: inherit; }

a.list-group-item-success:focus, a.list-group-item-success:hover, button.li=
st-group-item-success:focus, button.list-group-item-success:hover { color: =
rgb(60, 118, 61); background-color: rgb(208, 233, 198); }

a.list-group-item-success.active, a.list-group-item-success.active:focus, a=
.list-group-item-success.active:hover, button.list-group-item-success.activ=
e, button.list-group-item-success.active:focus, button.list-group-item-succ=
ess.active:hover { color: rgb(255, 255, 255); background-color: rgb(60, 118=
, 61); border-color: rgb(60, 118, 61); }

.list-group-item-info { color: rgb(49, 112, 143); background-color: rgb(217=
, 237, 247); }

a.list-group-item-info, button.list-group-item-info { color: rgb(49, 112, 1=
43); }

a.list-group-item-info .list-group-item-heading, button.list-group-item-inf=
o .list-group-item-heading { color: inherit; }

a.list-group-item-info:focus, a.list-group-item-info:hover, button.list-gro=
up-item-info:focus, button.list-group-item-info:hover { color: rgb(49, 112,=
 143); background-color: rgb(196, 227, 243); }

a.list-group-item-info.active, a.list-group-item-info.active:focus, a.list-=
group-item-info.active:hover, button.list-group-item-info.active, button.li=
st-group-item-info.active:focus, button.list-group-item-info.active:hover {=
 color: rgb(255, 255, 255); background-color: rgb(49, 112, 143); border-col=
or: rgb(49, 112, 143); }

.list-group-item-warning { color: rgb(138, 109, 59); background-color: rgb(=
252, 248, 227); }

a.list-group-item-warning, button.list-group-item-warning { color: rgb(138,=
 109, 59); }

a.list-group-item-warning .list-group-item-heading, button.list-group-item-=
warning .list-group-item-heading { color: inherit; }

a.list-group-item-warning:focus, a.list-group-item-warning:hover, button.li=
st-group-item-warning:focus, button.list-group-item-warning:hover { color: =
rgb(138, 109, 59); background-color: rgb(250, 242, 204); }

a.list-group-item-warning.active, a.list-group-item-warning.active:focus, a=
.list-group-item-warning.active:hover, button.list-group-item-warning.activ=
e, button.list-group-item-warning.active:focus, button.list-group-item-warn=
ing.active:hover { color: rgb(255, 255, 255); background-color: rgb(138, 10=
9, 59); border-color: rgb(138, 109, 59); }

.list-group-item-danger { color: rgb(169, 68, 66); background-color: rgb(24=
2, 222, 222); }

a.list-group-item-danger, button.list-group-item-danger { color: rgb(169, 6=
8, 66); }

a.list-group-item-danger .list-group-item-heading, button.list-group-item-d=
anger .list-group-item-heading { color: inherit; }

a.list-group-item-danger:focus, a.list-group-item-danger:hover, button.list=
-group-item-danger:focus, button.list-group-item-danger:hover { color: rgb(=
169, 68, 66); background-color: rgb(235, 204, 204); }

a.list-group-item-danger.active, a.list-group-item-danger.active:focus, a.l=
ist-group-item-danger.active:hover, button.list-group-item-danger.active, b=
utton.list-group-item-danger.active:focus, button.list-group-item-danger.ac=
tive:hover { color: rgb(255, 255, 255); background-color: rgb(169, 68, 66);=
 border-color: rgb(169, 68, 66); }

.list-group-item-heading { margin-top: 0px; margin-bottom: 5px; }

.list-group-item-text { margin-bottom: 0px; line-height: 1.3; }

.panel { margin-bottom: 20px; background-color: rgb(255, 255, 255); border:=
 1px solid transparent; border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.05)=
 0px 1px 1px; }

.panel-body { padding: 15px; }

.panel-heading { padding: 10px 15px; border-bottom: 1px solid transparent; =
border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel-heading > .dropdown .dropdown-toggle { color: inherit; }

.panel-title { margin-top: 0px; margin-bottom: 0px; font-size: 16px; color:=
 inherit; }

.panel-title > .small, .panel-title > .small > a, .panel-title > a, .panel-=
title > small, .panel-title > small > a { color: inherit; }

.panel-footer { padding: 10px 15px; background-color: rgb(245, 245, 245); b=
order-top: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 3px; b=
order-bottom-left-radius: 3px; }

.panel > .list-group, .panel > .panel-collapse > .list-group { margin-botto=
m: 0px; }

.panel > .list-group .list-group-item, .panel > .panel-collapse > .list-gro=
up .list-group-item { border-width: 1px 0px; border-radius: 0px; }

.panel > .list-group:first-child .list-group-item:first-child, .panel > .pa=
nel-collapse > .list-group:first-child .list-group-item:first-child { borde=
r-top: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel > .list-group:last-child .list-group-item:last-child, .panel > .pane=
l-collapse > .list-group:last-child .list-group-item:last-child { border-bo=
ttom: 0px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;=
 }

.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:fi=
rst-child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.panel-heading + .list-group .list-group-item:first-child { border-top-widt=
h: 0px; }

.list-group + .panel-footer { border-top-width: 0px; }

.panel > .panel-collapse > .table, .panel > .table, .panel > .table-respons=
ive > .table { margin-bottom: 0px; }

.panel > .panel-collapse > .table caption, .panel > .table caption, .panel =
> .table-responsive > .table caption { padding-right: 15px; padding-left: 1=
5px; }

.panel > .table-responsive:first-child > .table:first-child, .panel > .tabl=
e:first-child { border-top-left-radius: 3px; border-top-right-radius: 3px; =
}

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child, .panel > .table-responsive:first-child > .table:firs=
t-child > thead:first-child > tr:first-child, .panel > .table:first-child >=
 tbody:first-child > tr:first-child, .panel > .table:first-child > thead:fi=
rst-child > tr:first-child { border-top-left-radius: 3px; border-top-right-=
radius: 3px; }

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child td:first-child, .panel > .table-responsive:first-chil=
d > .table:first-child > tbody:first-child > tr:first-child th:first-child,=
 .panel > .table-responsive:first-child > .table:first-child > thead:first-=
child > tr:first-child td:first-child, .panel > .table-responsive:first-chi=
ld > .table:first-child > thead:first-child > tr:first-child th:first-child=
, .panel > .table:first-child > tbody:first-child > tr:first-child td:first=
-child, .panel > .table:first-child > tbody:first-child > tr:first-child th=
:first-child, .panel > .table:first-child > thead:first-child > tr:first-ch=
ild td:first-child, .panel > .table:first-child > thead:first-child > tr:fi=
rst-child th:first-child { border-top-left-radius: 3px; }

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child td:last-child, .panel > .table-responsive:first-child=
 > .table:first-child > tbody:first-child > tr:first-child th:last-child, .=
panel > .table-responsive:first-child > .table:first-child > thead:first-ch=
ild > tr:first-child td:last-child, .panel > .table-responsive:first-child =
> .table:first-child > thead:first-child > tr:first-child th:last-child, .p=
anel > .table:first-child > tbody:first-child > tr:first-child td:last-chil=
d, .panel > .table:first-child > tbody:first-child > tr:first-child th:last=
-child, .panel > .table:first-child > thead:first-child > tr:first-child td=
:last-child, .panel > .table:first-child > thead:first-child > tr:first-chi=
ld th:last-child { border-top-right-radius: 3px; }

.panel > .table-responsive:last-child > .table:last-child, .panel > .table:=
last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: 3p=
x; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child, .panel > .table-responsive:last-child > .table:last-chil=
d > tfoot:last-child > tr:last-child, .panel > .table:last-child > tbody:la=
st-child > tr:last-child, .panel > .table:last-child > tfoot:last-child > t=
r:last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: =
3px; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child td:first-child, .panel > .table-responsive:last-child > .=
table:last-child > tbody:last-child > tr:last-child th:first-child, .panel =
> .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:=
last-child td:first-child, .panel > .table-responsive:last-child > .table:l=
ast-child > tfoot:last-child > tr:last-child th:first-child, .panel > .tabl=
e:last-child > tbody:last-child > tr:last-child td:first-child, .panel > .t=
able:last-child > tbody:last-child > tr:last-child th:first-child, .panel >=
 .table:last-child > tfoot:last-child > tr:last-child td:first-child, .pane=
l > .table:last-child > tfoot:last-child > tr:last-child th:first-child { b=
order-bottom-left-radius: 3px; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child td:last-child, .panel > .table-responsive:last-child > .t=
able:last-child > tbody:last-child > tr:last-child th:last-child, .panel > =
.table-responsive:last-child > .table:last-child > tfoot:last-child > tr:la=
st-child td:last-child, .panel > .table-responsive:last-child > .table:last=
-child > tfoot:last-child > tr:last-child th:last-child, .panel > .table:la=
st-child > tbody:last-child > tr:last-child td:last-child, .panel > .table:=
last-child > tbody:last-child > tr:last-child th:last-child, .panel > .tabl=
e:last-child > tfoot:last-child > tr:last-child td:last-child, .panel > .ta=
ble:last-child > tfoot:last-child > tr:last-child th:last-child { border-bo=
ttom-right-radius: 3px; }

.panel > .panel-body + .table, .panel > .panel-body + .table-responsive, .p=
anel > .table + .panel-body, .panel > .table-responsive + .panel-body { bor=
der-top: 1px solid rgb(221, 221, 221); }

.panel > .table > tbody:first-child > tr:first-child td, .panel > .table > =
tbody:first-child > tr:first-child th { border-top: 0px; }

.panel > .table-bordered, .panel > .table-responsive > .table-bordered { bo=
rder: 0px; }

.panel > .table-bordered > tbody > tr > td:first-child, .panel > .table-bor=
dered > tbody > tr > th:first-child, .panel > .table-bordered > tfoot > tr =
> td:first-child, .panel > .table-bordered > tfoot > tr > th:first-child, .=
panel > .table-bordered > thead > tr > td:first-child, .panel > .table-bord=
ered > thead > tr > th:first-child, .panel > .table-responsive > .table-bor=
dered > tbody > tr > td:first-child, .panel > .table-responsive > .table-bo=
rdered > tbody > tr > th:first-child, .panel > .table-responsive > .table-b=
ordered > tfoot > tr > td:first-child, .panel > .table-responsive > .table-=
bordered > tfoot > tr > th:first-child, .panel > .table-responsive > .table=
-bordered > thead > tr > td:first-child, .panel > .table-responsive > .tabl=
e-bordered > thead > tr > th:first-child { border-left: 0px; }

.panel > .table-bordered > tbody > tr > td:last-child, .panel > .table-bord=
ered > tbody > tr > th:last-child, .panel > .table-bordered > tfoot > tr > =
td:last-child, .panel > .table-bordered > tfoot > tr > th:last-child, .pane=
l > .table-bordered > thead > tr > td:last-child, .panel > .table-bordered =
> thead > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > th:last-child { border-right: 0px; }

.panel > .table-bordered > tbody > tr:first-child > td, .panel > .table-bor=
dered > tbody > tr:first-child > th, .panel > .table-bordered > thead > tr:=
first-child > td, .panel > .table-bordered > thead > tr:first-child > th, .=
panel > .table-responsive > .table-bordered > tbody > tr:first-child > td, =
.panel > .table-responsive > .table-bordered > tbody > tr:first-child > th,=
 .panel > .table-responsive > .table-bordered > thead > tr:first-child > td=
, .panel > .table-responsive > .table-bordered > thead > tr:first-child > t=
h { border-bottom: 0px; }

.panel > .table-bordered > tbody > tr:last-child > td, .panel > .table-bord=
ered > tbody > tr:last-child > th, .panel > .table-bordered > tfoot > tr:la=
st-child > td, .panel > .table-bordered > tfoot > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tbody > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > tbody > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > th { bord=
er-bottom: 0px; }

.panel > .table-responsive { margin-bottom: 0px; border: 0px; }

.panel-group { margin-bottom: 20px; }

.panel-group .panel { margin-bottom: 0px; border-radius: 4px; }

.panel-group .panel + .panel { margin-top: 5px; }

.panel-group .panel-heading { border-bottom: 0px; }

.panel-group .panel-heading + .panel-collapse > .list-group, .panel-group .=
panel-heading + .panel-collapse > .panel-body { border-top: 1px solid rgb(2=
21, 221, 221); }

.panel-group .panel-footer { border-top: 0px; }

.panel-group .panel-footer + .panel-collapse .panel-body { border-bottom: 1=
px solid rgb(221, 221, 221); }

.panel-default { border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading { color: rgb(51, 51, 51); background-color:=
 rgb(245, 245, 245); border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(221, 221, 221); }

.panel-default > .panel-heading .badge { color: rgb(245, 245, 245); backgro=
und-color: rgb(51, 51, 51); }

.panel-default > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(221, 221, 221); }

.panel-primary { border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading { color: rgb(255, 255, 255); background-col=
or: rgb(51, 122, 183); border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading .badge { color: rgb(51, 122, 183); backgrou=
nd-color: rgb(255, 255, 255); }

.panel-primary > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(51, 122, 183); }

.panel-success { border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(214, 233, 198); }

.panel-success > .panel-heading .badge { color: rgb(223, 240, 216); backgro=
und-color: rgb(60, 118, 61); }

.panel-success > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(214, 233, 198); }

.panel-info { border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading { color: rgb(49, 112, 143); background-color: =
rgb(217, 237, 247); border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading + .panel-collapse > .panel-body { border-top-c=
olor: rgb(188, 232, 241); }

.panel-info > .panel-heading .badge { color: rgb(217, 237, 247); background=
-color: rgb(49, 112, 143); }

.panel-info > .panel-footer + .panel-collapse > .panel-body { border-bottom=
-color: rgb(188, 232, 241); }

.panel-warning { border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading .badge { color: rgb(252, 248, 227); backgro=
und-color: rgb(138, 109, 59); }

.panel-warning > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(250, 235, 204); }

.panel-danger { border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading { color: rgb(169, 68, 66); background-color:=
 rgb(242, 222, 222); border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading + .panel-collapse > .panel-body { border-top=
-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading .badge { color: rgb(242, 222, 222); backgrou=
nd-color: rgb(169, 68, 66); }

.panel-danger > .panel-footer + .panel-collapse > .panel-body { border-bott=
om-color: rgb(235, 204, 209); }

.embed-responsive { position: relative; display: block; height: 0px; paddin=
g: 0px; overflow: hidden; }

.embed-responsive .embed-responsive-item, .embed-responsive embed, .embed-r=
esponsive iframe, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-16by9 { padding-bottom: 56.25%; }

.embed-responsive-4by3 { padding-bottom: 75%; }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgb(227, 227, 227); border-radiu=
s: 4px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.15); }

.well-lg { padding: 24px; border-radius: 6px; }

.well-sm { padding: 9px; border-radius: 3px; }

.close { float: right; font-size: 21px; font-weight: 700; line-height: 1; c=
olor: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity: 0=
.2; }

.close:focus, .close:hover { color: rgb(0, 0, 0); text-decoration: none; cu=
rsor: pointer; opacity: 0.5; }

button.close { appearance: none; padding: 0px; cursor: pointer; background:=
 0px 0px; border: 0px; }

.modal-open { overflow: hidden; }

.modal { position: fixed; inset: 0px; z-index: 1050; display: none; overflo=
w: hidden; outline: 0px; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out 0s; transfo=
rm: translate(0px, -25%); }

.modal.in .modal-dialog { transform: translate(0px, 0px); }

.modal-open .modal { overflow: hidden auto; }

.modal-dialog { position: relative; width: auto; margin: 10px; }

.modal-content { position: relative; background-color: rgb(255, 255, 255); =
background-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-=
radius: 6px; outline: 0px; box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 9px; }

.modal-backdrop { position: fixed; inset: 0px; z-index: 1040; background-co=
lor: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.in { opacity: 0.5; }

.modal-header { padding: 15px; border-bottom: 1px solid rgb(229, 229, 229);=
 }

.modal-header .close { margin-top: -2px; }

.modal-title { margin: 0px; line-height: 1.42857; }

.modal-body { position: relative; padding: 15px; }

.modal-footer { padding: 15px; text-align: right; border-top: 1px solid rgb=
(229, 229, 229); }

.modal-footer .btn + .btn { margin-bottom: 0px; margin-left: 5px; }

.modal-footer .btn-group .btn + .btn { margin-left: -1px; }

.modal-footer .btn-block + .btn-block { margin-left: 0px; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 768px) {
  .modal-dialog { width: 600px; margin: 30px auto; }
  .modal-content { box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px; }
  .modal-sm { width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg { width: 900px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; font-style=
: normal; font-weight: 400; line-height: 1.42857; text-align: start; text-d=
ecoration: none; text-shadow: none; text-transform: none; letter-spacing: n=
ormal; word-break: normal; word-spacing: normal; overflow-wrap: normal; whi=
te-space: normal; opacity: 0; line-break: auto; }

.tooltip.in { opacity: 0.9; }

.tooltip.top { padding: 5px 0px; margin-top: -3px; }

.tooltip.right { padding: 0px 5px; margin-left: 3px; }

.tooltip.bottom { padding: 5px 0px; margin-top: 3px; }

.tooltip.left { padding: 0px 5px; margin-left: -3px; }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; background-color: rgb(0, 0, 0); border-radius: 4px=
; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; border-color:=
 transparent; border-style: solid; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-left .tooltip-arrow { right: 5px; bottom: 0px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-right .tooltip-arrow { bottom: 0px; left: 5px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-width: 5px 5px 5px 0px; border-right-color: rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-width: 5px 0px 5px 5px; border-left-color: rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-left .tooltip-arrow { top: 0px; right: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-right .tooltip-arrow { top: 0px; left: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 none; max-width: 276px; padding: 1px; font-family: "Helvetica Neue", Helve=
tica, Arial, sans-serif; font-size: 14px; font-style: normal; font-weight: =
400; line-height: 1.42857; text-align: start; text-decoration: none; text-s=
hadow: none; text-transform: none; letter-spacing: normal; word-break: norm=
al; word-spacing: normal; overflow-wrap: normal; white-space: normal; backg=
round-color: rgb(255, 255, 255); background-clip: padding-box; border: 1px =
solid rgba(0, 0, 0, 0.2); border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2=
) 0px 5px 10px; line-break: auto; }

.popover.top { margin-top: -10px; }

.popover.right { margin-left: 10px; }

.popover.bottom { margin-top: 10px; }

.popover.left { margin-left: -10px; }

.popover-title { padding: 8px 14px; margin: 0px; font-size: 14px; backgroun=
d-color: rgb(247, 247, 247); border-bottom: 1px solid rgb(235, 235, 235); b=
order-radius: 5px 5px 0px 0px; }

.popover-content { padding: 9px 14px; }

.popover > .arrow, .popover > .arrow::after { position: absolute; display: =
block; width: 0px; height: 0px; border-color: transparent; border-style: so=
lid; }

.popover > .arrow { border-width: 11px; }

.popover > .arrow::after { content: ""; border-width: 10px; }

.popover.top > .arrow { bottom: -11px; left: 50%; margin-left: -11px; borde=
r-top-color: rgba(0, 0, 0, 0.25); border-bottom-width: 0px; }

.popover.top > .arrow::after { bottom: 1px; margin-left: -10px; content: " =
"; border-top-color: rgb(255, 255, 255); border-bottom-width: 0px; }

.popover.right > .arrow { top: 50%; left: -11px; margin-top: -11px; border-=
right-color: rgba(0, 0, 0, 0.25); border-left-width: 0px; }

.popover.right > .arrow::after { bottom: -10px; left: 1px; content: " "; bo=
rder-right-color: rgb(255, 255, 255); border-left-width: 0px; }

.popover.bottom > .arrow { top: -11px; left: 50%; margin-left: -11px; borde=
r-top-width: 0px; border-bottom-color: rgba(0, 0, 0, 0.25); }

.popover.bottom > .arrow::after { top: 1px; margin-left: -10px; content: " =
"; border-top-width: 0px; border-bottom-color: rgb(255, 255, 255); }

.popover.left > .arrow { top: 50%; right: -11px; margin-top: -11px; border-=
right-width: 0px; border-left-color: rgba(0, 0, 0, 0.25); }

.popover.left > .arrow::after { right: 1px; bottom: -10px; content: " "; bo=
rder-right-width: 0px; border-left-color: rgb(255, 255, 255); }

.carousel { position: relative; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-inner > .item { position: relative; display: none; transition: le=
ft 0.6s ease-in-out 0s; }

.carousel-inner > .item > a > img, .carousel-inner > .item > img { line-hei=
ght: 1; }

@media (transform-3d), (-webkit-transform-3d) {
  .carousel-inner > .item { transition: transform 0.6s ease-in-out 0s; back=
face-visibility: hidden; perspective: 1000px; }
  .carousel-inner > .item.active.right, .carousel-inner > .item.next { left=
: 0px; transform: translate3d(100%, 0px, 0px); }
  .carousel-inner > .item.active.left, .carousel-inner > .item.prev { left:=
 0px; transform: translate3d(-100%, 0px, 0px); }
  .carousel-inner > .item.active, .carousel-inner > .item.next.left, .carou=
sel-inner > .item.prev.right { left: 0px; transform: translate3d(0px, 0px, =
0px); }
}

.carousel-inner > .active, .carousel-inner > .next, .carousel-inner > .prev=
 { display: block; }

.carousel-inner > .active { left: 0px; }

.carousel-inner > .next, .carousel-inner > .prev { position: absolute; top:=
 0px; width: 100%; }

.carousel-inner > .next { left: 100%; }

.carousel-inner > .prev { left: -100%; }

.carousel-inner > .next.left, .carousel-inner > .prev.right { left: 0px; }

.carousel-inner > .active.left { left: -100%; }

.carousel-inner > .active.right { left: 100%; }

.carousel-control { position: absolute; top: 0px; bottom: 0px; left: 0px; w=
idth: 15%; font-size: 20px; color: rgb(255, 255, 255); text-align: center; =
text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; background-color: rgba(0, 0, 0=
, 0); opacity: 0.5; }

.carousel-control.left { background-image: linear-gradient(to right, rgba(0=
, 0, 0, 0.5) 0px, rgba(0, 0, 0, 0) 100%); background-repeat: repeat-x; }

.carousel-control.right { right: 0px; left: auto; background-image: linear-=
gradient(to right, rgba(0, 0, 0, 0) 0px, rgba(0, 0, 0, 0.5) 100%); backgrou=
nd-repeat: repeat-x; }

.carousel-control:focus, .carousel-control:hover { color: rgb(255, 255, 255=
); text-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-che=
vron-right, .carousel-control .icon-next, .carousel-control .icon-prev { po=
sition: absolute; top: 50%; z-index: 5; display: inline-block; margin-top: =
-10px; }

.carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev { l=
eft: 50%; margin-left: -10px; }

.carousel-control .glyphicon-chevron-right, .carousel-control .icon-next { =
right: 50%; margin-right: -10px; }

.carousel-control .icon-next, .carousel-control .icon-prev { width: 20px; h=
eight: 20px; font-family: serif; line-height: 1; }

.carousel-control .icon-prev::before { content: "=E2=80=B9"; }

.carousel-control .icon-next::before { content: "=E2=80=BA"; }

.carousel-indicators { position: absolute; bottom: 10px; left: 50%; z-index=
: 15; width: 60%; padding-left: 0px; margin-left: -30%; text-align: center;=
 list-style: none; }

.carousel-indicators li { display: inline-block; width: 10px; height: 10px;=
 margin: 1px; text-indent: -999px; cursor: pointer; background-color: rgba(=
0, 0, 0, 0); border: 1px solid rgb(255, 255, 255); border-radius: 10px; }

.carousel-indicators .active { width: 12px; height: 12px; margin: 0px; back=
ground-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-caption .btn { text-shadow: none; }

@media screen and (min-width: 768px) {
  .carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-c=
hevron-right, .carousel-control .icon-next, .carousel-control .icon-prev { =
width: 30px; height: 30px; margin-top: -10px; font-size: 30px; }
  .carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev {=
 margin-left: -10px; }
  .carousel-control .glyphicon-chevron-right, .carousel-control .icon-next =
{ margin-right: -10px; }
  .carousel-caption { right: 20%; left: 20%; padding-bottom: 30px; }
  .carousel-indicators { bottom: 20px; }
}

.btn-group-vertical > .btn-group::after, .btn-group-vertical > .btn-group::=
before, .btn-toolbar::after, .btn-toolbar::before, .clearfix::after, .clear=
fix::before, .container-fluid::after, .container-fluid::before, .container:=
:after, .container::before, .dl-horizontal dd::after, .dl-horizontal dd::be=
fore, .form-horizontal .form-group::after, .form-horizontal .form-group::be=
fore, .modal-footer::after, .modal-footer::before, .modal-header::after, .m=
odal-header::before, .nav::after, .nav::before, .navbar-collapse::after, .n=
avbar-collapse::before, .navbar-header::after, .navbar-header::before, .nav=
bar::after, .navbar::before, .pager::after, .pager::before, .panel-body::af=
ter, .panel-body::before, .row::after, .row::before { display: table; conte=
nt: " "; }

.btn-group-vertical > .btn-group::after, .btn-toolbar::after, .clearfix::af=
ter, .container-fluid::after, .container::after, .dl-horizontal dd::after, =
.form-horizontal .form-group::after, .modal-footer::after, .modal-header::a=
fter, .nav::after, .navbar-collapse::after, .navbar-header::after, .navbar:=
:after, .pager::after, .panel-body::after, .row::after { clear: both; }

.center-block { display: block; margin-right: auto; margin-left: auto; }

.pull-right { float: right !important; }

.pull-left { float: left !important; }

.hide { display: none !important; }

.show { display: block !important; }

.invisible { visibility: hidden; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.hidden { display: none !important; }

.affix { position: fixed; }

.visible-lg, .visible-md, .visible-sm, .visible-xs { display: none !importa=
nt; }

.visible-lg-block, .visible-lg-inline, .visible-lg-inline-block, .visible-m=
d-block, .visible-md-inline, .visible-md-inline-block, .visible-sm-block, .=
visible-sm-inline, .visible-sm-inline-block, .visible-xs-block, .visible-xs=
-inline, .visible-xs-inline-block { display: none !important; }

@media (max-width: 767px) {
  .visible-xs { display: block !important; }
  table.visible-xs { display: table !important; }
  tr.visible-xs { display: table-row !important; }
  td.visible-xs, th.visible-xs { display: table-cell !important; }
}

@media (max-width: 767px) {
  .visible-xs-block { display: block !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline { display: inline !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline-block { display: inline-block !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm { display: block !important; }
  table.visible-sm { display: table !important; }
  tr.visible-sm { display: table-row !important; }
  td.visible-sm, th.visible-sm { display: table-cell !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-block { display: block !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline { display: inline !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline-block { display: inline-block !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md { display: block !important; }
  table.visible-md { display: table !important; }
  tr.visible-md { display: table-row !important; }
  td.visible-md, th.visible-md { display: table-cell !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-block { display: block !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline { display: inline !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline-block { display: inline-block !important; }
}

@media (min-width: 1200px) {
  .visible-lg { display: block !important; }
  table.visible-lg { display: table !important; }
  tr.visible-lg { display: table-row !important; }
  td.visible-lg, th.visible-lg { display: table-cell !important; }
}

@media (min-width: 1200px) {
  .visible-lg-block { display: block !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline { display: inline !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline-block { display: inline-block !important; }
}

@media (max-width: 767px) {
  .hidden-xs { display: none !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .hidden-sm { display: none !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-md { display: none !important; }
}

@media (min-width: 1200px) {
  .hidden-lg { display: none !important; }
}

.visible-print { display: none !important; }

@media print {
  .visible-print { display: block !important; }
  table.visible-print { display: table !important; }
  tr.visible-print { display: table-row !important; }
  td.visible-print, th.visible-print { display: table-cell !important; }
}

.visible-print-block { display: none !important; }

@media print {
  .visible-print-block { display: block !important; }
}

.visible-print-inline { display: none !important; }

@media print {
  .visible-print-inline { display: inline !important; }
}

.visible-print-inline-block { display: none !important; }

@media print {
  .visible-print-inline-block { display: inline-block !important; }
}

@media print {
  .hidden-print { display: none !important; }
}
------MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css?family=Inconsolata|Roboto:300,400,500|Work+Sans:400,700

@charset "utf-8";

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/inconsolata/v31=
/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp4U8WRL2l2eY.woff2") f=
ormat("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, =
U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA0=
-1EF9, U+20AB; }

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/inconsolata/v31=
/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp4U8WRP2l2eY.woff2") f=
ormat("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F,=
 U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720=
-A7FF; }

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/inconsolata/v31=
/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp4U8WR32lw.woff2") for=
mat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+=
2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+219=
1, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fCRc4EsA.w=
off2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2D=
E0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fABc4EsA.w=
off2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4=
B1, U+2116; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fCBc4EsA.w=
off2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fBxc4EsA.w=
off2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fCxc4EsA.w=
off2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+1=
68-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329=
, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fChc4EsA.w=
off2") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E=
00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F=
, U+A720-A7FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fBBc4.woff=
2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+=
2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122=
, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu72xKOzY.woff2=
") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2=
DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu5mxKOzY.woff2=
") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, =
U+2116; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu7mxKOzY.woff2=
") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu4WxKOzY.woff2=
") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu7WxKOzY.woff2=
") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-1=
69, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+=
1EA0-1EF9, U+20AB; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu7GxKOzY.woff2=
") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1=
E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+=
A720-A7FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu4mxK.woff2") =
format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6,=
 U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+=
2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fCRc4EsA.w=
off2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2D=
E0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fABc4EsA.w=
off2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4=
B1, U+2116; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fCBc4EsA.w=
off2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fBxc4EsA.w=
off2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fCxc4EsA.w=
off2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+1=
68-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329=
, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fChc4EsA.w=
off2") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E=
00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F=
, U+A720-A7FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: url("https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fBBc4.woff=
2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+=
2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122=
, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/worksans/v18/QGYsz_wNahGAdqQ43Rh_c6=
Dpp_k.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-1=
29, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323=
, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/worksans/v18/QGYsz_wNahGAdqQ43Rh_cq=
Dpp_k.woff2") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+32=
9, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C=
60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/worksans/v18/QGYsz_wNahGAdqQ43Rh_fK=
Dp.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-=
2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC,=
 U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v18/QGYsz_wNahGAdqQ43Rh_c6=
Dpp_k.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-1=
29, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323=
, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v18/QGYsz_wNahGAdqQ43Rh_cq=
Dpp_k.woff2") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+32=
9, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C=
60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v18/QGYsz_wNahGAdqQ43Rh_fK=
Dp.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-=
2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC,=
 U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://emziniwecode.com/cs7/lab/css/style.css

@charset "utf-8";

body { font-family: "Work Sans", sans-serif; font-size: 1.5em; }

code, kbd, pre, samp { font-family: Inconsolata, monospace; font-size: 100%=
; }

h1, h2, h3, h4, .navbar { font-family: Roboto, sans-serif; margin-top: 1em;=
 font-weight: 500; }

h1::before, h2::before, h3::before, h4::before { content: " "; display: blo=
ck; height: 60px; margin-top: -60px; visibility: hidden; }

.navbar { margin-top: 0px; }

h1 { font-weight: lighter; color: rgb(18, 117, 92); padding-top: 1.2em; pad=
ding-bottom: 0.2em; border-bottom: 1px solid rgb(238, 238, 238); }

h2, .navbar { font-weight: 400; }

section, footer { margin: 2em 0px; }

header { padding-bottom: 0.5em; margin: 3.75em 0px 1em; }

header h1 { color: rgb(18, 117, 92); }

footer { margin-bottom: 6em; }

li p { margin: 0px; }

a, button, .btn { outline: 0px; }

a:hover { text-decoration: none; }

blockquote { background-color: rgb(228, 247, 242); border-left: solid rgb(1=
8, 117, 92); font-size: inherit; }

abbr { font-variant: small-caps; letter-spacing: 0.1em; text-transform: low=
ercase; }

::selection { background: rgb(255, 242, 0); }

.noselect { user-select: none; }

.disabled { display: none; }

.badge { background-color: rgb(18, 117, 92); color: rgb(255, 255, 255); }

.inline-block { display: inline-block; }

.list-inline { display: inline; margin-bottom: 0px; }

.list-inline li { padding-left: 3px; padding-right: 0px; }

.assignment-text { padding-right: 5px; display: inline; }

pre code { overflow-wrap: normal; white-space: pre; }

code { color: rgb(18, 117, 92); }

.assignments { text-align: center; }

#announcements-pager { min-height: 10em; }

.announcement { display: none; position: relative; }

.announcement .header { font-family: Roboto, sans-serif; margin-top: 20px; =
font-weight: 500; font-size: 24px; margin-bottom: 10px; line-height: 1.1; c=
olor: inherit; }

.announcement .prev, .announcement .next { color: rgb(204, 204, 204); curso=
r: pointer; font-size: 1.5em; position: absolute; top: 2.5em; }

.announcement .prev { left: -2em; padding: 0.75em 0.75em 0.75em 1em; }

.announcement .next { padding: 0.75em 1em 0.75em 0.75em; right: -2em; }

.announcement .prev:hover, .announcement .next:hover { color: rgb(85, 85, 8=
5); }

@media (max-width: 991px) {
  .announcement { padding: 0px 2em; overflow-x: hidden; }
  .announcement ul, .announcement ol { padding-left: 1.5em; }
  .announcement .prev { left: -1em; }
  .announcement .next { right: -1em; }
}

.highlight-resources { display: flex; }

.highlight-resource { flex: 1 0 50%; }

.topic { margin: 2em 0px; position: relative; }

.resource-topic { margin: 0px; }

.topic header, .topic section { margin: 0px; }

.topic header .title { margin-left: 40px; }

.topic header .examq-header { margin-left: 0px; }

.topic header .title .header { margin-left: 0px; margin-top: 1em; padding-t=
op: 0px; font-weight: normal; font-family: Roboto, sans-serif; font-size: 3=
0px; margin-bottom: 10px; line-height: 1.1; color: inherit; }

.topic header .exam-header { margin-left: 0px; margin-top: 1em; padding-top=
: 0px; font-weight: normal; font-family: Roboto, sans-serif; font-size: 30p=
x; margin-bottom: 10px; line-height: 1.1; color: inherit; }

.topic header .exam-header a { color: rgb(51, 51, 51); }

.topic header a:focus { text-decoration: none; }

.topic header .glyphicon { transition: transform 0.2s ease 0s; font-size: 9=
0%; font-weight: 400; line-height: 1; color: rgb(119, 119, 119); }

.topic header .glyphicon.up { transform: rotate(-180deg); }

.topic header .glyphicon.down { transform: none; }

.topic header .list-inline { margin: 0px; line-height: 1.5; }

.topic header .list-inline li { padding: 0px; }

.topic header .list-inline li a, .topic header .list-inline li span { botto=
m: 0.15em; font-weight: normal; position: relative; }

.topic main { padding: 0px 1em; border: 1px solid rgb(238, 238, 238); backg=
round-color: rgb(250, 250, 250); }

.topic .resource { padding: 0px; margin-bottom: 0.5em; border: none; backgr=
ound-color: inherit; }

.topic .timeline { padding: 1em 0px; }

.timeline table { width: 100%; }

.timeline .week { padding: 1em; width: 100%; }

.timeline .week ~ .week { border-top: 1px solid rgb(221, 221, 221); }

.timeline .week td { vertical-align: top; }

.topic .list-inline li { padding-right: 0px; }

.start-date { position: absolute; line-height: 0.5em; left: 0px; }

.day { list-style: none; padding: 10px; margin-bottom: 0px; position: relat=
ive; min-height: 32px; min-width: 290px; flex: 0 0 33.333%; }

.date { background-color: rgb(204, 204, 204); padding: 0px 0.75em; height: =
24px; line-height: 24px; border-radius: 12px; color: white; display: inline=
-block; }

.date.active { background-color: rgb(18, 117, 92); }

.line { position: absolute; border: 5.5px solid rgb(204, 204, 204); border-=
radius: 5.5px; left: 21px; bottom: 20px; top: 43px; }

.event { color: rgb(170, 170, 170); margin-left: 28px; padding: 5px 0px; po=
sition: relative; }

.event::before { color: rgb(255, 255, 255); content: "=E2=80=A2"; font-size=
: 2em; left: -18px; line-height: 1em; position: absolute; top: 0px; }

.due { background-color: rgb(204, 204, 204); vertical-align: top; }

.past .date, .past .due { background-color: rgb(164, 204, 235); }

.active .date, .active .due { background-color: rgb(18, 117, 92); }

.past .line { border-color: rgb(164, 204, 235); }

.active .line { border-color: rgb(18, 117, 92); }

.past .event, .active .event { color: rgb(51, 51, 51); }

#flowchart-wrapper { width: 100%; height: 250px; position: relative; margin=
-top: 0px; }

#flowchart { width: 100%; height: 100%; position: absolute; left: 0px; top:=
 0px; z-index: 999; }

.resources { display: flex; flex-flow: wrap; }

.resource { flex: 1 0 33.333%; min-width: 290px; }

.resource h3, .readings h3 { text-transform: uppercase; letter-spacing: 3px=
; }

.readings h3, .readings ul { display: inline-block; }

.resource .list-unstyled { line-height: 1.8; }

.resource .list-inline { display: inline-block; margin-left: 0px; }

.resource .list-inline { margin-bottom: 0px; }

.resource-start { height: 16px; }

.still-to-come { margin-left: 10px; }

#still-to-come { padding: 10px 0px 0px; }

.exam-question { padding-left: 5px; }

@media (max-width: 991px) {
  .topic .day { min-width: 0px; }
}

@media (max-width: 600px) {
  .timeline table, .timeline table tr.week, .timeline table td { display: i=
nline-block; }
}

@media (max-width: 370px) {
  .topic main { padding: 0px; }
}

.label-outline { background-color: transparent; border: 1px solid rgb(204, =
204, 204); color: rgb(204, 204, 204); padding: 0.2em 0.4em 0.1em; }

a.label-outline:hover, a.label-outline:focus { background-color: rgb(18, 11=
7, 92); color: rgb(255, 255, 255); }

a.label-outline { color: rgb(18, 117, 92); border: 1px solid rgb(18, 117, 9=
2); }

.staffer { margin: 1em 0px; }

.staffer ul { color: rgb(85, 85, 85); list-style: none; padding-left: 0px; =
}

.staffer-img { padding-top: 24px; }

@media (max-width: 767px) {
  .staffer .section { font-size: smaller; }
}

.bio { font-size: 13px; }

.table-responsive { overflow-x: visible; margin-top: -5px; }

table#calendar { border-collapse: collapse; margin-left: auto; margin-right=
: auto; }

table#calendar th { color: rgb(18, 117, 92); text-align: center; border-top=
: none; vertical-align: middle; }

table#calendar td { border: 1px solid rgb(255, 255, 255); padding: 6px; ver=
tical-align: middle; }

table#calendar tr:not(:first-child) { background-color: rgb(193, 214, 227);=
 }

table#calendar td.weeknum { text-align: center; }

table#calendar td.reading ul { list-style-type: none; margin: 0px; padding:=
 0px; }

table#calendar td.even { background-color: rgb(176, 196, 222); }

table#calendar tr:hover td:not(.weeknum) { background-color: rgb(176, 196, =
222); }

.navbar-default { background-color: rgb(18, 117, 92); border: none; top: 0p=
x; position: fixed; right: 0px; left: 0px; }

.navbar-default .navbar-brand { color: rgb(236, 240, 241); font-weight: bol=
d; }

.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus { =
color: rgb(255, 255, 255); }

.navbar-default .navbar-text { color: rgb(236, 240, 241); }

.navbar-default .navbar-nav > li > a { color: rgb(236, 240, 241); }

.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > l=
i > a:focus { color: rgb(255, 255, 255); }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:hover, .navbar-default .navbar-nav > .active > a:focus { color: r=
gb(255, 255, 255); background-color: rgb(12, 97, 75); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:hover, .navbar-default .navbar-nav > .open > a:focus { color: rgb(255=
, 255, 255); background-color: rgb(12, 97, 75); }

.navbar-default .navbar-toggle { border: none; }

.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus =
{ background-color: rgb(12, 97, 75); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(236, 240, =
241); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border: no=
ne; }

.navbar-default .navbar-link { color: rgb(236, 240, 241); }

.navbar-default .navbar-link:hover { color: rgb(255, 255, 255); }

@media (max-width: 767px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(23=
6, 240, 241); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(255, 2=
55, 255); }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(255, 25=
5, 255); background-color: rgb(12, 97, 75); }
}

.sticky { position: sticky; top: 5em; height: 85vh; overflow-y: auto; }

.sidebar { font-size: 0.9em; }

.sidebar > ul > li > a { padding: 1px 10px; }

.sidebar > ul > ul > li > a { margin-left: 20px; padding: 1px 10px; }

.sidebar > ul > ul > ul > li > a { margin-left: 40px; padding: 1px 10px; }

.sidebar > ul > ul > ul > ul > li > a { margin-left: 60px; padding: 1px 10p=
x; }

.sidebar li > a:hover { background-color: transparent; }

.sidebar a:visited { color: steelblue; }

.sidebar li.active { background-color: steelblue; border-radius: 2px; }

.sidebar li.active a { color: rgb(255, 255, 255); }

.btn-outline { background-color: rgb(255, 255, 255); border: 1px solid rgb(=
18, 117, 92); color: rgb(18, 117, 92); cursor: pointer; margin: 5px; }

.btn-outline:focus { color: rgb(18, 117, 92); }

.btn-outline:hover { background-color: rgb(18, 117, 92); border: 1px solid =
rgb(18, 117, 92); color: rgb(255, 255, 255); }

.btn-outline:active { box-shadow: none; }

.toggle { margin-bottom: 1em; }

.solutiontoggle, .solution { display: none; }

.alwaystoggle { display: none; }

#past-exams--content { overflow-y: scroll; height: 268px; }

#past-exams- { z-index: 100; }
------MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://emziniwecode.com/cs7/lab/css/mono-blue.css

@charset "utf-8";

.hljs { display: block; overflow-x: auto; background: inherit; text-size-ad=
just: none; }

.hljs, .hljs-list .hljs-built_in { color: rgb(0, 25, 58); }

.hljs-keyword, .hljs-title, .hljs-important, .hljs-request, .hljs-header, .=
hljs-javadoctag { font-weight: bold; }

.hljs-comment, .hljs-chunk { color: rgb(115, 129, 145); }

.hljs-string, .hljs-title, .hljs-parent, .hljs-built_in, .hljs-literal, .hl=
js-filename, .hljs-value, .hljs-addition, .hljs-tag, .hljs-argument, .hljs-=
link_label, .hljs-blockquote, .hljs-header, .hljs-name { color: rgb(12, 97,=
 75); }

.hljs-decorator, .hljs-prompt, .hljs-yardoctag, .hljs-subst, .hljs-symbol, =
.hljs-doctype, .hljs-regexp, .hljs-preprocessor, .hljs-pragma, .hljs-pi, .h=
ljs-attribute, .hljs-attr_selector, .hljs-javadoc, .hljs-xmlDocTag, .hljs-d=
eletion, .hljs-shebang, .hljs-string .hljs-variable, .hljs-link_url, .hljs-=
bullet, .hljs-sqbracket, .hljs-phony { color: rgb(76, 129, 201); }
------MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://upload.wikimedia.org/wikibooks/en/3/37/Algorithms-F6CallTree.png

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

------MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://emziniwecode.com/cs7/lab/lab3/grid.jpeg

iVBORw0KGgoAAAANSUhEUgAAAdkAAAD4CAYAAACgwJwlAAAABGdBTUEAANjr9RwUqgAAACBjSFJN
AACHDwAAjA0AAPmTAACE5QAAe4IAAOt1AAA/tAAAIlh1a16cAAAC/2lDQ1BJQ0MgUHJvZmlsZQAA
OMuNVM1PE0EUfy3LYgLxIiI2xmw8aGOALGgUYkRbWpoC1qZ8CMTEbLfTdmW7XWe35SMcDBdvisa7
8SOe/AOI4eCNk4GEoDEhnjVGY4LhYrC+2Q92UfyYZHZ+895vfu/Nm50BqH8o6boaFABKmkkziagw
PjEpNLyDIByFRghBoyQbeiSdHgJsjAu/te03EGDjevv+/r+2xhwxZIDAAcTlnCGXEM8A1I3JOjUB
uDW0d0+bOuJ6xmmmmCDiYwwXbCwynLVxzOKMZPoQjyM+KBelHOIi4rasz17wYTsHqzUniEaoIgus
Fmlazisq8aX7D/d/tpJaceMdwt6km9EMjiexf8vT/lEcw1iH0Fxx5BriFsRRxUyOOPZxLZu6avMD
t6fKgxmH8zxHYnG2T8TLRnU47nLmin0ph/PhpjSQRhxC/EM3045OsFVTU0O2frCXGPFh155X+pOO
Pa+r1n+A+sG7tJJheZ5A/FKi8YTD3yTaqLO2LpiTYoOIOxCHIQ0EKORBARUEyEACojgm0KrBR/Qo
IEMZWRS/LquAHtd7CyrIZSvHILoYqoQ9lQV6Q5FX733ds7rsi1KwopDdKAnf3ICpXWY76J7Cyvxy
q6exwS1dX29amYcIaquWYgm7YukYPgVfDnltMeQpsAzJndR2ChbaPKv4VvwsboiPxWfipz/UqPBL
jSK++MyzX/YEORPY3Qz3Z7E4CoyiV4FpK7YBEto0mEW+vucsrNXcca6TS3LdXA8I3CXuMtfLxXB2
gRtyGXycj/EREPjTfA/fyQ8w7O6EP4W+HvzG95yA7Nur/wSJj0V8FWmHrFXzKWt11fIZ+AWTzJjs
UvWV9VmqFIqm0CWK54UIPktESGpyR5sgqapguQyBEoPQKsl1AHvz7Ou4lbHeskDLqmczrwBc/IL/
8Jpnm6wAvDAAjpz1bGG8U4cfASydkyu06tzvQOA1gJE/02XPmqL45ryv1bbwfjQ8ANi5X6t9f1Kr
7TxF/U2AV+pPqSMK1r8mJ98AAAAJcEhZcwAADsQAAA7EAZUrDhsAAEQKSURBVHhe7Z0JsCVFme+/
s93eu6VpFmEUUByaLXwiagyDjIKjojGCEYoTOqCIbPF8SrOML5Cl2WJiHGxgROG9QXZBBzVwCFBc
YuAJDBFDxPB4AXTLMgwoe0t309u955yq9/2/rO+cuueee/sup+ps/9+N72ZWVp46lXky85+ZlVVV
iBUhhBBCSMcpJi4hhBBCOgxFlhBCCMkIiiwhhBCSERRZQgghJCMosoQQQkhGUGQJIYSQjKDIEkII
IRlBkSWEEEIygiJLCCGEZARFlhBCCMkIiiwhhBCSERRZQgghJCMosoQQQkhGUGQJIYSQjKDIEkII
IRlBkSWEEEIygiJLCCGEZARFlhBCCMkIiiwhA0wcx+ZGUWQuSPsJGXTq9bq56XLv9SIPKLKEDDCF
QsHcYrFojQwaHPgBxZYMOrVaTUqlkvlR7rENUC/yKv8UWUIGGG9IRkdHrZFBg4NePMJdbAkZVMrl
cmPUig4mtoHXhzwo6AnkN24mhOQOqjh67nC9oaHIkmGgWq1KpVJJtgJ5l33WMkIGHJ8yRuNCgSXD
BATWp4h9POn1YWxszNys4UiWkAEGI1efIvbGxWkXRsigkhbZPMs+u7OEDDDpEStGsA4FlgwLLq5e
5lEPXGjzgCNZQgYcH822+iHArP5k0EE590skcL3Mw82jo0mRJWRIybM332sw7Ux7XnC6mBBCCMkI
iiwhhBCSERRZQgghJCMosoQQQkhGUGQJIYSQjKDIEkIIIRlBkSWECG5qiKXdW0kQlg737dZwMpyE
clC4KGyFchRsKqYTZ1DgfbKEDCmFQkniqC5xAc1kaCyL+lfwvre1DDU8wUKk7A9Zj/Qz2qjqnx5A
TePGvdtXt3PFQzcS1ykW8eSf4Wz6kPZ6rT4uP2ZFId3R0nJzUVFqFza37ehxeJcr7k8ND4QoS03L
XKGYPBAF+8yXD7xPlhCSO2jkioLGMDSI45ogiGgpNBP1eqwNlMorGud0Q2WNbW+6aFTNhdAm6cN2
UdNVqycPiG/zuYFx8Tsl25Ze3S5XSuE3nOpz03EN5Guw6ELti6nQNgRWQf6jfEXaUQtPXKppcSrZ
fpW7XAW2W3AkS8iQYr16jOas0Ry1sLrM0/9FCeMMvHezKiPzKjZeqeu/iraOkYptSUdDaLBj/Sys
oKPZXnSRkkhTFdX0nMvayOu5S1GFpjhPoriqadA8mMZx+tVF+qsqrpXSiEqahmsIRpH1mqZd82G6
x2nvomsWZBL/9XAaru4lmq3nI9TLlrqQVUiNlhvMKkR1PTP9PfJW2W6MZCmyhAwpDZHFlHBBG12l
IbJJqxCmkkWqKlKVMhooay6tbbT2URvRXm5Aohhnj7YdI9ealEvhpd1FFZooSka2AwzSj7S7Czzt
2kXS33AuKqfHbfi0KKAgwPSQhYsRqpsX6DlEoWwV8TYoTNvjPFSkXXvndAozhCJLCMkNuyaL662m
mDVrdHWsGto8EycdcWgQponxXk7sreo/DGJNqhCQYwM5V9IvR+hGY9sNkMZ0WuFHHuBdqpi+xfbs
0TKSdGJMNCGeNnIFUE/dvEhjXeDnoONeLXNWqOx7UfZ8ziQfuvG7U2QJGVJ84ROoJ42jLXyyFiGI
LBrOyKYGbbxrk8owjHcRI98mcubgHENz30QH5bJ84Z/IG9t+3/Pn3wnwC3s6R3VQucvSt8rGbS/N
uX+EfE3nH/IaRcddF5a3qNBuwPVa9WP5HD5ThOBa+bIttXygyBJCcsNHF6CmDZ2LJq5iGjY6CeK6
VW2zGpYKwTABiKYxv+Zx9ngD5y7OeeXCP5e1Wx8MAUMAflH/rVYuPEzT/pD9rmHyfO64YCOPW0UW
33uACu3vVWj3DEFdgyJLCMkNb3C8YQSQ2sYIJxHZLRrhTXVPOvOfZLQeSYSVqeUFUq9FUtJjoDnF
6Bej3V5zY6zWKhakjMU+uC5p4ydNs4aXKmVzp3OcfnWjWl0q80akNlbVQWOYpbCr6FEs5ZGK7Z/O
cdq7yEtIKP5j6lfzWstMpPttxbG6GqjBkcxXSf/lspMkVqHtJhRZQkhuYLq4atN2GL3quAZNQVxB
u6gWZBeN5ZvqvqZ2ypk3yu1rvqQNJsKTaGogNLX94y4trZBN9denHX+Q3MXlFbK59vq040/lpkGY
g31pYVmmI9ltKrAoO92EIksIyY1CoaIiqyMc9ZfsdhZtGiGyqXsoXWRfUjv9zJvlzjUnyBI0oTpi
cYHtR4b9YRQdSbsWAD8KRrYGXBSMxPVVxlHykIrGg066RDdEtrspJoR0j0LN2sPQCKBFVF9RG0MV
WH/AQEGFF9ftEA+Tg+YPUZp4QB+ZNbNtwofBOpV2HAdX9HF93qaGfR9mRVC2VGAxPRymiNEpG065
ocgSMqxoKxmuwaJRRFNQMhfiisYTzaWpayt2q0YyGmjs96akX1xnuvHptnfTPgChjVVgyyquWFoV
aFeMhoXx+UMIGSpC46fNABY5JS70MxmPqNgWzQ2jlpKNWur6oTByUTO8Gekn1w0Mm+tMN357Fz9/
WQsGzIoCyo6Ka+GiisQXaKmxMkWYC4QMO+nGMBmggoaGpoD4IkpYOUpIAoTWpocjs3BzEOUFMBcI
GWJMU9OCqX4IaEXHrxUdt+KeWdw7iyhhIjn4w2wxGlM30E+uGxg215lu/CncAi41wCCuKE/J5Yak
HBGKLCFDT2rwagpqIpqYN6hBXMM9tO0bjSka4p50nenGn8wF6RyZLB4m3R0IUbIAadL43XH9vJrv
Fp483mS0fqIbXHHFFfLQQw8lW92FIkvIEGNvZQmeYA3FLas3PPIOjaU1mLjmpo7FN9B89KuBduEz
syBICZh2Hxeg++12EeReLPUaXjUXdmNdNxaX2dyAfS4jsydD6HnYl4Uw+/3gNxq/rp0XfMWL8JuH
ESnAe2AdvOoQ4djfXJvuFsrG+JDucMkll8h9992XbHWXbuYDIaQn8UY1NLQNzUjJK9kRSb7h+dAq
THifaqlcNiWLMLuqf9UIT4HWvLbbXhA3AxdP5FI3/f5YnFe95iNr/42b0li7ULtYF9lOE1i8SEAT
Ydv+GE5IbWmcpDZBqBtpzR1CCCHTArID2QrShf+mnoL3rELC/DYoyFGxNF894UnBJY1TjquyoFjW
6Jie1VgqgFm49ahqbhTXpK5Wramwa6tfxGsLIahqWEGunwjnpomC4RV1RRVaE1i8exYJi/QTuo1z
LuKCa9DbGfHcc8/JtddeKzfffLO88sor8swzz8gDDzyQ7A0gzlVXXSWrVq2yuJs2bUr2NHnttdfk
9ttvl9WrV8s999wjGzZsSPb0HhRZQgiZA6ERdZlqChbAmwShRxBkvEu1obwqVbGKXsBnCzrv4h2u
tq3nUCyUpVyp2OAW//COWfNaDHXxofBBA0JbuEj3lCt6rhDtZKc6cVU/iw+m4u+Iu+++Ww4++GA5
77zz5OKLL5a9995bTj31VPnqV7+axBD5+c9/Lu9+97vluuuuk+eff96mfQ844AB5/PHHkxgid9xx
h+y+++5y1llnyaOPPiqnnHKK7LnnnvLII48kMXoLiiwhhMwCaIyvvA7XONVUdDASxJgV+6BxVRsJ
1qRQVIVtRCtIXUUv1pjhung2BnWN6jqW1u/CNp6cWcA1WnUxoi6p0MPwEH8jeeKXRk4SBvQ4hVKY
coYfx66oa3Etwg7ZvHmzfOUrX5GPfexj8uqrr8pTTz0lt912m9x///1JDJGtW7danE984hPy2GOP
yU9+8hNZu3at7LLLLhbuXH755fLZz35WXnjhBbnzzjvlySeflPnz58utt96axOgtkGOEEEJmC0Zz
JjZJc4ptNQQhpFLG1UsElAQvBRpT4d2k/k1SsedCZ2mbdbi5VZW+sa1CGRV2ki3qblKx3a7ia6bb
W/WEt+gZv6mGCdqNangPLF68juNgH64ib1fRhhDbQq5x4/bJuffee+Xll1+WSy+9NEw56/E+/elP
y7HHHpvECKPYF198Ub785S/bfrBkyRI54YQT5OGHH7YpYnD99dfL1Vdf3XgB//r162Xx4sU9O2XM
FwQQMqS0fVg6NjGS0QbV96Bxflnt9FW3yJ1XHC9L1I/PeUPYj3TmQfHJ9U+lkFxvHYdmj39DQbZL
XebbO3lhnz/zJqkVKlKJcUXUMl2t825dVb1SKcvYWFXKKvalUllqOrIuFILQhTzAuBqCqT79mK0s
Th6vieNAyu5bcrx88vUr5ZbvnCELdXse0o1FUNpZmM5Y7Vvf+pZ885vftNFqpYJXtwfOPfdcu6aK
ad+///u/t6lkiOWiRYuSGCK//vWv5S//8i9NaD/wgQ+Y2H7/+9+Xf/7nf7ZrumNjYya4n/nMZ+TG
G2+0zyxfvlzOPvtsO36azvzuM4MiS8iQQpGda9MHkcVFVqwVDiuHG6SyBityC4VYtmkcjA6PX3Wz
XHnFCbYP8hSkLMn6DNzwa4Zt2P6LD5d1mx8wf+gijJdJhHlcGGQUsvguHdGu15Et5G8kqlmapiuy
3/72t+Ub3/iG/PGPf5SlS5cmoSInnnii/Md//EdDZCHErXFwffbkk0+2KeZ9991XDjzwQKlWq3LO
OefIe97zHrtme+SRR8rKlSt7UmR3nDuEEELagOueQWQgtf6UI1gAoz2MGiHFOprUkK1qhagku6n7
drU/UdtDbc8MXTdsv01Ntq9tbOP7/Rzcj/NCPBj8iAuBxftgF6sfY/ZCEf8hvdOTEIhjvV4fd+9q
rVYb98CI/fbbb0IcgBEsRHevvfYy/xNPPGGrjyG8hx56qF2PXbduXRK796DIEkLIrEkWGCX4yHDc
WCnZwD5/LdwCdZdIzd7Nu0T3L1LLyy3U14dtPQeIJsz3LdKTtH3qLlUXL1uH4X2wmCKGrKJbMVM+
/vGPm9BipPov//Ivtlr4pJNOsule55Of/KTF+bu/+zt56aWXbMT5r//6r/KjH/1Ivva1r9k08z77
7GMuxBmjWdzug2u2uM1n+/btyZF6C4osIYTMFhUiqCcaUjcE2MjW/CpJcbGx4hhCi4VPGNXWNAQf
D6t58zP/Trg4x6neBxvp6LWqhivH4X5afA63Hrkh/uTYdynz5s2Tu+66y6ZxseDpfe97n2zbts0W
Ofn1V4jnT3/6U7smu8cee9hiJkwDf+ELX5Dzzz/f4uy2224m1BjJYj+miCG8WHH84x//WP72b//W
4vUSvCZLyJDCa7JzbPrwcT9EMk2MBzVAkup2NRTiqrKbxNmq3hfUPfXMW+Sna44XXHXEqDB8BvKc
j+tpx2mFjkDqPMI9PuF1dfY+2CCuTfDCCBwHnw5pDNYeHB97QxoD27aNSmVkxBYrfeHzn5dly5bJ
Nddck+zVz9TrdusOVg0fdNBBJsytYAEVpo1x3y0EHGBlMoQ3fT23FV6TJYSQfsFGfmHUB7+9/N7G
hTUVIrx9F/thiIsPhKuYI1GcTLuGh0E0m+G83AC+e4fvg01G4U3DMTAmhyzDP/6YrWAvjo1p3UWL
Fsv1198oCxYsMIF9+umn5Re/+IUccsghFtfBPixuOuKII9oKLFi4cKFdj3WBBRj9TiWw3WLqHCKE
EDI1WGXrIzUTJohQs2kNU7Hqhk2L7uLTM+g5Tfo+WJw4Rrgpms87nhrPmr3fvrcc99nP2XXY9773
vXL00Uebe9RRR9kK40Fmx7lECCGkDbifFNdVMS5VUYK4xup30/3hWma4Bguzca62ukGyvPl1AcvL
dXR7B++DtQ4CThPmo/KZgs8UinLDDTfIs888K6eddpp87KMfkXvuvsueP1zGixMGGIosIYTMgmSQ
NkG6gqgEwQK+3+ObcE3AY+XtTiQdA4bzbjL559qiwgzBdnv7O/aSk08+UVat+pocfvhhKrCDL0EU
WUIImQXQSjSg1oi6EmEjEVEs9sEmxrTJWHeSBtePkpeB9uHpNLmF5KRDQpiFpxQY3nGCrBthZDx+
X3D10x4w4IQcI4QQMguweGn86C5oRwhzMcK1yYYw9RRN4XQa55zYTLH0JwKKz6NzgWVSZnFRiheV
5ahVt9siKzwnedChyBJCCMkFLK7adGHwr1V36UUapjbIUGQJIYRkDl4Cj3fUpoHgYsHVIAstRZYQ
QkimQGDx9KjJGGSh7QmRxRM+QOQvDlbsiSQ5P5mjF0inOZ0fw0w6T4axTBDSz0A8pxJYx4V20MS2
J0QWT/iAoOBlvrVazR78DPr5sW0zwTsZwEUEYciPYQflAuUA+eF+uOyAENL7QDAhntPF7tUdsFFt
11txvHDXQUOKG5PxoGhvTAcdpBmdDIAOhgurdzyGHeQHOh7Ij3Snix0QQnqfmQhsmtl+rhfpeks1
MjJiLhpNFxsAgRmGhtTTPDo6ah0MCEp6ZEua0+Yusu6yE0II6XV6QsV8KhACAxfbwzJS8elh72xA
QCC8COdoLZAe1aNsuMgyfwghvU5PtFJoRNFgovGEi21cl3UBGmTSo7P0CNavSw87nicoFygPKBsI
G4ayQQjpf7ousumpwLThFUZoUFvDB9kwmvXOBtLfun8YDVPoXg4grC60nComhPQDXRfZ9JQfGlAf
pWBBlE8hD4Mh3W7YhqgMU/qnsvRqcxjyCEKLfYQQ0sv03EUtF91Bf/1RK55uiAiAgLh/2GnNGwgs
YP4QQnqdnhNZ0n1wFdSuhGKgCI9NzY6qd1Rquo3gWk3DOJAkhJApociSqcFgUcVUx9VaWEpSSO6y
KpVYdAghZEewpSQTKEQ1Kxi2tAgeE1TcYlRuFBibqeVs7cATxe0XmPXbVH03F8rZ2oEurx9Ir1/I
+7fDd9ejcJdAmm5PhOW1poMiSybg10Dj1HsyXVPdyHBQLBSllvghVNWUVvXTbWYo096o5n3e9r0p
YUM+1nJSGHx3q5hgG0+Xy5NSsaTtSTiPMVxy0nPIox3xxaNOuoORV2eDIksmMBal5BXls9UMLbwp
ESaDizdFaKwqSYuBJ5Th8ae9Dlai+yjWG1WcN0QX+7IG322dVs07nAXkHQv3yvm07/b9nm740cHA
+eS1sNTvlgCFpCSNlMLC1uxzf3znCqT9eXU0KLJkAuh1SlyTUruGIBWWUztBughGH7gMjwYxLaq4
jzvdYPUqEDQTuQRvWCE4vko9S7yRh+Es0tJWr2eff55GF/u0uObRycD3p0eMkaYZqbbb8EJQ5qR/
/zR5dTSGRmTxw7qRKdAMKmqfu1TAnA763dr/1jpiFUNdVMuQh+iXu5FBxUcfaBBdoLxx7geRBThP
iAywEZSeP1wPyxp8XyFp6JFjEB18c6ltL7azeNpdbP03y6uTAewckmv7RU0z+hbosOWR++ky6i9g
Qdrxm6T3ZUn/i2yST5iMsQkZbKfzLtnGD4qmAa7FA+l4Q8q47Eo8jUUKVghDXkXZtwekRwl1JogD
8MZ5shFCL4GGFOedHlHi/L3BzYP0iAk5uH37dmt48xjJetodE3gVGYR5ZylLkN/4Llzb92uymCrf
tm1bLuKD9Prv7h0rnE9eHQzQ+7VkR+gPhp+urk0B/pKO9wSQ0NB/TAS24RLD67u65WJFxrarvzii
mYac015vyiwfY4S7dY4rrrhCHnrooWSLZA0aoWBhWq9YdD+mWcP2TvN3lZUL/tz2Ly2vsEaq+bne
tvS5wo+GFi6APx13NlYsel4FC2HYF8Kb8ZB3O8vKxR+070U+duL7p2MQFPf7lL/7PXy2FtLa9E80
fya9nof6K+URSzvCVi75YMOfpfnvDj9cn5HBdh50toXMGehCU2DRT8IfhNbFtCmkBampQOA6QD2I
hO3Sfy4uA85kL0EuaPphDZJyNzJ/nvb6gj9kFnq9yVyAxdeiY0LbWS655BK57777ki2SNd7Lj+Mw
fRZF7seCobC9Yfursm7bg7Z/U+31xlRbPxhGLmkX5+6jGTy6NR13NhZFnlfBQhj2hXBsh+9E3q2X
Jzf/1hp65KPvz9ogKu5HmiG68HuezMVCWpv+VvN9tSQPqrUx2ahpx3Pan3jzt0k+NONlZV5mkRfI
/zzpa5H1fghcT8jkfRMoA8QiiW0jtL5O/ozAS5AnCG1rBwNZA0O4GqZ4mvjO4co3En51c5OeP1w0
WP1A+pzTuNDmQfp74MN350k67TiXPKaJW0m3JTgbnMOwtCJ9n06Mwko6oirpX1nNRlcRkuWm4FeN
9V+Me7WwdLxom4a5KPS9ZeH02u+brcUX6nFNaJMwG/G3YVzeBJ577jm59tr/LTfffKu88uor8swz
z8gDDz6Q7A0gzlVXXSWrVq3SuNfKpk2bkj1NXnvtNbn99ttl9erVcs8998iGDRuSPYQQMnj0vcj6
aKzgSUl1sOE1MbWwZlKxCXlpCC3wqc9ecZ3pxp+mG1+geXWR+rHt+0AqLyy7Utt33/1zOfjg/ybn
nXeBXHzxxbLX3nvLKaedKv/9q19NYoj8/Oc/l3e/+91y3XXXyfPPP2/TvgcccIA8/vjjSQyRO+64
Q3bffXc566yz5NFHH5VTTjlF9txzT3nkkUeSGIQQMlikWtk+BWJggpCMypAi6IduJ0uhEjFtjtqw
6Qk3IcaWBvaS6zbd+DNxI0wdX6wJV3/DWgj5IrJ582b5yldOlo999OPy6quvylNPPSW33Xab3H//
/Y14W7du1ThfkU984hPy2GOPyU9+8hNZu3at7LLLLhbuXH755fLZz35WXnjhBbnzzjvlySeflPnz
58utt96axCCEkMFCW93BAw2/iWvKL4WyGpIbtU004vWS60w3/kxdEPzInaQDggC1tObee++v5OWX
X5FLL7vUrufg+s6nP/1pOfbYY20/4mIU++KLL8qXv/zlxvWfJUuWyAknnCAPP/ywTRGD66+/Xq6+
+urG8vn169fL4sWLOWVMCBlYBkNkTRw0KenpT0taeO4qLvOPaZxqY39NxQHmApOITBfcWP+iOHkK
TeLa/gL2+QKFHR9npi5Gs0Vcn8VN4rgvFq4vZkkJ7dPPPCOlclne8c53WjYD7PvTd72rGefpp23F
3mGHHZaEBA4++GBzn332WXN33XVXm04+5JBDZNmyZbL//vub0BJCyKAyGCLrYCFPIhBImLuQllHd
2Ka2SUM2SlneVIP/zYZJV9zNepabdZT9hm5vURdjuo0aLiO76P7ShPiddDfZtHFZthcrslU7ILVi
QUZdhz0fk+X+m7dts3w0odV/L734UtiwAHWSZfJpsBAK7LzzzuZ+6EMfstHs6aefLr/5zW9MYA86
6CDbRwghg0hfiyzadzzqz665FvAIQLXCqLkFtfDghPBQ7o1qr6th3AR7Ue33aioV8nKX7RU1nNsf
1DCx+qqaFP8083NDHvw/FdoFOqJ9Q0sC1gLHLQ9Cede+++pAty73p+5drdVq8tBDD6ovKOx+++1n
Att6fyumipcuXSp77bWX+Z944glbfXzyySfLoYceatdj161bl8QmhJDBo6AjkGQs0l1wLW+mp2Ii
q4Zp35JJKcZa6Dd436Gg+8uyRX3HnXGrbIsXSKWwWT+occuLdF+sg1+8csmHb/mDt2LYczyj8CxR
GB67BiBCELSsQOekrnk+UqrJr5d8WV5WwV2q4QuQseidKHjbyoE62sS5XHbZZbLvO98p3/rWt+QH
t/7ARqGP/t9HLQ1YSbxixQr56U9/aiuIIbif+tSn5IwzzrCVxq+88oq87W1vk2984xtywQUXyB/+
8Ac577zz7HYeLIb64Q9/aN+3fPlyOfvss+Xcc8+1bWc25YNMTds8td8+1CPfg1kPdMpOX3WL3HnF
8bJE/ficX3/vRzpVnrDA0nLBL0XphmVho01JwjXwTd2HjvNpZ94sP1tzguVjN+hoXQqJbXidxgNu
WvYhHPlwrJal72lZ2kPD8syHrrQj+oU9wWxOJVKrmalUxGNmkfpbbYPu+dgZ18dPqfuq2sbEEL6p
Bwzn4v43EldKOzfCsjZZHc5hq9qoWitPPvlkfMQRR8TFYjFesGBBrKIY62g0Puyww5IYcfzYY4/F
K1eutN9x4cKF5p566qmxinQSI45Xr14dL1myJB4ZGYnnzZsXq8jGa9asibVjEZ9zzjkWZ6eddopV
zM2fpoeK6sDQNk9RqbTOuBeGsrFO7cgzbrbyArRTmPj6k06VJ7Qvll+eWQ0nCXc0EHmHfPzwqpsa
+dgNOlqXUsXAs8CCGp5AOhxpR1laq27e+dCNdqSvR7LAP4GFTOg12oMmbBtbYfHQFqnIZ1bdpD2n
L8pyDcdoLaqPSaXko14f+XYHjGKRfs8D93t4VvgToKLz1I/neKi/GtVlBK+6awMe6o3HoWG0/fnP
f94WL11zzTXJ3vAUF9y649daMSptBbf7YNoYi6LwujSAlclYZYyp5cnwvCGdo22eWuXhSHa6cCSr
lhSD9BE5km3SXXXpAPgN7QfFU560oCNBCAsJw3YQjLG4ZDJsW3FNBVZluRamZbuN3xoD4GKKOB2W
BRBYPJgivgCNhOZMHJ7pPFIc/51YvLRo0SJbsKSjWBNYrCb+xS9+YauE02DfgQceKDrqbSuwQEe5
dj3WBRbsscceUwosIYT0K30vss0uUkgKBLc1UYgS6+gMfUtcwy0hrvZmyuVmQ98t0KvynhWubQLc
DpPl801NYC9MNvA9lmF6DrXw/Wn23ntvOe644+Skk06S9773vXL00Uebe9RRR8mJJ56YxCKEENKO
/hdZG8oGr6H+9KZrcDEOD6EI719QHx5OYePa7mYBRqs+YvXXUGUFxHWcwOJri/6QDkVHop5faW64
4Qa71/W0006Tj370o3L33XfbgqW832ZBCCH9Rv+LrAPBgJlKJNdJjJBETIU2wwDCByf5O8LFtSGw
juVZkhcqtpONn/fZZx+79QYP/z/88MMpsIQQMg2GR2WGmHGj11Z86KpiG7xYPNYMjrfjaVDwVdWB
YYGT/ocn8liEEELaQZEdAiYVWMcEFqPYUBzw30b9qqGFkRJUVcbsenFBdTW7a8WEEDJoUGSJMVE6
EQJTpS2VZKQyPwxcC0UplgpSrekIN8PVz4QQMghQZMkUqMgmq5xrNXULeOF9eExlqdz+XlpCCCFN
KLLDTjIYRUFwa4BVxzqKBVjohEux4cnQeI+RwoEsIYRMCUWWGNDLtGbaC95TxQMzxZFG+Mr/uNSE
1l7KQAghZEooskMOHgvXvP7avM0JWxBWI/FgqnhbcbHsfFHwN/YTQghpC0WWBGyoCo/9M5q+4F+s
4nrX8jNsGyKb3k8IIWQiFFkSgMiaYTSLFyuMp6wCu+FCkSM33Czr1F2q2wgjpCN4+XMSfyMotd1L
syitV02a5+WXW9AVVUtF9PrVK2kg2UKRJU2sIQhFIt14FC7RZiK517ZeqFgjB8FFGB50QchsCZcr
4FHJcfU09QnihP8NMVKPL7obFz4FOKw/Bnz848CLtm/O+DEKKpzpSoPwZF8U2zJBO2eT3eREppsG
0t9QZEmo6FhJ7M8wVuDDSLVwse4/f2JTgPbEeuSJ0FJsyWzBKxKtRGmhq1Xrdj92XcviNg3Yqnvw
qr2tunuL2uZke4ua+6eyzfiMHvcNPeYWdTdo2EY1GVlhr1xr95mZ2FY9z616nm+apfbh2GobNXxz
YUTWaxKxYHBMDW/YQo3iA9OGg2arSoaOZh3XYqANQiAUiaKKZnShiugFtpmIKgi98EZ0xZ+JTKEl
MwcPNylZgcIAr1wp2VsrIaIQqz+qvab2otofEv96tVfVXlHD+1mxbypDnFf1+C+oi8/g3bhS3teO
1y7+dA3H/X3i9+MizM8J+2D/pbZek/i6uhDaWlJ7yjr6TdcjMpj0/UvbJ4BDtHnp9KdX3SLXXHG8
vFX93XpZ8kzoWH5MgR895Ja1cw2hjC8MU1y2B/fu6PmgZ37MmTfLNWtOkD/RPYsan2zS/HxwO0Ue
+TFstM1TbOb40nb/Dn/JN6ZcXWBPPONq3b9QraxWUPHFiLdmZ1aI8Maqoo548RkVq1hD27i1sbqU
R0p4XbIUywUpFyuybXSr7Z+3YETqVUzzTv75qV2cN+4j1/wqYCIbxwov2Sjq/kj9Y7XY3rNciasS
ox7NWyzXfeszskLjLJG6piD/h7p0tC5ZeWl6Hb60vQlFtkfJqzCkvwGjVx+5SqG9yB575o0qsl+S
PXVPO5F1ILadFNpuVI5Bp22eYrNN/clOZCN7HjZEC5cranpITANjWve0M2+QH6w5UeZbzCYocf7N
OEcvhZO5kOZECvW8kW6RpaUVsqn++pSfm46bzj0/F4DvwzliGy4M57Fd7Wtf/7Z8/6qztPsQjuNp
yYuO1iUcJklA+ogU2Sb4jclQE5oFFH4TWFQKqxgoGsFaHzyBIho+NXnx6fRIlgwmtbqOTFVcYx1q
Fkzcw+Im2DYdZc5TF2KEhjhYzTp3C7UQwhapLdmRW49kURTb9lJtYOEWovWyRMOm9fnJ3HHnJbJY
z8v9S82vpvGWJp9ZprZAlRYCi3R1Q2BJ/lBkiVZ0738HtC2YHIw4COkQleIIptOkVNJSGI1JvT4q
mAhGiRxZML+lLGooRiGxSjCmZzHbAmH2juEkVihpmS3Co9vqQtgLxVTYbA2Ono5bSZtTBNsEMOoJ
poxVyK2Tik6EjmUX6050GkYsCF0JMuiwxSSEdBlVnqgopUJZ5pcqJqywsOo4gG2fP3FUvhLf5GBq
0KcHq/a6RrHncPttNHOl9badkhoEF/eb43yt84BNjYfRekm3CpF2DtRvC77IwEORJYR0DRMpGJYU
18sqQEUb5ZXVihPeXaxxCipMBYx13dCEBUFrZwVVPBj8lQpEzfeB8XFnauGoSRoAztfNrsCG+3zh
q+t5RzpqxzPBbRSNdLD5HQr4KxNCuoKL1DgSwcI+gE00UhacTMHCfL+7XcemrRPDKuhkGnvi+YUU
I7xnzp1kCkWWENJFwojQVFQNt+RgUjdMFIcbXAp4YlJdxQn6lCgTvEGuEATRnZkFAWy/b7qGMyjZ
Xa/hjGMdMeP8EYKHaeAGHZwjYiJ57raugSCDDUWWENJlVHSKMAhfOwFKRoYgNQT0kWAQrpkZPtwu
fKbWBFdbS3rYIKy4rxd+F1a7VotoDRCrXVrJoEGRJYR0BYzogiRhFKj/VUgLGoLRK67JYr/JEK5f
FlWlSk1RSgusbczQ8D3twmdmeoxIzzSumB9/WGFcUWukQ+OlTrsB0hZGtG12koGCIksI6RoQyYLJ
DZoiyBTEJzRMeGoSwIgQN8CYIJmq+ud6QKCS8wFYXxXOqzmCNTFOEaaabVlXysggw1+YENIltPmJ
IThlm05FYxRGeMlkqo4QQxj+l1VoNa6pWLgWignaILyJ+M7AtWnpacTbsRv8douOBjVJmlbst/MM
NLaSBVxk8OGvTAjpLok62Z02CeMEK73REK1mIHwQzZm4JoxT7J+um5JNO2ZbXJDJUEKRJYR0n2Q0
GK7GJjSen41lRd5Y4T/ieEi4/jlTg0K2C5+pNc8haKnT9DfjpLcmfIAMLOGXJ4SQbtEQm/GjPdwS
08QXCikWvylc3WUH59Aipi2bZAigyBJCCCEZQZElhBBCMoIiSwghhGQERZYQQgjJCIosIYQQkhEU
WUIIISQjKLKEEEJIRlBkCSGEkIygyBJCCCEZQZElhBBCMoIiSwghhGRET4hsFEVSKBQkjtPPKu0c
OGqlUhn3ZNRarfnw8V7A0w63Xq9LuVzOLD9mgv82ejJJSCDPM0vnw2R+QgjpRXpCZIvFojWY1pin
QAPfCXDUbdu2jRMGiFgv4EKRTnupVOqZTgB+G4i+nqBt+2+Crbw0zvOmVWBbywshhPQaXRdZNJbW
iCvz5s2zhhMiAxejT7jTs/CZYtH9JfPDllV2tn0HLP2QLC2vMH+vGEQs7UL84abzI0srFj2vgoUw
7Avh2MZ5IGxpeWd1i7Jy4WGydGTXRvy8DbhLCCG9TNdFFo0lGm5go00V3e3bt5tbrVbNnZ7VzY0i
99fND9tYXW/f8eSm+2RT7XWLh5Hi+M9319DRSLvIl7GxsXFxsrAo8rwKFsKwL4RjG+eBsE219epG
snbrQ7Jp7NXGuWZt/j3AR/ijo6PmkmyJ4jBzkZ5T8ksInZppSs/aVKuhww38N58r6fNMH7NTx+8H
PK3dSL8PoozUV3Yj97vROe+6yHqFhQi62GIEC3y7E2CEiKP5D4vRci/RWuCx3alGbK7gd4iSipLO
tw7+PFOSLgf+/Rhdk+wpFopS1aJpdScpo/g9IIwdqZ96SNRNdORApVISb5I70SCigffj4JzTx+xG
g5s33obgt2ttU1rbnCwYl/917Ux1Kcs9rek059W+5tRMTo5XVCTYMwA/jPd+EDY9SzIwvZ1IKo7k
veXW33j8MfI3J91geTjCWuN33PCnrmUVnFQYzPOtmIibF0xvCD1eVublwPMHFRbngPC8Kskg08zr
4IensW2FQvO+TcMIYUTZaH5+duYVcmRkxEbNqaAQJ3ga8bE/WDpscvNLT8DXYSDcaY0/aOZphwvz
TirqTyfaF/3X3E79IRzm+Y+wcinkP2ot4uPM8Es0Pp+ReecK7YWnGaTb3CzpushiShh4IXDw4yAz
PHzHFo4BT2Nb/1BxUawQhubaf1Qws+NnYyjsfj6NjoCGg1zOD3/qWom37GuGwbwxbcX1zeNlZd4o
oIK4qHrlyKuSDDLNvA5+eBrbVii0Ltr/Zn57xwdlo/n52RkqZKMjpaNmc+1/+D47g3Gfsc3U9tTm
pDtkHo6w1viDZg783s7gd/N61Rp/pqb/mtupP4SbJd/h3w3w++K3xS+CGI3PZ2TeubLvTH5zL3N5
0PVWClPDaaGBHwXAM2Ou+DFwPCTWj+gC1m28MwFQGNKFsRdAvtl5qQuQZ/BVNDOToMxpNMJaSeDH
OSHf8qwow4qOBRJf83fw+tkRtAp6HahHmFo03e04rXUd295pGGSQTm9T3N+u05wnOBvL/7CZOV5W
kXb/zdPtbtb0RClDgh33d6oCaF/GXBzPqxl+YFivkE5r+rx64RxxbiiMhdQ5uq9DP9EOaS0f6YpC
5obXBV9J3ro6v6R5vWzeLrLfgj+3fPfV+ZjebX529uYr1NGRq1RwzJJ+326ycvEH7Trt4tKKcefU
tInHmspQVtIuynSn0tDrZm1f4ve1DOn9c7Hw2zT9Ey25a8LqbUEq5RFZpmUIv+3KpUfkcreHj9z9
XLyjDn8e5NRMEkJ6EYhNsDCb1Lo6v66N0cbR12TdtgetYfLV+Vjd3fzs7M1XtGN0hcV1+N6No6/I
2s2/NUHYXH993Dk1beKx2hnOOe3ie+CCTqWhnwx3cIB2+2Zj4bdp+lsNgpbeV62OWRmC6D256f80
ylOWhkuSfh5wXXB9hJs1FFlCyKToWKAxfYuGCaCxQkPVqUYKx7MRhgqug+/sxPF9tILvcNDQ+nW6
QQfp9g4GQH7Y0+9yEphG/qcuAtTU63eQZI2XVfc78Ht5zhqKLCFkSlon1dBwdrKR8oa4VAyNIbZa
v3Ou+HfARaOLEa2HDTJIo0+TAvgxsstLYBx01hKPlNUs/0NIpqR/48n8WUORJYQQQjKCIksIIYRk
BEWWEEIIyQiKLCGEEJIRFFlCCCEkIyiyhBBCSEZQZAkhLRRTdzXaXRcJzdACvOlIc0GPEw7V2hyF
R3hKIZ97OgnJAoosIUNMUysTIYOipsQTYopGwhoKFbsQH3ETS8WdFRDQFhHFq/XwWIq6lCcePpwA
IX0DRZaQIQaamr4t3zQsCUiHA9e38KqNhvTOgURckyfxVPHYvbFYKvrFeCxFuRTCg6gT0p9QZAkZ
ZmK8kUUtDlPEkDM3QwMhthamHg+P/Yk5rUo8Q+p4I4weCwJbwgPkR/A0KRVY3Rdt2xgiuaDrOU7o
FRDS41BkCRlSGloVBoyNqWHQbBjCuBXTt1Gh5a1HHRC7Urlsz9HFY+6S07CRLN4Vs7gS3gXdgOJK
+pABENmkb40a6rVUkwUv9mDpRKibjZ0NJoYQMjxY+ceL0pOXpQPUFQhbqDM2fk3+Q2hHxteZDlUg
PEdXB7ENDYXYj6g7UntzvMhOIKn7hPQwfS6yXv0x3aVOUunhoOcdNkNPPI7CK54swbqjVseVnrCQ
g5DhBTVCzRcgoUJYpUCdaooYBDBZ62sU/I0mHaxA9eTwGMkuUPeG7/xP+97mt6ZOj5A+oc9FNlXh
vBvcBuzCq5X8RVpjYxpWmuIDhAwFYcanKVopOUOg3acTmgiMLOdpRzWMLDWerQhOy9/sqSWvuCvp
V9Wqo3ZoTBdX9OvD94VzwNl07lsJyYe+FtlYTz+yZf7JuyFRC9Va5RPBNa2ZqLCoziPaYiDhterY
VNpMyIDTKlep5sAqhv4rFK3eLFJbGG2ymtaMNdfmI3y+VKxYHY30X1k7w8ViJCPqn4+vb8QipD/p
+/JrlTN4m+qqgSmvvSS4pCFIbCM8qsm8ynC8uJmQybA1C6gkWjvQacXtO3W10HEN9QP/l6rdduUZ
NsI0sAgKlckr1BzBYfCe0UAYr6YXYoEOfRUhuTIQnURrI0DLTe2oqFGsY12tnfWxUUssDPGx2KKe
TFMRMtT4tVjFaxBcrx24XXWhuovVILgQO0Rv1Ls5guM1GyJ8M46Mb0+92LtTX0ZIzgyEyBot3Vwk
zCpvIVx3WjgvTHshzG/xKxUR0irMhAwToevpD6BobRAwqgUF3GYTJffUap2xeoQdcyZ8YxhNp3Gx
TaGb48+v9WwJ6T0GopQ2KvskNR8VuFzfYlNd1k5YBY4k1oaDkGEGMpaWMlQfNApY7WB1RP+bAJsH
/zDCTH+iQ+h3hK9JmiS7rShU5vDfwd0CvCuA9A99L7IYizYSgSfCgKRWhq3wmLbrrlxlU13zw2Um
QojJVehy4r/doqPqFe4tr9vehsDZ/bSobSD5VCeVDsdKjhfbt6r5/bupfeE2onDGnfx6QrKioU/9
SKiKzcbB0EB4QzUs6mZJKuqbr4Z77+xxqCbGuq/Y18knZM54DWiIaQo8g6lRQ6yyhXrTcaxOBi+O
j7EqFl7ZQqwkNE27cyWkV+lzlfFebZBU1L4JlVIDMF0MoYWNr6AZNRqE9AVhpBrGp0ldaFGw0InV
aoS6ZfsQGxdeJsadNTgOvl5deEu6AdfN/iX7w9KrcnMfIT0Oim6fowraoqyQ3EadNKLwmLawkYBe
8gAkn5A5obUlVX/gDZspGWupX4Q0aBSRMNhpDHmwYj2522Nc8Wk0yuGiwDDQ/yrjyyKnRH9svG3E
3jhCCGmiTUCqCsEb7ihPmQaGcICwHsR7B+0siiXGMxsTP1xLS+IfaEvS2Ei/mqU98c/JEoK3rq1s
3ZbFhaVxEFiEhOcU6C9g2x6GWyhThxhoerTGTBc0AOXEQggcTGglm+ppxonNwm0J+KHxk+OHdhvH
pDsIGQbQNPRZ8+D3ybe6RR01Yf2Fja4KUquPNcKNyT43CC7uV1S3kX4FqQ6vGJzic9NxE9DWwrzE
hPY3lJ04qicvf8AfSN7qVK8n24NPyIkhwX9ULwwTEp8WVUQellJASEZcdtllct555yVbs2eHx9GG
30ZPLS4EtY4ZrFR4qYxFjzrCiqqTfm5Q3LqmEW6keYB8qNZGreErlrGsbfrHaefaMKXRZqqIxhUp
q79kw1dkcFm3Sya6eMIezsHvmixX5oueyVAwQWcGHdfOCeaFBYaC4H5CyKz593//d3n44YeTrdmz
o+OEqupTkE0X76stYgYr2Q4vIyjaLKo/M7nd5wbFLZYgcbqtjRzyAc+Gtofx6D+fLW/3uem5Kfz2
SezA8R31x3EsGEjjwUDFYlnG9Ceo4Ul8unvCcQaQoRPZKfHeWbqQDDAo4OF2iXQxSG6JUrA/WDND
xl0CH4YaQnbIM888I5dffrlceumlct999yWhInfddZe88MIL8vLLL8stt9wiY3j9lfLaa6/J7bff
LqtXr5Z77rlHNmzYYOHOj370I/nd734nr7zyih33tttua3ucNJienMzwxj4Y/GUV1qgeS7mkwpuE
DbKhwiK9JRVYbFuaVRDhethszeQD7YFZ8NfVqRf14OWaWQ0PMEkesRfV0cERGVHdr49VGx8ddAra
y+iJprKgP0SPnEobtNBYoZqoK1kVkjzyA0evqiFlZaQRNQ+hlqjwOAIXYPQ631T7q7Nulmu+fYK8
Xf2LbCFZ83p4lvR2+ehPOpGnJ5xwgvzsZz+TD37wg/LUU0+ZOF588cVy/vnny9/8zd+YiOL62/77
7y+//OUv5d5775W//uu/lt12203e//73yyOPPCJvvPGG3H///XLooYfaMZcvX25xbrrpJqnVavLx
j39cfvvb3447ztKleGVBE5TNdiB1Xjw9pdheWtpVNtVfDQFDBPJgWXmFbKq9butSMM6dC+k8hd+X
lobrss39AH6Eb1H70tm3yLWXHy+7qB9veMqLbrQjfSOy2Ic4XQGnlfrq9FlmdUZ5FAYcPfQtUyLb
eIhsU2QRgnd7btHE/tWZN8p313xJ/kTDlqQ6H1nTjcox6Mw1T5999ll55zvfaSPP4447zsKuuuoq
G6FiFDoyMiLHHnusbN68WX7961/b/g984AOyzz77yA9+8AMplUry5ptvyt577y3HH3+8XHnllRYH
Irtp0ya54oor5Itf/KIJautxWjnyzFv0P9LiTXvTjbVcF4slqVbH9Jzm2Xa1WpN580ZUuJOOZZvP
DYKL9FUqZR39V6VcLmmel7XjoqNIHXmiOQ0//46P096FN9R/tBYYwdYwL6yj57Jma2g5wtRwScsC
xr/R1m32HPna6Ga55TtflWW6v/FmpxzoRjvCkexsSJ9mUtY6TV75gW8ISQiC2fzG0CfFlRPoLqrS
Vo14zJn/JFevOVl21e0lat5jzRqKbOeZa54+/fTT8q53vUs++clPyve+9z15+9vfLlEUyfbt22XB
ggV2/FZxfPzxx20Uu2LFCtt+7rnn5C/+4i/kwx/+sNx4440WBpF93/veZ6NeZ0ci+zs1L8tptxUP
X7nocHliywNhUU4qfBBd7wpjG7b/4sNl3eYHJo0/ExfAj+PjezAzBrCNvPVwTPAjvr2MXw2jV/jh
YpYsL7rRjiAP+oLpZEyeKxkb5Pt7dRY9d7v+ijSgR6ouUgbz6y6tBQSCi0oFUrlAhpB9991X/uEf
/kEefPBB2WuvvWwq96yzzpLnn3/eGrN27LrrrnLdddfJIYccIsuWLbPPrF+/Ptnb5Igjjkh802NP
tT3auJhxSbseLtvXWthknxsk1w3bb1ND2tvFm4371sSQl7iEBMN3eN7C7+Gw3dR2VsNrE+0xt2qD
Tt+I7HTIayWjCRKE1q0hTZ2z0ES139cxw7kn4upW0iB7vnOEcAhtIqr6z6IkjScqxzBUEDI1Z599
trz00kt2XfYjH/mI/PCHP7RRKBZDteNDH/qQXH/99XL66afLb37zGxPYgw46KNnbZDKRnoxFWjiX
qE3XLUTrpxVvEN1Cff204u3Q1TZkqRrc+dpuzK+HfbhajrBFcSTzoprMj6saVjNhhWH0CoGd+Jjb
waRvRNYrXS+sZARalsaTXJvomOtMN/5sXYCsTZd2JM631V/ALEKS4LAaOYAjDEMlIe35t3/7Nzn1
1FNl3rx58qlPfUq+853v2AImTOtidNsKOq5PPPGEXbc9+eSTbaHT/PnzZd26dUmMOZDu9E7DrAy3
CR8G61jaG2hLgMZAe93h7gPsS+LggR+YopVyiKKb6MjbjJidyOCTaml7H6xkxDQTxBUCiOs4l1xy
ie2DWP7nf/6nCeR3v/tduy50xx13yO67725TWI8++qiccsopsueee9qKRgc9aiy4eMc73iHf/OY3
2x5nAlqQGkvY1WwFroZ10nWbbvzZuOH8k8qAcN10s6diIY5VJrWkQtQLxcZiqULyAm8ynOy3335y
8803y0UXXWSd1Gq1ap1dcOCBB5r7lre8pVGfMKVcqVTkoYcesri4Hos6jUVObetZivRxcN13IijL
M3Gd6canO9F1C81DO82MVXkhsA1R9UiNtmUIiHuE9KloBUx8TXQEa3FUBJOQOFZxjLXyxaOjo7Z9
zDHHxEcddZT5wfvf//74c5/7XFyr1WxbK3O8fPny+Otf/7ptg5122ikulUrxP/7jP8YbN260sNbj
tBKl3KxMC2/b8E6b5rYZ/MilyPzVJBTo//qYWhxv1q0jzrwpflzdkFMamBM9VFQHhk7k6aWXXmr1
p1wux4sWLYpHRkbiyy67LNkbx/fcc0+8YsUK+67169fHq1evjpcsWWLxdAQcn3feefGaNWvsGOec
c459BnUyfQzQepy5gvo1rHS0Lk1sUIxI2wZvUxoeNCg1bUvi7dbCjCZx8qQb7UjfrC7upZWMmEKu
jKTf6YMeGXp0s3fxwAdMqsCNcB1j/kL9nu26hSuf0z/OTN3wuG6A7ynqf4xOMVrFfoQirhIV5U0N
+qszbpT/deWXbLHDUvxcNiLOnh2VDzJzOpWnuCa7du1aO94BBxxgi5vSoL7gXljURbB161abNj74
4INtqhm8+OKLsnjx4gn3v6ZpPc5cKBR0hBV72R8uOlqX/DBoB1J+e/Ri0obYCBabcItVtUhbGbQs
Ramo5dSEGN1oR0Iu9AG9tJKxpgKLm9+bpgI0S3ejupvU3axFDdub1N1arEg9XqrbpUa8rNwtWsw3
m8GPG8XLakXZav4QZyP2aUnZptsj5YotueeiJ+K89a1vtY4rFjW1CizA/bJpYVy4cKFdj3WBBXvs
sceUAgtajzORpEM4LdcNDJvrTDf+FK5davLrvBZoYoq7FnA5ye5eQDgMaqNtG27ewRVaDFPyFNhu
0Xf3yWLkiie+/OpXv5If//jHNuLE9VbcFN86AsV1IVz7Oeecc+Q973mP9bKPPPJIWbly5biRLFZI
nnvuubYNdjSSPfrr35F6AXeJhmuUcy0qSDde/YSeOhoenDNG6WiM4M+Soi2A8r4WKgR696hEOsbV
4LhQ0ToUS0XP0d5eoiJ705ovyXKNsTDW7QIk1z+fHd3ogQ46g5WnKLPTZ7hHsp1Le7r0hHUqCgIL
mBEzj1qyvsQ3zfHfK/u2I003ynxPiixcbKfBSkYI47XXXtvYh1XBWHyBx69hAUVaHLGS8c/+7M9s
RfHRRx9t8SFcO++8sxxzzDFzEtn/UkMRxdnCZla924PjpFO836IPyrotv022ssOLOL47nRaEw+9V
Ef1PyClsoRrGHGXBYhX0R7OvKIMlCL1BvnmqpQkduqSQt35rs+zPtjbNrAwOc3nKJ+3p3zH79mG6
dON3753Up0BGtNJLKxlxhXf3xDB55Tdkz8X8eDBsy+iT9lSl1nidNpw/zNPifuzDzeQwD8dzRndS
1V2sWYLp4jiG9PZkESK9SEdWk3p5a3VJb4HfxW3IUVXvCaZzKj2zkjHjJXEq7NPKj7mD1X1hNTHw
RYBhLTbCxuLR6pht1/EPEbCguFqzc8yTHiqqA0O+eYqC01yNjtLTvgR5vPFxO80wlyemPV/67pps
lisZIW0+iN66bats3rTRjo9rGOPQeHYPqTLXBUB4swiuxyI9eOOIdiAsHNsYRbcb1XcK5DbWF4OQ
Dn/QBBYthIniulSkWqvLvFJJamM1qYzo+WGhA36rAtZCh/PNmumWDzJ98s1TH8WGkY1/68TSjXjj
44BO14JhLk9Me75p7zuRzRJ8ex3vXtQ6jvOBAOqoN+wcB258CQ0B/s+1AYCYQmgB8gDfDctHZAON
W3UahBWD1aig+VEKIqwBdpORiiuW6OM/bvrJY0qoF8rHoNFTeYrTsOnkpB6opUtkqGe+fzJ3+gxz
eWLa8037zErmgIM6Xi7iflUVNqvliTuB8OB8WCck0AUWoBA4aX8W4OiejqavaVgtWFGBDfsV/UA4
J395QD4CS4aA1PXadJWDf3wV9HitLiG9CVtIx2pyUp2hI2qlimYP/G1IovQ9k6fDhXbq/YTMDYhk
e6FEbRy3J/3cz1YjpEdh6XTQky7WJIpGkwBCSPagCUpbs+OHq/24QQyudfR8RzsjpEehyKaIo1iK
JdyWQgghhMwdimyDohSK+TxYgRBCyHBARSGEEEIygiJLCCGEZARFlhBCCMmInhLZYX7YAB484a4/
BYq0B/lDCCH9QE+05HicIJ6shAcdwD9soHMBUfUnPyEvXGyHHeSD5w8emQn8KVzeMSGEkF6l6yKL
BhTP63VB8Wf39gJ4cCCeZ4wzG9X2fJvamxnoHjoXPnrFG4NcVNo/0nG4QD6g44U8wku7kU9eVrCP
EEJ6GU4XTwEerxgV8HxekUoxlgXqWZKR7kFQIR54PR8ExUdww47niQsr8oSdj9mBPPQyNUyzAOmy
44THgw4P7X7vYWhf0ml0v5cHd7OmJ0QWie3OqARj1VobCwUS1bBsUouMyq5SegVw8fDCMGwNQTs8
D7x8+EwHRrfD0Eh0ApQvvyTjIF+HoXwh7Ug3yoqnF2HDVHaQVq8/3tagzR2G39/T6L8/ygKstT5k
SddF1hOOHx/+vHoXDn6CgspqcGFZyml70gXBKwEYpoZgMjxvvGGEoYxAbH0fmRzkGxpY5BeuaSPP
vMEZhvKFtHvb4untToe+O/hv7fXH056XwHQbb0/993d9QX3wfVnTE6+6SzeaXiBQCPIW3F4A+eCL
v7yBGGa8cni5cOBH+LA0FnMB+eR1yqs78jNd1gYVpNvrEVxPf9o/6KAdRXrTbavXH4QPOki/txNw
UeaRF3nRdZHF17dL8GThg0hrWn17mPJgR6TzApUEAsH8mR4uMMDzzDu2gw7SjfR7h8K33R0GWjvu
KAMwCM6gD2S8Y+m/NdLvac6r/eiZl7YTQrIBVRzmDYz36ocBT2+6ozFseZAWE++gujvo4HdH2tNi
6mUhnS9ZMjwXJwgZQvw6rPfk06OXYehfpwXWOxsusJ4ng4wLiafVhRXuMPz+3rEC6Fh4WUAdyENg
AUeyhAw4rQ0tGhlvbAYdT6fnAUj7hw1P+7CM5tv9/mmhzSMPKLKEEEJIRnC6mBBCCMkIiiwhhBCS
ERRZQgghJCMosoQQQkhGUGQJIYSQjKDIEkIIIRlBkSWEEEIygiJLCCGEZARFlhBCCMkIiiwhhBCS
ERRZQgghJCMosoQQQkhGUGQJIYSQjKDIEkIIIRlBkSWEEEIygiJLCCGEZARFlhBCCMkIiiwhhBCS
ERRZQgghJCMosoQQQkhGUGQJIYSQjKDIEkIIIRlBkSWEEEIygiJLCCGEZARFlhBCCMkIiiwhhBCS
ERRZQgghJCMosoQQQkgmiPx/jEto+eBYmtMAAAAASUVORK5CYII=

------MultipartBoundary--2Hb86SC5IF73wzejCOniQLPwzApgq17RDTDnv97fDC------
